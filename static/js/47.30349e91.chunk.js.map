{"version":3,"file":"static/js/47.30349e91.chunk.js","mappings":"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","sources":["components/LoginAndRegister/RegisterAndLogin.styled.js","components/LoginAndRegister/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors'\nimport {  Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  width: 1280px;\n  height: 686px;\n  padding: 0  32px 32px 32px;  \n`\n///////////////// ing /////////////////////////////\nexport const ImgContainer = styled.div`\n  position: relative;\n`\nexport const PetImg = styled.img` \n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`\nexport const SmsImg = styled.img` \n  position: absolute;\n  bottom: 97px;\n  left: 61px;\n  width: 294px;\n  height: 121px;\n  border-radius: 20px;\n`\n\n\n///////////////// ing /////////////////////////////\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center; /* Выравниваем элементы по центру вертикально */\n  width: 592px;\n  height: 654px;\n  padding: 20px 84px;  \n  background: ${color.white};\n  border-radius: 60px;\n`\n\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.22;\n  letter-spacing: -0.03em;\n  margin-bottom: 32px;\n  margin-top: 16px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({page}) => (page === \"login\" ? '64px' : '32px')};\n  margin-bottom: 16px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 424px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 52px;\n  border: 1px solid\t${({error, right}) => (error === \"true\" ? color.redWrong :(right ===\"true\" ? color.greenRight : color.blackPrimaryLight))};\n\n  border-radius: 30px;\n  padding: 16px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  stroke: ${color.orangePrimary};\n  fill: none;\n`;\n\nexport const TopRightSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: ${({right}) => (right || '15px' )};\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  fill: none;\n`;\n\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${({error}) => (error ? color.redWrong : color.greenRight )};\n  padding: 4px 0px 0px 16px;\n`;\n\n\nexport const AuthorizationLink = styled(NavLink)`\n  margin: 0 auto;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  letter-spacing: -0.03em;\n  color: ${color.blackPrimaryFiftyPercebt};\n`;\n\nexport const AuthorizationLinkSpan = styled.span`\n  color: ${color.orangePrimary};\n`;","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ContentContainer, Title } from 'common/GiobalStyles';\nimport { AuthorizationLink, AuthorizationLinkSpan, Container, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, ImgContainer, PetImg, SecureMessage, SmsImg, Text, TopRightSvg } from './RegisterAndLogin.styled';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { useState } from 'react';\nimport ButtonOrange from 'components/Buttons/ButtonOrange/ButtonOrange';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/operationsAuth';\n\nimport desctopRegisterDog from '../../img/loginAndRegister/DesctopRegisterCat.jpg';\nimport registerBlock from '../../img/loginAndRegister/registerBlock.jpg';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n  \nconst schema = Yup.object({\n  name: Yup.string().required('Required'),\n  email: Yup.string().matches(/^\\w+([.-]?\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n  confirmPassword: Yup.string().required(\"Required\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);  \n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const toggleConfigPasswordVisibility = () => {\n    setShowConfirmPassword((prevShowPassword) => !prevShowPassword);\n  }; \n  \n  const handleSubmit = async (values) => {\n    const {  confirmPassword, ...dataToSend } = values; \n\n    try {\n      await dispatch(register( dataToSend)).unwrap();\n      navigate('/profile');\n    } catch (error) {\n      if (error === \"Request failed with status code 409\") {\n        toast.error(\"User with this email already exists.\");\n      } else {\n        toast.error(\"Registration failed. Please try again later.\");\n      }\n    }\n  }\n\n  return (\n    <ContentContainer>\n      <Container>\n        <ImgContainer>\n          <PetImg srcSet={desctopRegisterDog} alt=\"cat\" />\n          <SmsImg src={registerBlock} alt='message' />\n        </ImgContainer>\n\n        <FormContainer>\n          <Title>Registration</Title>          \n          <Text>Thank you for your interest in our platform. </Text>\n\n            <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields>  \n                    <FormConteiner>  \n              \n                      <FormFieldConteiner>\n                        <FormField\n                          id=\"name\" \n                          name=\"name\" \n                          type=\"name\" \n                          placeholder=\"Name\" \n                          error={errors.name && touched.name ? \"true\" : \"\" } \n                          right={touched.name && !errors.name ? \"true\" : \"\"}\n                        />\n                        {touched.namee && (\n                          errors.name ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.name && !errors.name && <SecureMessage error={errors.name && touched.name ? \"true\" : \"\" }>Name is secure</SecureMessage>}\n                       {touched.name && errors.name && <SecureMessage error={errors.name && touched.name ? \"true\" : \"\" }>Enter a valid Name</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"email\" \n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email\" \n                          error={errors.email && touched.email ? \"true\" : \"\" } \n                          right={touched.email && !errors.email ? \"true\" : \"\"}\n                        />\n                        {touched.email && (\n                          errors.email ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.email && !errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" } >Email is secure</SecureMessage>}\n                       {touched.email && errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" }>Enter a valid Email</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"password\" \n                          name=\"password\" \n                          type={showPassword ? \"text\" : \"password\"} \n                          placeholder=\"Password\" \n                          error={errors.password && touched.password ? \"true\" : \"\" } \n                          right={touched.password && !errors.password ? \"true\" : \"\"}\n                        />\n                        {touched.password && (\n                          errors.password ? (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.password && !errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" } >Password is secure</SecureMessage>}\n                       {touched.password && errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" }>Enter a valid Password</SecureMessage>}\n                       \n                        {showPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n\n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"confirmPassword\" \n                          name=\"confirmPassword\" \n                          type={showConfirmPassword ? \"text\" : \"password\"} \n                          placeholder=\"Confirm password\" \n                          error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" } \n                          right={touched.confirmPassword && !errors.confirmPassword ? \"true\" : \"\"}\n                        />\n                        {touched.confirmPassword && (\n                          errors.confirmPassword ? (\n                            <TopRightSvg  right=\"50px\">\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg  right=\"50px\">\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.confirmPassword && !errors.confirmPassword && <SecureMessage error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" } >Confirm password is secure</SecureMessage>}\n                       {touched.confirmPassword && errors.confirmPassword && <SecureMessage error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" }>Enter a valid Confirm password</SecureMessage>}\n\n                        {showConfirmPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n                            \n                    </FormConteiner>   \n                    <ButtonOrange label='Registration' />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>            \n            <AuthorizationLink to=\"/login\" >Already have an account? <AuthorizationLinkSpan>Login</AuthorizationLinkSpan></AuthorizationLink>\n       \n        </FormContainer>        \n      </Container>\n    </ContentContainer>\n  );\n}","import Register from \"components/LoginAndRegister/Register\";\n\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ImgContainer","_templateObject2","PetImg","_templateObject3","SmsImg","_templateObject4","FormContainer","_templateObject5","color","Text","_templateObject6","FormFields","_templateObject7","_ref","page","FormConteiner","_templateObject8","FormFieldConteiner","_templateObject9","FormField","Field","_templateObject10","_ref2","error","right","EyeSvg","_templateObject11","TopRightSvg","_templateObject12","_ref3","SecureMessage","_templateObject13","_ref4","AuthorizationLink","NavLink","_templateObject14","AuthorizationLinkSpan","_templateObject15","initialValues","name","email","password","confirmPassword","schema","Yup","required","matches","min","oneOf","Register","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","toggleConfigPasswordVisibility","_jsx","ContentContainer","children","_jsxs","srcSet","desctopRegisterDog","alt","src","Title","Formik","validationSchema","onSubmit","async","dataToSend","values","register","unwrap","toast","errors","touched","Form","id","type","placeholder","namee","href","concat","sprite","onMouseDown","e","preventDefault","ButtonOrange","label","to","LoginPage"],"sourceRoot":""}