{"version":3,"file":"static/js/882.3bb9e970.chunk.js","mappings":"kWAKO,MAAMA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAQtBC,EAAeH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iCAGzBG,EAASL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sEAKnBK,EAASP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6HAWnBO,EAAgBT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2rBAQvBS,EAAAA,EAAAA,OAKHC,EAAOZ,EAAAA,GAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kJASfY,EAAad,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,4FAG3Bc,IAAA,IAAC,KAACC,GAAKD,EAAA,MAAe,UAATC,EAAmB,OAAS,MAAM,IAI3CC,EAAgBlB,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,oEAM1BkB,EAAqBpB,EAAAA,GAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,iDAK/BoB,GAAYtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAawB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,wJAGhBuB,IAAA,IAAC,MAACC,EAAK,MAAEC,GAAMF,EAAA,MAAgB,SAAVC,EAAmBf,EAAAA,EAAAA,SAA0B,SAATgB,EAAkBhB,EAAAA,EAAAA,WAAmBA,EAAAA,EAAAA,iBAAwB,GAK5HA,EAAAA,EAAAA,OAGHiB,EAAS5B,EAAAA,GAAAA,IAAU6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,kJAOpBS,EAAAA,EAAAA,eAICmB,EAAc9B,EAAAA,GAAAA,IAAU+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,kIAG1B8B,IAAA,IAAC,MAACL,GAAMK,EAAA,OAAML,GAAS,MAAM,IAO3BM,EAAgBjC,EAAAA,GAAAA,EAAQkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,2EAE1BiC,IAAA,IAAC,MAACT,GAAMS,EAAA,OAAMT,EAAQf,EAAAA,EAAAA,SAAiBA,EAAAA,EAAAA,UAAgB,IAKrDyB,GAAoBpC,EAAAA,EAAAA,IAAOqC,EAAAA,GAAPrC,CAAesC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,sIAMrCS,EAAAA,EAAAA,0BAGE4B,EAAwBvC,EAAAA,GAAAA,KAAWwC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,wBACrCS,EAAAA,EAAAA,c,gPC1GX,MAAM8B,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,GAAW,CACxBH,MAAOG,EAAAA,KAAaC,QAAQ,8CAA+C,yBAAyBC,SAAS,YAC7GJ,SAAUE,EAAAA,KAAaE,SAAS,YAAYC,IAAI,EAAG,4CAGtC,SAASC,IACtB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,GAE3CC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAA2BA,KAC/BN,GAAiBO,IAAsBA,GAAiB,EAc1D,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAAAC,UACfC,EAAAA,EAAAA,MAAC/D,EAAAA,GAAS,CAAA8D,SAAA,EACRC,EAAAA,EAAAA,MAAC3D,EAAAA,GAAY,CAAA0D,SAAA,EACXF,EAAAA,EAAAA,KAACtD,EAAAA,GAAM,CAAC0D,OAAQC,EAAiBC,IAAI,SACrCN,EAAAA,EAAAA,KAACpD,EAAAA,GAAM,CAAC2D,I,sxOAAiBD,IAAI,gBAI/BH,EAAAA,EAAAA,MAACrD,EAAAA,GAAa,CAAAoD,SAAA,EACZF,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CAAAN,SAAC,YACPF,EAAAA,EAAAA,KAAC/C,EAAAA,GAAI,CAAAiD,SAAC,uEAGNF,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAAE3B,cAAiBA,EAAe4B,iBAAkBzB,EAAQ0B,SA1BtDC,UACnB,UACQlB,GAASmB,EAAAA,EAAAA,IAAMC,IAASC,SAC9BnB,EAAS,WAOX,CANE,MAAO7B,GACO,wCAAVA,EACFiD,EAAAA,GAAAA,MAAY,wCAEZA,EAAAA,GAAAA,MAAY,+CAEhB,GAgBgGd,SACrF7C,IAAA,IAAC,OAAE4D,EAAM,QAAEC,GAAS7D,EAAA,OACnB2C,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAAAjB,UACHC,EAAAA,EAAAA,MAAChD,EAAAA,GAAU,CAACG,KAAK,QAAO4C,SAAA,EACtBC,EAAAA,EAAAA,MAAC5C,EAAAA,GAAa,CAAA2C,SAAA,EAEZC,EAAAA,EAAAA,MAAC1C,EAAAA,GAAkB,CAAAyC,SAAA,EACjBF,EAAAA,EAAAA,KAACrC,EAAAA,GAAS,CACRyD,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZxD,MAAOkD,EAAOlC,OAASmC,EAAQnC,MAAQ,OAAS,GAChDf,MAAOkD,EAAQnC,QAAUkC,EAAOlC,MAAQ,OAAS,KAElDmC,EAAQnC,QACPkC,EAAOlC,OACLiB,EAAAA,EAAAA,KAAC7B,EAAAA,GAAW,CAAA+B,UACVF,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,0BAGtB1B,EAAAA,EAAAA,KAAC7B,EAAAA,GAAW,CAAA+B,UACVF,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAI1BR,EAAQnC,QAAUkC,EAAOlC,QAASiB,EAAAA,EAAAA,KAAC1B,EAAAA,GAAa,CAAEP,MAAOkD,EAAOlC,OAASmC,EAAQnC,MAAQ,OAAS,GAAImB,SAAE,oBACxGgB,EAAQnC,OAASkC,EAAOlC,QAASiB,EAAAA,EAAAA,KAAC1B,EAAAA,GAAa,CAAEP,MAAOkD,EAAOlC,OAASmC,EAAQnC,MAAQ,OAAS,GAAImB,SAAC,4BAGxGC,EAAAA,EAAAA,MAAC1C,EAAAA,GAAkB,CAAAyC,SAAA,EACjBF,EAAAA,EAAAA,KAACrC,EAAAA,GAAS,CACRyD,GAAG,WACHC,KAAK,WACLC,KAAM/B,EAAe,OAAS,WAC9BgC,YAAY,WACZxD,MAAOkD,EAAOjC,UAAYkC,EAAQlC,SAAW,OAAS,GACtDhB,MAAOkD,EAAQlC,WAAaiC,EAAOjC,SAAW,OAAS,KAExDkC,EAAQlC,WACPiC,EAAOjC,UACLgB,EAAAA,EAAAA,KAAC7B,EAAAA,GAAW,CAACH,MAAM,OAAMkC,UACvBF,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,0BAGtB1B,EAAAA,EAAAA,KAAC7B,EAAAA,GAAW,CAACH,MAAM,OAAMkC,UACvBF,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAI1BR,EAAQlC,WAAaiC,EAAOjC,WAAYgB,EAAAA,EAAAA,KAAC1B,EAAAA,GAAa,CAACP,MAAOkD,EAAOjC,UAAYkC,EAAQlC,SAAW,OAAS,GAAIkB,SAAE,uBACnHgB,EAAQlC,UAAYiC,EAAOjC,WAAYgB,EAAAA,EAAAA,KAAC1B,EAAAA,GAAa,CAACP,MAAOkD,EAAOjC,UAAYkC,EAAQlC,SAAW,OAAS,GAAIkB,SAAC,2BAEhHX,GACCS,EAAAA,EAAAA,KAAC/B,EAAAA,GAAM,CAAC0D,YAAcC,IACpBA,EAAEC,iBACF/B,GAA0B,EAC1BI,UACAF,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAGtB1B,EAAAA,EAAAA,KAAC/B,EAAAA,GAAM,CAAC0D,YAAcC,IACpBA,EAAEC,iBACF/B,GAA0B,EAC1BI,UACAF,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,4BAM5B1B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAY,CAACC,MAAM,eAEjB,KAGX5B,EAAAA,EAAAA,MAAC1B,EAAAA,GAAiB,CAACuD,GAAG,YAAW9B,SAAA,CAAE,gCAAuBF,EAAAA,EAAAA,KAACpB,EAAAA,GAAqB,CAAAsB,SAAC,wBAK7F,CC3Ie,SAAS+B,IACtB,OACEjC,EAAAA,EAAAA,KAACV,EAAK,GAEV,C","sources":["components/LoginAndRegister/RegisterAndLogin.styled.js","components/LoginAndRegister/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors'\nimport {  Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  width: 1280px;\n  height: 686px;\n  padding: 0  32px 32px 32px;  \n`\n///////////////// ing /////////////////////////////\nexport const ImgContainer = styled.div`\n  position: relative;\n`\nexport const PetImg = styled.img` \n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`\nexport const SmsImg = styled.img` \n  position: absolute;\n  bottom: 97px;\n  left: 61px;\n  width: 294px;\n  height: 121px;\n  border-radius: 20px;\n`\n\n\n///////////////// ing /////////////////////////////\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start; /* Выравниваем элементы по центру горизонтально */\n  justify-content: center; /* Выравниваем элементы по центру вертикально */\n  width: 592px;\n  height: 654px;\n  padding: 20px 84px;  \n  background: ${color.white};\n  border-radius: 60px;\n`\n\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.22;\n  letter-spacing: -0.03em;\n  margin-bottom: 32px;\n  margin-top: 16px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({page}) => (page === \"login\" ? '64px' : '32px')};\n  margin-bottom: 16px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 424px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 52px;\n  border: 1px solid\t${({error, right}) => (error === \"true\" ? color.redWrong :(right ===\"true\" ? color.greenRight : color.blackPrimaryLight))};\n\n  border-radius: 30px;\n  padding: 16px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  stroke: ${color.orangePrimary};\n  fill: none;\n`;\n\nexport const TopRightSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: ${({right}) => (right || '15px' )};\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  fill: none;\n`;\n\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${({error}) => (error ? color.redWrong : color.greenRight )};\n  padding: 4px 0px 0px 16px;\n`;\n\n\nexport const AuthorizationLink = styled(NavLink)`\n  margin: 0 auto;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  letter-spacing: -0.03em;\n  color: ${color.blackPrimaryFiftyPercebt};\n`;\n\nexport const AuthorizationLinkSpan = styled.span`\n  color: ${color.orangePrimary};\n`;","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ContentContainer, Title } from 'common/GiobalStyles';\nimport { AuthorizationLink, AuthorizationLinkSpan, Container, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, ImgContainer, PetImg, SecureMessage, SmsImg, Text, TopRightSvg } from './RegisterAndLogin.styled';\nimport sprite from '../../img/sprite.svg';\n\nimport desctopLoginDog from '../../img/loginAndRegister/DesctopLoginDog.jpg';\nimport loginBlock from '../../img/loginAndRegister/loginBlock.jpg';\nimport { useState } from 'react';\nimport ButtonOrange from 'components/Buttons/ButtonOrange/ButtonOrange';\nimport { logIn } from '../../redux/auth/operationsAuth';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  email: Yup.string().matches(/^\\w+([.-]?\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Login() {  \n  const [showPassword, setShowPassword] = useState(false);  \n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const handleSubmit = async (values) => {\n    try {\n      await dispatch(logIn(values)).unwrap();\n      navigate('/profile');\n    } catch (error) {\n      if (error === \"Request failed with status code 409\") {\n        toast.error(\"User with this email already exists.\");\n      } else {\n        toast.error(\"Registration failed. Please try again later.\");\n      }\n    }\n  }\n  return (\n    <ContentContainer>\n      <Container>\n        <ImgContainer>\n          <PetImg srcSet={desctopLoginDog} alt=\"dog\" />\n          <SmsImg src={loginBlock} alt='message' />\n        </ImgContainer>\n\n\n        <FormContainer>\n          <Title>Log in</Title>          \n          <Text>Welcome! Please enter your credentials to login to the platform: </Text>\n\n\n          <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields page='login'>  \n                    <FormConteiner>  \n\n                      <FormFieldConteiner>\n                        <FormField\n                          id=\"email\" \n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email\" \n                          error={errors.email && touched.email ? \"true\" : \"\" } \n                          right={touched.email && !errors.email ? \"true\" : \"\"}\n                        />\n                        {touched.email && (\n                          errors.email ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.email && !errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" } >Email is secure</SecureMessage>}\n                       {touched.email && errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" }>Enter a valid Email</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"password\" \n                          name=\"password\" \n                          type={showPassword ? \"text\" : \"password\"} \n                          placeholder=\"Password\" \n                          error={errors.password && touched.password ? \"true\" : \"\" } \n                          right={touched.password && !errors.password ? \"true\" : \"\"}\n                        />\n                        {touched.password && (\n                          errors.password ? (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.password && !errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" } >Password is secure</SecureMessage>}\n                       {touched.password && errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" }>Enter a valid Password</SecureMessage>}\n                       \n                        {showPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner> \n                            \n                    </FormConteiner>   \n                    <ButtonOrange label='Log In' />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>\n            <AuthorizationLink to=\"/register\" >Don’t have an account? <AuthorizationLinkSpan> Register</AuthorizationLinkSpan></AuthorizationLink>\n        </FormContainer>\n      </Container>\n    </ContentContainer>\n  );\n}","import Login from \"components/LoginAndRegister/Login\";\n\nexport default function LoginPage() {\n  return (\n    <Login />\n  );\n}  "],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ImgContainer","_templateObject2","PetImg","_templateObject3","SmsImg","_templateObject4","FormContainer","_templateObject5","color","Text","_templateObject6","FormFields","_templateObject7","_ref","page","FormConteiner","_templateObject8","FormFieldConteiner","_templateObject9","FormField","Field","_templateObject10","_ref2","error","right","EyeSvg","_templateObject11","TopRightSvg","_templateObject12","_ref3","SecureMessage","_templateObject13","_ref4","AuthorizationLink","NavLink","_templateObject14","AuthorizationLinkSpan","_templateObject15","initialValues","email","password","schema","Yup","matches","required","min","Login","showPassword","setShowPassword","useState","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","_jsx","ContentContainer","children","_jsxs","srcSet","desctopLoginDog","alt","src","Title","Formik","validationSchema","onSubmit","async","logIn","values","unwrap","toast","errors","touched","Form","id","name","type","placeholder","href","concat","sprite","onMouseDown","e","preventDefault","ButtonOrange","label","to","LoginPage"],"sourceRoot":""}