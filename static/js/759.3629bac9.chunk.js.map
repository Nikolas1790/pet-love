{"version":3,"file":"static/js/759.3629bac9.chunk.js","mappings":"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","sources":["components/MyNotices/MyNotices.jsx","components/Buttons/EditUserBtn/EditUserBtn.styled.js","components/Modals/ModalEditUser/ModalEditUser.styled.js","components/Modals/ModalEditUser/ModalEditUser.jsx","components/Buttons/EditUserBtn/EditUserBtn.jsx","components/AddPetComponent/AddPetComponent.styled.js","components/AddPetComponent/AddPetComponent.jsx","components/PetsList/PetsList.jsx","components/PetsBlock/PetsBlock.jsx","components/UserBlock/UserBlock.styled.js","components/UserBlock/UserBlock.jsx","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.jsx","components/Profile/Profile.jsx","pages/ProfilePage.jsx"],"sourcesContent":["\nexport default function MyNotices() {\n  return (\n      <div>qqqqqqqqqqqqqqqqqq</div>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const EditUserBtnContainer = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 40px;\n`;\n\nexport const EditUserButton = styled.button`\n  fill: ${color.orangeLight};\n\n  transition: fill 0.3s linear;\n  :hover{\n    fill: ${color.orangeDim};\n  }\n`;\n\n","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\nimport {  Field } from \"formik\";\n\nexport const ModalEdit = styled.div`\n  position: relative;\n  width: 480px;\n  height: 580px;\n  background: ${color.white};\n  border-radius: 30px;\n  padding: 50px;\n`;\n\nexport const TitleModalEdit = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  color: ${color.blackPrimaryCard};\n  margin-bottom: 20px;\n`;\n\nexport const PhotoBlock = styled.div`\n  display: flex;\n  justify-content: center; \n  margin-bottom: 12px;\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n////////////////////////////////////////\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Input = styled(Field)`\n  width: 380px;\n  height: 52px;\n\n  padding: 16px;\n\n  margin-bottom: 16px;\n  border: 1px solid ${color.orangePrimary};\n  border-radius: 30px;\n\n  /* &:not(:last-child) {\n    margin-bottom: 16px;\n  } */\n`;\n\n\n// export const Button = styled.button`\n//   background-color: ${color.primary};\n//   color: white;\n//   padding: 10px 20px;\n//   border: none;\n//   border-radius: 5px;\n//   cursor: pointer;\n\n//   &:hover {\n//     background-color: ${color.primaryDark};\n//   }\n// `;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > ${Input}:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;","import React from \"react\";\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport sprite from '../../../img/sprite.svg';\nimport XButton from \"components/XButton/XButton\";\nimport { ModalEdit,  FormContainer, TitleModalEdit, PhotoBlock, Input } from \"./ModalEditUser.styled\";\nimport ButtonOrange from \"components/Buttons/ButtonOrange/ButtonOrange\";\n\nconst schema = Yup.object().shape({\n  name: Yup.string(),\n  email: Yup.string().email(\"Invalid email format\").matches(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/, \"Invalid email format\"),\n  avatar: Yup.string().matches(/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/, \"Invalid URL format\"),\n  phone: Yup.string().matches(/^\\+38\\d{10}$/, \"Invalid phone number format\"),\n});\n\nexport default function ModalEditUser({ closeModals }) {\n\n  const user = {\n    avatar: null,\n    name: \"Name\",\n    email: \"name@gmail.com\",\n    phone: \"+380\"\n  };\n\n  const initialValues = {\n    avatar: user.avatar || '',\n    name: user.name || '',\n    email: user.email || '',\n    phone: user.phone || '',\n  };\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      await axios.post(\"/api/update-user\", values);\n      closeModals();\n    } catch (error) {\n      alert(\"Error updating user data: \" + error.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <ModalEdit>\n      <TitleModalEdit>Edit information</TitleModalEdit>\n      <PhotoBlock>\n        {user.avatar ? (\n          <img src={user.avatar} alt=\"User Avatar\" width={110} height={110} />\n        ) : (\n          <svg width={110} height={110}>\n            <use href={`${sprite}#icon-user-without-photo`} />\n          </svg>\n        )}\n      </PhotoBlock>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <FormContainer>\n              <Input type=\"text\" name=\"avatar\" placeholder=\"Avatar URL\" />\n              <ErrorMessage name=\"avatar\" component=\"div\" />\n\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <ErrorMessage name=\"name\" component=\"div\" />\n\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <ErrorMessage name=\"email\" component=\"div\" />\n\n              <Input type=\"text\" name=\"phone\" placeholder=\"Phone\" />\n              <ErrorMessage name=\"phone\" component=\"div\" />\n\n              {/* <Button type=\"submit\" disabled={isSubmitting}>Save</Button> */}\n              <ButtonOrange label='Save' type=\"submit\" />\n            </FormContainer>\n          </Form>\n        )}\n      </Formik>\n      <XButton closeModals={closeModals} />\n    </ModalEdit>\n  );\n}\n","import { useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { EditUserBtnContainer, EditUserButton } from './EditUserBtn.styled';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport ModalEditUser from 'components/Modals/ModalEditUser/ModalEditUser';\n\nexport default function EditUserBtn() {\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleLogout = () => {\n    setOpenModal(true)\n  };\n\n  return (\n    <EditUserBtnContainer>\n      <EditUserButton onClick={() => handleLogout()}>\n        <svg width={50} height={50}>\n          <use href={`${sprite}#icon-edit`} />\n        </svg>\n      </EditUserButton>  \n\n      <PortalModal active={openModal} setActive={setOpenModal}>\n        <ModalEditUser closeModals={() => setOpenModal()} />\n      </PortalModal>\n    </EditUserBtnContainer>    \n  );\n}  ","import styled from 'styled-components'\n\nexport const AddPetBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n`\n\nexport const TitleMyPets = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 20px;\n  margin-right: auto; \n`;","import ButtonNav from \"components/Buttons/ButtonNav/ButtonNav\";\nimport { AddPetBlock, TitleMyPets } from \"./AddPetComponent.styled\";\n\nexport default function AddPetComponent() {\n  return (\n    <AddPetBlock>\n      <TitleMyPets>My pets</TitleMyPets>\n      <ButtonNav to='/add-pet' label='Add pet' width='118px'  />\n    </AddPetBlock>\n  );\n}\n","export default function PetsList() {\n  return (\n    <div>\n      nnnnnnnnnnnnnnnnn\n    </div>\n  );\n}\n","import AddPetComponent from \"components/AddPetComponent/AddPetComponent\";\nimport PetsList from \"components/PetsList/PetsList\";\n\nexport default function PetsBlock() {\n\n  return (\n    <div>\n      <AddPetComponent />\n      <PetsList />\n    </div>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const UserBlockContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n\nexport const PhotoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const UploadPhoto = styled.p`\n  font-size: 14px;\n  margin-top: 8px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleInformation = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 20px;\n  margin-right: auto; \n`;\n\n\nexport const UserInfoContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const UserInfoItem = styled.li`\n  width: 440px;\n  height: 52px;\n  padding: 16px;  \n  border: 1px solid ${color.blackPrimaryLight};\n  border-radius: 30px;\n  font-size: 16px;\n\n  &:not(:last-child) {\n    margin-bottom: 14px;\n  }\n`;","import sprite from '../../img/sprite.svg';\nimport { PhotoContainer, TitleInformation, UploadPhoto, UserBlockContainer, UserInfoContainer, UserInfoItem } from './UserBlock.styled';\n\nexport default function UserBlock() {\n  const user = {\n    avatar: null,\n    name: \"Name\",\n    email: \"name@gmail.com|\",\n    phone: \"+380\"\n  };\n\n  return (\n    <UserBlockContainer>\n      <PhotoContainer>\n      {user.avatar ? (\n          <img src={user.avatar} alt=\"User Avatar\" width={110} height={110} />\n        ) : (\n          <svg width={110} height={110}>\n            <use href={`${sprite}#icon-user-without-photo`} />\n          </svg>\n        )}\n        <UploadPhoto>Upload photo</UploadPhoto>\n      </PhotoContainer>\n\n      <TitleInformation>My information</TitleInformation>\n      <UserInfoContainer>\n        <UserInfoItem>{user.name}</UserInfoItem>\n        <UserInfoItem>{user.email}</UserInfoItem>\n        <UserInfoItem>{user.phone}</UserInfoItem>\n      </UserInfoContainer>\n    </UserBlockContainer>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const UserCardBlock = styled.div`\n  position: relative;\n  width: 520px;\n  min-height: 674px;\n  background: ${color.white};\n  border-radius: 60px;\n  margin-right: 32px;\n  padding: 40px;\n`;\n\n","import EditUserBtn from \"components/Buttons/EditUserBtn/EditUserBtn\";\nimport LogOutBtn from \"components/Buttons/LogOutBtn/LogOutBtn\";\nimport PetsBlock from \"components/PetsBlock/PetsBlock\";\nimport UserBlock from \"components/UserBlock/UserBlock\";\nimport { UserCardBlock } from \"./UserCard.styled\";\n\nexport default function UserCard() {\n  return (\n    <UserCardBlock>      \n      <EditUserBtn />\n      <UserBlock />\n      <PetsBlock />\n      <LogOutBtn page='profile' />\n    </UserCardBlock>    \n  );\n}  ","import { ContentContainer } from \"common/GiobalStyles\";\nimport MyNotices from \"components/MyNotices/MyNotices\";\nimport UserCard from \"components/UserCard/UserCard\";\n\nexport default function Profile() {\n  return (\n    <ContentContainer>\n      <UserCard />\n      <MyNotices />\n    </ContentContainer>\n  );\n}  ","import Profile from \"components/Profile/Profile\";\n\nexport default function ProfilePage() {\n  return (\n    <Profile />\n  );\n}  "],"names":["MyNotices","_jsx","children","EditUserBtnContainer","styled","_templateObject","_taggedTemplateLiteral","EditUserButton","_templateObject2","color","ModalEdit","TitleModalEdit","PhotoBlock","_templateObject3","Input","_templateObject4","Field","_templateObject5","FormContainer","_templateObject6","schema","Yup","shape","name","email","matches","avatar","phone","ModalEditUser","_ref","closeModals","user","initialValues","_jsxs","src","alt","width","height","href","concat","sprite","Formik","validationSchema","onSubmit","async","values","_ref2","setSubmitting","axios","error","alert","message","_ref3","isSubmitting","Form","type","placeholder","ErrorMessage","component","ButtonOrange","label","XButton","EditUserBtn","openModal","setOpenModal","useState","onClick","PortalModal","active","setActive","AddPetBlock","TitleMyPets","AddPetComponent","ButtonNav","to","PetsList","PetsBlock","UserBlockContainer","PhotoContainer","UploadPhoto","TitleInformation","UserInfoContainer","UserInfoItem","UserBlock","UserCardBlock","UserCard","LogOutBtn","page","Profile","ContentContainer","ProfilePage"],"sourceRoot":""}