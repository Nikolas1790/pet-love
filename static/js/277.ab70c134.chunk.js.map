{"version":3,"file":"static/js/277.ab70c134.chunk.js","mappings":"0LAGO,MAAMA,EAAsBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wJAUhCC,EAAmBH,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4cAI7BG,IAAA,IAAC,IAACC,GAAID,EAAA,OAAMC,EAAMC,EAAAA,EAAAA,cAAuB,aAAa,IACnDC,IAAA,IAAC,QAACC,GAASD,EAAA,MAAiB,SAAZC,EAAqB,IAAM,MAAM,IAIzDC,IAAA,IAAC,IAACJ,GAAII,EAAA,OAAMJ,EAAMC,EAAAA,EAAAA,MAAcA,EAAAA,EAAAA,YAAkB,GAEnDA,EAAAA,EAAAA,cAMEI,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAMC,EAAW,OAAS,GAAG,GAKzCL,EAAAA,EAAAA,MAEHA,EAAAA,EAAAA,0BAKGM,EAAYb,EAAAA,GAAAA,KAAWc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uMAWvBa,EAAgBf,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8HAOzBK,EAAAA,EAAAA,gB,uBCzDd,MAaaU,EAAaZ,IAAgD,IAA/C,YAAEa,EAAW,WAAEC,EAAU,aAAEC,GAAcf,EAClE,MAAMgB,EAdgBC,EAACb,EAASc,KAChC,GAAIA,EAAQ,EAEV,OAAOC,MAAMC,KAAK,CAACC,OAAQH,IAAQ,CAACI,EAAGC,IAAMA,EAAI,IAC5C,CAEL,IAAIC,EAAYpB,GAAYA,EAAU,GAAK,EAEvCqB,EAAUC,KAAKC,IAAIH,EAAY,EAAGN,GACtC,OAAOC,MAAMC,KAAK,CAACC,OAASI,EAAUD,EAAY,IAAK,CAACF,EAAGC,IAAMC,EAAYD,GAC/E,GAIqBN,CAAgBJ,EAAaC,GAUlD,OACEc,EAAAA,EAAAA,MAAClC,EAAmB,CAAAmC,SAAA,EAClBC,EAAAA,EAAAA,KAAChC,EAAgB,CAACS,SAA0B,IAAhBM,EAAmBkB,QAASA,IAAMhB,EAAa,GAAGc,UAC5EC,EAAAA,EAAAA,KAACpB,EAAa,CAAAmB,UACZC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,8BAGxBJ,EAAAA,EAAAA,KAAChC,EAAgB,CAACS,SAA0B,IAAhBM,EAAmBkB,QAf7BI,KACpBpB,EAAaW,KAAKU,IAAIvB,EAAc,EAAG,GAAG,EAc8BgB,UACpEC,EAAAA,EAAAA,KAACpB,EAAa,CAAAmB,UACZC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,2BAGvBlB,EAAaqB,KAAIC,IAChBR,EAAAA,EAAAA,KAAChC,EAAgB,CAEfG,IAAKY,IAAgByB,EAAO,OAAS,GACrCP,QAASA,IAAMhB,EAAauB,GAAMT,SAEjCS,GAJIA,KAORzB,EAAcC,GAAcA,EAAa,IAAKgB,EAAAA,EAAAA,KAACtB,EAAS,CAAAqB,SAAC,SAC1DC,EAAAA,EAAAA,KAAChC,EAAgB,CAACS,SAAUM,IAAgBC,EAAYiB,QA1BtCQ,KACpBxB,EAAaW,KAAKC,IAAId,EAAc,EAAGC,GAAY,EAyB8Be,UAC7EC,EAAAA,EAAAA,KAACpB,EAAa,CAAAmB,UACZC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,6BAGxBJ,EAAAA,EAAAA,KAAChC,EAAgB,CAACS,SAAUM,IAAgBC,EAAaiB,QAASA,IAAMhB,EAAaD,GAAYe,UAC/FC,EAAAA,EAAAA,KAACpB,EAAa,CAAAmB,UACZC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,gCAGJ,C,oFCxDnB,MAAMM,EAAkB7C,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAI5B4C,EAAc9C,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iSAM5BG,IAAA,IAAC,MAAC0C,GAAM1C,EAAA,OAAK0C,GAAS,OAAO,IAC5BvC,IAAA,IAAC,OAAEwC,GAAQxC,EAAA,OAAKwC,GAAM,aAAAV,OAAiB/B,EAAAA,EAAAA,kBAAyB,IAO/DG,IAAA,IAAC,OAAEsC,GAAQtC,EAAA,MAAgB,SAAXsC,EAAoBzC,EAAAA,EAAAA,aAAsB,MAAM,IAKhE0C,EAAejD,EAAAA,GAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,2IAU5BgD,EAAclD,EAAAA,GAAAA,OAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8KAI5BK,EAAAA,EAAAA,c,uBCpCG,SAAS4C,EAAW9C,GAA4C,IAA3C,SAAE+C,EAAQ,MAAEL,EAAK,OAAEC,EAAM,YAAEK,GAAahD,EAC1E,MAAOiD,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAY7BC,GAAmBC,EAAAA,EAAAA,cAAY,KACnCH,EAAS,GAAG,GACX,CAACA,IAOJ,OAJAI,EAAAA,EAAAA,YAAU,KACRF,GAAkB,GACjB,CAACJ,EAAaI,KAGftB,EAAAA,EAAAA,KAACU,EAAe,CAAAX,UACdD,EAAAA,EAAAA,MAAA,QAAM2B,SArBYC,IACpBA,EAAMC,iBACNV,EAASE,EAAM,EAmBgBpB,SAAA,EAC3BC,EAAAA,EAAAA,KAACW,EAAW,CACViB,KAAK,OACLC,MAAOV,EACPW,SAAWC,GAAMX,EAASW,EAAEC,OAAOH,OACnCI,YAAY,SACZpB,OAAQA,EACRD,MAAOA,IAERO,IACCnB,EAAAA,EAAAA,KAACe,EAAW,CAACd,QA1BDiC,KAClBd,EAAS,IACTH,EAAS,GAAG,EAwB6BW,KAAK,SAAQ7B,UAC9CC,EAAAA,EAAAA,KAAA,OAAKY,MAAO,GAAIuB,OAAQ,GAAGpC,UACzBC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAI1BJ,EAAAA,EAAAA,KAACc,EAAY,CAACc,KAAK,SAAQ7B,UACzBC,EAAAA,EAAAA,KAAA,OAAKY,MAAO,GAAIuB,OAAQ,GAAGpC,UACzBC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,4BAMhC,C,mFClDO,MAAMgC,EAAmBvE,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0H,iCCCnC,MAAMsE,EAAgBxE,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sKAMrBK,EAAAA,EAAAA,OAKJkE,EAAUzE,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gHAIjBK,EAAAA,EAAAA,aAGHmE,EAAmB1E,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,iHAO7ByE,EAAuB3E,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,sFAMjC0E,EAAY5E,EAAAA,GAAAA,GAAS6E,IAAAA,GAAA3E,EAAAA,EAAAA,GAAA,sIACvBK,EAAAA,EAAAA,kBAMQF,IAAA,IAAC,OAAEyE,GAAQzE,EAAA,OAAMyE,GAAU,KAAK,IAItCC,EAAsB/E,EAAAA,GAAAA,IAAUgF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,0CAKhC+E,EAAajF,EAAAA,GAAAA,GAASkF,IAAAA,GAAAhF,EAAAA,EAAAA,GAAA,mEAGhBM,IAAA,IAAC,OAACsE,GAAOtE,EAAA,OAAKsE,GAAU,MAAM,IAGpCK,EAAcnF,EAAAA,GAAAA,EAAQoF,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,4CACxBK,EAAAA,EAAAA,kBAIE8E,EAAUrF,EAAAA,GAAAA,IAAUsF,IAAAA,GAAApF,EAAAA,EAAAA,GAAA,6EAMpBqF,EAAavF,EAAAA,GAAAA,OAAAA,WAAyB,CACjDwF,kBAAoBC,IAAU,CAAC,cAAcC,SAASD,IAD9BzF,CAExB2F,IAAAA,GAAAzF,EAAAA,EAAAA,GAAA,0aAQcK,EAAAA,EAAAA,aAWJG,IAAA,IAAC,WAACkF,GAAWlF,EAAA,OAAMkF,EAAarF,EAAAA,EAAAA,cAAsB,aAAa,GACjEA,EAAAA,EAAAA,cAIFA,EAAAA,EAAAA,cAGAA,EAAAA,EAAAA,MACEA,EAAAA,EAAAA,c,kBC9FP,MAAMsF,EAAc7F,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mHAC1BK,EAAAA,EAAAA,0BAOGuF,EAAe9F,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gF,aCTrB,SAAS6F,EAAa1F,GAAoB,IAAnB,MAAE2F,EAAK,MAAEhC,GAAO3D,EACpD,OACE4B,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC0D,EAAW,CAAA3D,SAAE8D,KACd7D,EAAAA,EAAAA,KAAC2D,EAAY,CAAA5D,SAAE8B,MAGrB,C,qDCNO,MAAMiC,EAAkBjG,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2MAOzBK,EAAAA,EAAAA,OAKH2F,EAAgBlG,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mEAM1BiG,EAAiBnG,EAAAA,GAAAA,GAASc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+GAK5BK,EAAAA,EAAAA,eAGE6F,EAAgBpG,EAAAA,GAAAA,EAAQgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,2IAK1BK,EAAAA,EAAAA,kBAIE8F,EAAerG,EAAAA,GAAAA,IAAU6E,IAAAA,GAAA3E,EAAAA,EAAAA,GAAA,yC,cCjCvB,SAASoG,EAAejG,GAAmB,IAAlB,YAAEkG,GAAalG,EACrD,OACE4B,EAAAA,EAAAA,MAACgE,EAAe,CAAA/D,SAAA,EACdC,EAAAA,EAAAA,KAAC+D,EAAa,CAACM,I,6lIAAaC,IAAI,oBAEhCtE,EAAAA,EAAAA,KAACgE,EAAc,CAAAjE,SAAC,eAChBC,EAAAA,EAAAA,KAACiE,EAAa,CAAAlE,SAAC,kPAEfD,EAAAA,EAAAA,MAACoE,EAAY,CAAAnE,SAAA,EACXC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,GAAG,SAASX,MAAM,SAASjD,MAAM,WAC5CZ,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAACC,GAAG,YAAYX,MAAM,eAAejD,MAAM,cAGvDZ,EAAAA,EAAAA,KAACyE,EAAAA,EAAO,CAACL,YAAaA,MAG5B,C,uBClBO,MAAMM,GAAc7G,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yMAOrBK,EAAAA,EAAAA,OAKHuG,GAAe9G,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAGzB6G,GAAS/G,EAAAA,GAAAA,IAAUc,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,4FAMnB8G,GAAgBhH,EAAAA,GAAAA,IAAUgB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,qNAO5BK,EAAAA,EAAAA,cACKA,EAAAA,EAAAA,aAMH0G,GAAcjH,EAAAA,GAAAA,EAAQ6E,KAAAA,IAAA3E,EAAAA,EAAAA,GAAA,gFAMtBgH,GAAmBlH,EAAAA,GAAAA,IAAUgF,KAAAA,IAAA9E,EAAAA,EAAAA,GAAA,iEAM7BiH,GAAenH,EAAAA,GAAAA,IAAUkF,KAAAA,IAAAhF,EAAAA,EAAAA,GAAA,+D,OChD/B,MAAMkH,GAAOpH,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0DAGnBmH,GAA4B,SAAjBA,EAAMC,OAAoB,OAAS,SCYzD,GAbmBjH,IAAiB,IAAhB,OAAEkH,GAAQlH,EAE5B,OACE8B,EAAAA,EAAAA,KAAA,OAAAD,SACG,IAAIV,MAHU,IAGSkB,KAAI,CAACf,EAAG6F,KAC9BrF,EAAAA,EAAAA,KAACiF,GAAI,CAAaE,OAAQE,EAAQD,EAAS,OAAS,GAAGrF,UACrDC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,iBADXiF,MAIT,E,OCVH,MAAMC,GAAWzH,EAAAA,GAAAA,OAAaC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mcAS1BG,IAAA,IAAC,MAAE0C,GAAO1C,EAAA,OAAK0C,GAAS,MAAM,IAEhBvC,IAAA,IAAC,KAAEkH,GAAMlH,EAAA,OAAKkH,EAAQnH,EAAAA,EAAAA,0BAAkC,MAAM,GAC5EA,EAAAA,EAAAA,cACKA,EAAAA,EAAAA,YAOEA,EAAAA,EAAAA,WACFG,IAAA,IAAC,MAAEsF,GAAOtF,EAAA,MAAc,iBAAVsF,EAA2BzF,EAAAA,EAAAA,cAAsBA,EAAAA,EAAAA,KAAW,ICrB3E,SAASoH,GAAiBtH,GAAwC,IAAvC,UAAEuH,EAAS,MAAE5B,EAAK,QAAE5D,EAAO,MAAEW,GAAO1C,EAC5E,OACE8B,EAAAA,EAAAA,KAACsF,GAAQ,CAACG,UAAWA,EAAWxF,QAASA,EAASW,MAAOA,EAAOiD,MAAOA,EAAM9D,SAC1E8D,GAGP,C,0BCCe,SAAS6B,GAAWxH,GAAqD,IAApD,YAAEkG,EAAW,KAAEuB,EAAI,eAAEC,EAAc,WAAEnC,GAAYvF,EACnF,MAAM2H,GAAWC,EAAAA,GAAAA,MAWjB,OACEhG,EAAAA,EAAAA,MAAC4E,GAAW,CAAA3E,SAAA,EACVD,EAAAA,EAAAA,MAAC6E,GAAY,CAAA5E,SAAA,EACXC,EAAAA,EAAAA,KAAC4E,GAAM,CAACP,IAAKsB,EAAKI,OAAQzB,IAAI,SAC9BtE,EAAAA,EAAAA,KAAC6E,GAAa,CAAA9E,UACZC,EAAAA,EAAAA,KAAC8E,GAAW,CAAA/E,SAAE4F,EAAKK,iBAIvBhG,EAAAA,EAAAA,KAACyC,EAAS,CAACE,OAAO,OAAM5C,SAAE4F,EAAKM,SAC/BnG,EAAAA,EAAAA,MAACiF,GAAgB,CAAAhF,SAAA,EACfC,EAAAA,EAAAA,KAACkG,GAAU,CAACd,OAAQxF,KAAKC,IAAI8F,EAAKQ,WAAY,MAC9CnG,EAAAA,EAAAA,KAAA,KAAAD,SAAI4F,EAAKQ,iBAGXnG,EAAAA,EAAAA,KAAC8C,EAAU,CAACH,OAAO,OAAM5C,SACtB6F,EAAeQ,MAAM,EAAG,GAAG7F,KAAK8F,IAC/BrG,EAAAA,EAAAA,KAAC4D,EAAa,CAAoBC,MAAOwC,EAAOxC,MAAOhC,MAAOwE,EAAOxE,OAAjDwE,EAAOxC,YAG/B7D,EAAAA,EAAAA,KAACgD,EAAW,CAAAjD,SAAE4F,EAAKW,WAEnBxG,EAAAA,EAAAA,MAACkF,GAAY,CAAAjF,SAAA,EACXC,EAAAA,EAAAA,KAACuG,EAAAA,EAAY,CACX1C,MAAOJ,EAAc,SAAW,SAChC7C,MAAM,QACNX,QAASA,KAAMuG,OAnCMC,EAmCcd,EAAKe,SA/B5Cb,EAHEpC,GAGOkD,EAAAA,GAAAA,IAAoBF,IAFpBG,EAAAA,GAAAA,IAAgBH,IAFAA,KAmCwB,EAC7ChD,WAAYA,KAEdzD,EAAAA,EAAAA,KAACwF,GAAiB,CAAC3B,MAAM,UAAWjD,MAAM,cAG5CZ,EAAAA,EAAAA,KAACyE,EAAAA,EAAO,CAACL,YAAaA,MAG5B,C,uCC1Ce,SAASyC,GAAW3I,GAAU,IAAD4I,EAAA,IAAR,KAACnB,GAAKzH,EACxC,MAAO6I,EAAWC,IAAgB3F,EAAAA,EAAAA,WAAS,IACpC4F,EAAiBC,IAAsB7F,EAAAA,EAAAA,WAAS,GACjD8F,GAAQC,EAAAA,GAAAA,IAAYC,GAAAA,IACpBxB,GAAWC,EAAAA,GAAAA,MAEjB,IAAIwB,GAAOF,EAAAA,GAAAA,IAAYG,GAAAA,IAGvB,MAAM9D,GAFc2D,EAAAA,GAAAA,IAAYI,GAAAA,IAECjE,SAASoC,EAAKe,OAAY,OAAJY,QAAI,IAAJA,GAAsB,QAAlBR,EAAJQ,EAAMG,wBAAgB,IAAAX,OAAlB,EAAJA,EAAwBY,MAAKjI,GAAKA,EAAEiH,MAAQf,EAAKe,QAExGlF,EAAAA,EAAAA,YAAU,KACJ2F,IAAUG,EAAKK,MACjB9B,GAAS+B,EAAAA,GAAAA,MACX,GACC,CAAC/B,EAAUsB,EAAOG,EAAKK,KAAMlE,IAGhC,MAcMmC,EAAiB,CACrB,CAAE/B,MAAO,OAAQhC,OANGgG,EAMiBlC,EAAKgC,KALnCE,EAASC,MAAM,KAAK,KAM3B,CAAEjE,MAAO,WAAYhC,MAhBHkG,KAClB,GAAGpC,EAAKqC,SAAU,CAChB,MAAMC,EAAYF,EAAWD,MAAM,KACnC,MAAM,GAAN3H,OAAU8H,EAAU,GAAE,KAAA9H,OAAI8H,EAAU,GAAE,KAAA9H,OAAI8H,EAAU,GACtD,CACE,MAAO,SACT,EAU4BC,CAAWvC,EAAKqC,WAC5C,CAAEnE,MAAO,MAAOhC,MAAO8D,EAAKwC,KAC5B,CAAEtE,MAAO,UAAWhC,MAAO8D,EAAKyC,SAChC,CAAEvE,MAAO,WAAYhC,MAAO8D,EAAKK,WAVb6B,MAiCtB,OACE/H,EAAAA,EAAAA,MAACuC,EAAa,CAAAtC,SAAA,EACZC,EAAAA,EAAAA,KAACsC,EAAO,CAAC+B,IAAKsB,EAAKI,OAAQzB,IAAI,SAC/BxE,EAAAA,EAAAA,MAACyC,EAAgB,CAAAxC,SAAA,EACfD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAC0C,EAAoB,CAAAzC,SAAA,EACnBC,EAAAA,EAAAA,KAACyC,EAAS,CAAA1C,SAAE4F,EAAKM,SAEjBnG,EAAAA,EAAAA,MAAC8C,EAAmB,CAAA7C,SAAA,EAClBC,EAAAA,EAAAA,KAACiF,GAAI,CAACE,OAAO,OAAMpF,UACjBC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,mBAEtBJ,EAAAA,EAAAA,KAAA,KAAAD,SAAI4F,EAAKQ,oBAGbnG,EAAAA,EAAAA,KAAC8C,EAAU,CAAA/C,SACR6F,EAAerF,KAAK8F,IACnBrG,EAAAA,EAAAA,KAAC4D,EAAa,CAAoBC,MAAOwC,EAAOxC,MAAOhC,MAAOwE,EAAOxE,OAAjDwE,EAAOxC,YAG/B7D,EAAAA,EAAAA,KAACgD,EAAW,CAAAjD,SAAE4F,EAAKW,cAGrBxG,EAAAA,EAAAA,MAACoD,EAAO,CAAAnD,SAAA,EACNC,EAAAA,EAAAA,KAACuG,EAAAA,EAAY,CAAC1C,MAAM,aAAc5D,QA5ChBoI,KACpBlB,EACFD,GAAmB,GAEnBF,GAAa,EACf,KAwCMhH,EAAAA,EAAAA,KAACoD,EAAU,CAAEnD,QAASA,KAAMqI,OArCN7I,EAqC2BkG,EAAKe,SApCxDS,EAIAtB,EAHEpC,GAGOkD,EAAAA,GAAAA,IAAoBlH,IAFpBmH,EAAAA,GAAAA,IAAgBnH,IAK3BuH,GAAa,IARavH,KAqCqC,EAACgE,WAAYA,EAAW1D,UACjFC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,gCAM5BJ,EAAAA,EAAAA,KAACuI,EAAAA,EAAW,CAACC,OAAQvB,EAAiBwB,UAAWvB,EAAmBnH,UAClEC,EAAAA,EAAAA,KAAC0F,GAAW,CAACtB,YAAaA,IAAM8C,IAAsBvB,KAAMA,EAAMC,eAAgBA,EAAgBnC,WAAYA,OAEhHzD,EAAAA,EAAAA,KAACuI,EAAAA,EAAW,CAACC,OAAQzB,EAAW0B,UAAWzB,EAAajH,UACtDC,EAAAA,EAAAA,KAACmE,EAAe,CAACC,YAAaA,IAAM4C,UAI5C,CClHO,MAAM0B,GAAuB7K,EAAAA,GAAAA,GAASC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,8FCC9B,SAAS4K,GAAWzK,GAAgB,IAAf,YAAC0K,GAAY1K,EAC/C,OACE8B,EAAAA,EAAAA,KAAC0I,GAAoB,CAAA3I,SAClBV,MAAMwJ,QAAQD,EAAYE,UAAYF,EAAYE,QAAQvI,KAAKoF,IAC9D3F,EAAAA,EAAAA,KAAC6G,GAAW,CAAgBlB,KAAMA,GAAhBA,EAAKe,QAI/B,C,8BCRO,MAAMqC,GAAkBlL,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0JAMzBK,EAAAA,EAAAA,aAIH4K,GAAqBnL,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,0CAK/BkL,GAAsBpL,EAAAA,GAAAA,IAAUc,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,yFAMhCmL,GAAkBrL,EAAAA,GAAAA,IAAUgB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,+DAKjBF,EAAAA,GAAAA,OAAa6E,KAAAA,IAAA3E,EAAAA,EAAAA,GAAA,+D,mBC1B9B,MAAMoL,GAAWtL,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iCAIrBqL,GAAcvL,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,kJAOzBK,EAAAA,EAAAA,cAICiL,GAAiBxL,EAAAA,GAAAA,OAAac,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,wYAUrBK,EAAAA,EAAAA,MAIXA,EAAAA,EAAAA,cAUEkL,GAAezL,EAAAA,GAAAA,GAASgB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,sPAKfK,EAAAA,EAAAA,OAETF,IAAA,IAAC,KAAEqL,GAAMrL,EAAA,OAAMqL,EAAO,QAAU,MAAM,IAUtCC,GAAe3L,EAAAA,GAAAA,GAAS6E,KAAAA,IAAA3E,EAAAA,EAAAA,GAAA,6RAI1BK,EAAAA,EAAAA,yBAKEA,EAAAA,EAAAA,eC7DE,SAASqL,GAAgBvL,GAAwC,IAAtC,oBAAEwL,EAAmB,YAAExI,GAAahD,EAC5E,MAAOyL,EAAiBC,IAAsBvI,EAAAA,EAAAA,UAAS,KAChDwI,EAAiBC,IAAsBzI,EAAAA,EAAAA,WAAS,GACjD0I,GAAcC,EAAAA,EAAAA,UACdnE,GAAWC,EAAAA,GAAAA,MACXmE,GAAa7C,EAAAA,GAAAA,IAAY8C,GAAAA,KAE/B1I,EAAAA,EAAAA,YAAU,KACRqE,GAASsE,EAAAA,GAAAA,MAAgB,GACxB,CAACtE,KAEJrE,EAAAA,EAAAA,YAAU,KACR,MAAM4I,EAAsB1I,IACtBqI,EAAYzL,UAAYyL,EAAYzL,QAAQ+L,SAAS3I,EAAMM,SAC7D8H,GAAmB,EACrB,EAGF,OADAQ,SAASC,iBAAiB,YAAaH,GAChC,IAAME,SAASE,oBAAoB,YAAaJ,EAAmB,GACzE,CAACN,IAEJ,MAAMW,GAAwBlJ,EAAAA,EAAAA,cAAY,KACxCqI,EAAmB,GAAG,GACrB,CAACA,KAGJpI,EAAAA,EAAAA,YAAU,KACRiJ,GAAuB,GACtB,CAACvJ,EAAauJ,IAMjB,MAAMC,EAAqB,CAAC,cAAeT,GAErCU,EAAiBA,IAAMb,GAAoBD,GAmBjD,OACE/J,EAAAA,EAAAA,MAACqJ,GAAQ,CAACyB,IAAKb,EAAYhK,SAAA,EACzBC,EAAAA,EAAAA,KAACoJ,GAAW,CAACnJ,QAAS0K,EAAe5K,UACnCC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAAAD,OAAiB0J,EAAkB,KAAO,aAEhE7J,EAAAA,EAAAA,KAACqJ,GAAc,CACbzH,KAAK,SACL3B,QAzB6ByB,IACjCiJ,GAAgB,EAwBuB5K,SAElC4J,GAAmB,cAEtB3J,EAAAA,EAAAA,KAACsJ,GAAY,CAACC,KAAMM,EAAgB9J,SAC/B2K,EAAmBnK,KAAI,CAACyF,EAAUX,KACjCrF,EAAAA,EAAAA,KAACwJ,GAAY,CAAavJ,QAASA,IAzBpB+F,KAEvB,MAAM6E,GALuBC,EAKqB9E,GAJpC+E,OAAO,GAAGC,cAAgBF,EAAO1E,MAAM,GADxB0E,MAM7BlB,EAAmBiB,GACnBnB,EAAoB1D,GACpB2E,GAAgB,EAoBiCM,CAAgBjF,GAAUjG,SAChEiG,GADgBX,SAO/B,C,mBC/EO,MAAM8D,GAAWtL,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iCAIrBqL,GAAcvL,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,kJAOzBK,EAAAA,EAAAA,cAICiL,GAAiBxL,EAAAA,GAAAA,OAAac,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,wYAUrBK,EAAAA,EAAAA,MAIXA,EAAAA,EAAAA,cAUEkL,GAAezL,EAAAA,GAAAA,GAASgB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,sPAKfK,EAAAA,EAAAA,OAETF,IAAA,IAAC,KAAEqL,GAAMrL,EAAA,OAAMqL,EAAO,QAAU,MAAM,IAUtCC,GAAe3L,EAAAA,GAAAA,GAAS6E,KAAAA,IAAA3E,EAAAA,EAAAA,GAAA,6RAI1BK,EAAAA,EAAAA,yBAKEA,EAAAA,EAAAA,eC7DE,SAAS8M,GAAchN,GAAsC,IAApC,kBAAEiN,EAAiB,YAAEjK,GAAahD,EACxE,MAAOyL,EAAiBC,IAAsBvI,EAAAA,EAAAA,UAAS,KAChDwI,EAAiBC,IAAsBzI,EAAAA,EAAAA,WAAS,GACjD0I,GAAcC,EAAAA,EAAAA,UACdnE,GAAWC,EAAAA,GAAAA,MACXqC,GAAMf,EAAAA,GAAAA,IAAYgE,GAAAA,KAExB5J,EAAAA,EAAAA,YAAU,KACRqE,GAASwF,EAAAA,GAAAA,MAAa,GACrB,CAACxF,KAEJrE,EAAAA,EAAAA,YAAU,KACR,MAAM4I,EAAsB1I,IACtBqI,EAAYzL,UAAYyL,EAAYzL,QAAQ+L,SAAS3I,EAAMM,SAC7D8H,GAAmB,EACrB,EAGF,OADAQ,SAASC,iBAAiB,YAAaH,GAChC,IAAME,SAASE,oBAAoB,YAAaJ,EAAmB,GACzE,CAACN,IAIJ,MAAMwB,GAAsB/J,EAAAA,EAAAA,cAAY,KACtCqI,EAAmB,GAAG,GACrB,CAACA,KAGJpI,EAAAA,EAAAA,YAAU,KACRoI,GAAoB,GACnB,CAAC1I,EAAaoK,IAMjB,MAAMZ,EAAqB,CAAC,cAAevC,GAErCwC,EAAiBA,IAAMb,GAAoBD,GAejD,OACE/J,EAAAA,EAAAA,MAACqJ,GAAQ,CAACyB,IAAKb,EAAYhK,SAAA,EACzBC,EAAAA,EAAAA,KAACoJ,GAAW,CAACnJ,QAAS0K,EAAe5K,UACnCC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAAAD,OAAiB0J,EAAkB,KAAO,aAEhE7J,EAAAA,EAAAA,KAACqJ,GAAc,CACbzH,KAAK,SACL3B,QArB6ByB,IACjCiJ,GAAgB,EAoBuB5K,SAElC4J,GAAmB,eAEtB3J,EAAAA,EAAAA,KAACsJ,GAAY,CAACC,KAAMM,EAAgB9J,SAC/B2K,EAAmBnK,KAAI,CAACyF,EAAUX,KACjCrF,EAAAA,EAAAA,KAACwJ,GAAY,CAAavJ,QAASA,IArBpB+F,KAEvB,MAAM6E,GALuBC,EAKqB9E,GAJpC+E,OAAO,GAAGC,cAAgBF,EAAO1E,MAAM,GADxB0E,MAM7BlB,EAAmBiB,GACnBM,EAAkBnF,GAClB2E,GAAgB,EAgBiCM,CAAgBjF,GAAUjG,SAChEiG,GADgBX,SAO/B,C,wCCzEO,MAAMkG,IAAkB1N,EAAAA,EAAAA,IAAO2N,GAAAA,EAAP3N,CAAiBC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,weAsBnCoL,GAAWtL,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,iCAIrBqL,GAAcvL,EAAAA,GAAAA,IAAUc,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,kJAOzBK,EAAAA,EAAAA,cAICiL,GAAiBxL,EAAAA,GAAAA,OAAagB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,yQAUrBK,EAAAA,EAAAA,MAIXA,EAAAA,EAAAA,cAGEkL,GAAezL,EAAAA,GAAAA,GAAS6E,KAAAA,IAAA3E,EAAAA,EAAAA,GAAA,mMAKfK,EAAAA,EAAAA,OAETF,IAAA,IAAC,KAAEqL,GAAMrL,EAAA,OAAMqL,EAAO,QAAU,MAAM,IAOtCC,GAAe3L,EAAAA,GAAAA,GAASgF,KAAAA,IAAA9E,EAAAA,EAAAA,GAAA,6RAI1BK,EAAAA,EAAAA,yBAKEA,EAAAA,EAAAA,eC7EE,SAASqN,GAAYvN,GAAkC,IAAhC,gBAACwN,EAAe,YAAExK,GAAYhD,EAClE,MAAOyL,EAAiBC,IAAsBvI,EAAAA,EAAAA,UAAS,KAChDwI,EAAiBC,IAAsBzI,EAAAA,EAAAA,WAAS,GACjD0I,GAAcC,EAAAA,EAAAA,UACdnE,GAAWC,EAAAA,GAAAA,MACX6F,GAAQvE,EAAAA,GAAAA,IAAYwE,GAAAA,KAE1BpK,EAAAA,EAAAA,YAAU,KACRqE,GAASgG,EAAAA,GAAAA,MAAW,GACnB,CAAChG,KAEJrE,EAAAA,EAAAA,YAAU,KACR,MAAM4I,EAAsB1I,IACtBqI,EAAYzL,UAAYyL,EAAYzL,QAAQ+L,SAAS3I,EAAMM,SAC7D8H,GAAmB,EACrB,EAGF,OADAQ,SAASC,iBAAiB,YAAaH,GAChC,IAAME,SAASE,oBAAoB,YAAaJ,EAAmB,GACzE,CAACN,IAEJ,MAAMgC,GAAoBvK,EAAAA,EAAAA,cAAY,KACpCqI,EAAmB,GAAG,GACrB,CAACA,KAGJpI,EAAAA,EAAAA,YAAU,KACRsK,GAAmB,GAClB,CAAC5K,EAAa4K,IAIjB,MAAMpB,EAAqB,CAAC,cAAeiB,GAErChB,EAAiBA,IAAMb,GAAoBD,GAgBjD,OACE/J,EAAAA,EAAAA,MAACqJ,GAAQ,CAACyB,IAAKb,EAAYhK,SAAA,EACzBC,EAAAA,EAAAA,KAACoJ,GAAW,CAACnJ,QAAS0K,EAAe5K,UACnCC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAAAD,OAAiB0J,EAAkB,KAAO,aAEhE7J,EAAAA,EAAAA,KAACqJ,GAAc,CACbzH,KAAK,SACL3B,QAtB6ByB,IACjCiJ,GAAgB,EAqBuB5K,SAElC4J,GAAmB,aAEtB3J,EAAAA,EAAAA,KAACsJ,GAAY,CAACC,KAAMM,EAAgB9J,UAClCC,EAAAA,EAAAA,KAACuL,GAAe,CAACQ,MAAO,CAAEC,UAAW,KAAMjM,SACxC2K,EAAmBnK,KAAI,CAACyF,EAAUX,KACjCrF,EAAAA,EAAAA,KAACwJ,GAAY,CAAavJ,QAASA,IAtBpB+F,KAEvB,MAAM6E,GANuBC,EAMqB9E,GALpC+E,OAAO,GAAGC,cAAgBF,EAAO1E,MAAM,GADxB0E,MAO7BlB,EAAmBiB,GACnBa,EAAgB1F,GAChB2E,GAAgB,EAiBiCM,CAAgBjF,GAAUjG,SAChEiG,GADgBX,WAQ/B,C,2BC5EO,MAAM4G,IAAepO,EAAAA,EAAAA,IAAOqO,GAAAA,GAAPrO,CAAcC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,s2BAwDpBF,EAAAA,GAAAA,OAAaI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,yPAeVF,EAAAA,GAAAA,IAAUc,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,+EAMJF,EAAAA,GAAAA,IAAUgB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,qGC1E1B,SAASoO,GAAcjO,GAA0B,IAAzB,iBAAGkO,GAAmBlO,EAC3D,MAAOmO,EAAYC,IAAiBjL,EAAAA,EAAAA,UAAS,KACtCkL,EAASC,IAAcnL,EAAAA,EAAAA,UAAS,IACjCwE,GAAWC,EAAAA,GAAAA,MACX2G,GAAarF,EAAAA,GAAAA,IAAYsF,GAAAA,KAE/BlL,EAAAA,EAAAA,YAAU,KACRqE,GAAS8G,EAAAA,GAAAA,MAAY,GACpB,CAAC9G,KAEJrE,EAAAA,EAAAA,YAAU,KACR,GAAI6K,EAAY,CACd,MAAMO,EAAkBH,EAAWI,QAAOC,GAChCA,EAAKC,OAAOC,cAAczJ,SAAS8I,EAAWW,iBACtDzM,KAAIuM,IACJG,QAAQC,IAAIJ,GACJ,CAAEjL,MAAOiL,EAAKC,OAASlJ,MAAOiJ,EAAKC,OAAQI,GAAIL,EAAKpG,QAC9D8F,EAAWI,EACb,MACEJ,EAAW,GACb,GACC,CAACH,EAAYI,IAUhB,OACEzM,EAAAA,EAAAA,KAACiM,GAAY,CACXmB,gBAAgB,eAChBvL,MAAO,KACPwK,WAAYA,EACZgB,cAbuBlM,IACzBmL,EAAcnL,EAAM,EAalBW,SAVkBwL,IACpBlB,EAAiBkB,EAAe,EAU9Bf,QAASA,EACTtK,YAAY,WACZsL,aAAW,GAGjB,C,sBC9CO,MAAMC,GAAiB3P,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0CAK3B0P,GAAa5P,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,yCAUvB2P,IALc7P,EAAAA,GAAAA,MAAYc,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,iCAKlBF,EAAAA,GAAAA,MAAYgB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,2SAOXG,IAAA,IAAC,QAAEyP,GAASzP,EAAA,OAAMyP,EAAUvP,EAAAA,EAAAA,cAAsBA,EAAAA,EAAAA,KAAW,IACxEC,IAAA,IAAC,QAAEsP,GAAStP,EAAA,OAAMsP,EAAUvP,EAAAA,EAAAA,MAAc,MAAM,GAInCA,EAAAA,EAAAA,YAKXwP,GAAoB/P,EAAAA,GAAAA,MAAY6E,KAAAA,IAAA3E,EAAAA,EAAAA,GAAA,4BAIhC8P,GAAOhQ,EAAAA,GAAAA,IAAUgF,KAAAA,IAAA9E,EAAAA,EAAAA,GAAA,qGAGlBK,EAAAA,EAAAA,OCtCG,SAAS0P,GAAY5P,GAAoC,IAAnC,gBAAE6P,EAAe,YAAE7M,GAAahD,EACnE,MAAO8P,EAAWC,IAAgB5M,EAAAA,EAAAA,UAAS,OACpC6M,EAAaC,IAAkB9M,EAAAA,EAAAA,UAAS,MAEzC+M,GAAoB7M,EAAAA,EAAAA,cAAY,KACpC0M,EAAa,MACbE,EAAe,MACfJ,EAAgB,CAAEM,QAAS,KAAMC,MAAO,MAAO,GAC9C,CAACP,KAGJvM,EAAAA,EAAAA,YAAU,KACR4M,GAAmB,GAClB,CAAClN,EAAakN,IA0BjB,OACEtO,EAAAA,EAAAA,MAAC0N,GAAc,CAAAzN,SAAA,EACbD,EAAAA,EAAAA,MAAC2N,GAAU,CAAA1N,SAAA,EACTD,EAAAA,EAAAA,MAAC4N,GAAK,CAACC,SAAuB,IAAdK,EAAmBjO,SAAA,EACjCC,EAAAA,EAAAA,KAAC4N,GAAiB,CAChBhM,KAAK,QACL+L,SAAuB,IAAdK,EACTlM,SA7BkByM,KAC1BN,GAAa,GACbF,GAAiBS,IAAI,IAAWA,EAAMH,SAAS,KAAS,IA4BhD,WAEa,IAAdL,IACChO,EAAAA,EAAAA,KAAC6N,GAAI,CAAA9N,UACHC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,2BAI1BN,EAAAA,EAAAA,MAAC4N,GAAK,CAACC,SAAuB,IAAdK,EAAoBjO,SAAA,EAClCC,EAAAA,EAAAA,KAAC4N,GAAiB,CAChBhM,KAAK,QACL+L,SAAuB,IAAdK,EACTlM,SArCoB2M,KAC5BR,GAAa,GACbF,GAAiBS,IAAI,IAAWA,EAAMH,SAAS,KAAQ,IAoC/C,aAEa,IAAdL,IACChO,EAAAA,EAAAA,KAAC6N,GAAI,CAAA9N,UACHC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,8BAM5BN,EAAAA,EAAAA,MAAC2N,GAAU,CAAA1N,SAAA,EACTD,EAAAA,EAAAA,MAAC4N,GAAK,CAACC,SAAyB,IAAhBO,EAAsBnO,SAAA,EACpCC,EAAAA,EAAAA,KAAC4N,GAAiB,CAChBhM,KAAK,QACL+L,SAAyB,IAAhBO,EACTpM,SAhDgB4M,KACxBP,GAAe,GACfJ,GAAiBS,IAAI,IAAWA,EAAMF,OAAO,KAAS,IA+C9C,SAEe,IAAhBJ,IACClO,EAAAA,EAAAA,KAAC6N,GAAI,CAAA9N,UACHC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,2BAI1BN,EAAAA,EAAAA,MAAC4N,GAAK,CAACC,SAAyB,IAAhBO,EAAqBnO,SAAA,EACnCC,EAAAA,EAAAA,KAAC4N,GAAiB,CAChBhM,KAAK,QACL+L,SAAyB,IAAhBO,EACTpM,SAxDoB6M,KAC5BR,GAAe,GACfJ,GAAiBS,IAAI,IAAWA,EAAMF,OAAO,KAAQ,IAuD7C,aAEe,IAAhBJ,IACClO,EAAAA,EAAAA,KAAC6N,GAAI,CAAA9N,UACHC,EAAAA,EAAAA,KAAA,OAAKE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,+BAOlC,C,eC9Fe,SAASwO,GAAa1Q,GAAqK,IAAnK,eAAE2Q,EAAc,WAAEC,EAAU,oBAAEpF,EAAmB,gBAAEgC,EAAe,kBAAEP,EAAiB,iBAAEiB,EAAgB,gBAAE2B,EAAe,kBAAEgB,EAAiB,mBAAEC,GAAoB9Q,EACtM,MAAOgD,EAAa+N,IAAkB5N,EAAAA,EAAAA,WAAS,GAYjD,OACEvB,EAAAA,EAAAA,MAACiJ,GAAe,CAAAhJ,SAAA,EACdD,EAAAA,EAAAA,MAACkJ,GAAkB,CAAAjJ,SAAA,EACjBC,EAAAA,EAAAA,KAACgB,GAAAA,EAAW,CAACC,SAbKiO,IACpBJ,EAAWI,GACXL,EAAe,EAAE,EAWsBjO,MAAM,QAAQC,OAAO,OAAOK,YAAaA,KAC9ElB,EAAAA,EAAAA,KAACyJ,GAAgB,CAACC,oBAAqBA,EAAqBxI,YAAaA,KACzElB,EAAAA,EAAAA,KAACkL,GAAc,CAACC,kBAAmBA,EAAmBjK,YAAaA,KACnElB,EAAAA,EAAAA,KAACyL,GAAY,CAACC,gBAAiBA,EAAiBxK,YAAaA,KAC7DlB,EAAAA,EAAAA,KAACmM,GAAc,CAACC,iBAAkBA,QAGpCpM,EAAAA,EAAAA,KAACiJ,GAAmB,KAEpBnJ,EAAAA,EAAAA,MAACoJ,GAAe,CAAAnJ,SAAA,EACdC,EAAAA,EAAAA,KAAC8N,GAAY,CAACC,gBAAiBA,EAAiB7M,YAAaA,IAC5D6N,IACC/O,EAAAA,EAAAA,KAACmP,GAAAA,EAAmB,CAACtL,MAAM,gBAAgB5D,QApBZmP,KACnCJ,IACAC,GAAeT,IAASA,GAAK,EAkByD5N,MAAM,eAKhG,C,eCjCe,SAASyO,KACtB,MAAOC,EAAkB5F,IAAuBrI,EAAAA,EAAAA,UAAS,KAClDkO,EAAc7D,IAAmBrK,EAAAA,EAAAA,UAAS,KAC1CmO,EAAgBrE,IAAqB9J,EAAAA,EAAAA,UAAS,KAC9CoO,EAAYC,IAAiBrO,EAAAA,EAAAA,UAAS,KACtCsO,EAAc5B,IAAmB1M,EAAAA,EAAAA,UAAS,CAAEgN,QAAS,KAAMC,MAAO,QAClEsB,EAASd,IAAczN,EAAAA,EAAAA,UAAS,KAChCtC,EAAa8P,IAAkBxN,EAAAA,EAAAA,UAAS,GAEzCwE,GAAWC,EAAAA,GAAAA,MACX8C,GAAcxB,EAAAA,GAAAA,IAAYyI,GAAAA,IAE1Bd,EAAoBO,GAAoBC,GAAgBC,GAAkBC,GAAuC,OAAzBE,EAAatB,SAA2C,OAAvBsB,EAAarB,OAAkBsB,EAcxJE,EAAeC,GACH,aAAZA,EACK,GAEFA,EAAQ/C,eAGjBxL,EAAAA,EAAAA,YAAU,KACR,MAAMwE,EAAW8J,EAAYR,GACvBlH,EAAU0H,EAAYP,GACtBpH,EAAM2H,EAAYN,GAExB3J,GAASmK,EAAAA,GAAAA,IAAW,CAClBJ,UACAK,QAAQ,EACRzP,KAAMzB,EACNmR,MAAO,EACPlK,WACAoC,UACAD,MACAsH,aACAU,QAASR,EAAarB,MACtB8B,aAAcT,EAAatB,UAC1B,GACF,CAACxI,EAAU9G,EAAa6Q,EAASN,EAAkBC,EAAcC,EAAgBC,EAAYE,EAAarB,MAAOqB,EAAatB,UAYjI,OACErO,EAAAA,EAAAA,KAACqQ,EAAAA,GAAgB,CAAAtQ,UACfD,EAAAA,EAAAA,MAACsC,EAAgB,CAAArC,SAAA,EACfC,EAAAA,EAAAA,KAACsQ,EAAAA,GAAK,CAAAvQ,SAAC,4BACPC,EAAAA,EAAAA,KAAC4O,GAAa,CACZC,eAAgBA,EAChBC,WAAYA,EACZpF,oBAAqBA,EACrBgC,gBAAiBA,EACjBP,kBAAmBA,EACnBiB,iBAfsBmE,IAC5Bb,EAAca,EAAiBpD,IAC/BF,QAAQC,IAAI,qBAAsBqD,EAAiBpD,GAAG,EAchDY,gBAAiBA,EACjBgB,kBAAmBA,EACnBC,mBA7DmBA,KACzBtF,EAAoB,IACpBgC,EAAgB,IAChBP,EAAkB,IAClBuE,EAAc,IACd3B,EAAgB,CAAEM,QAAS,KAAMC,OAAO,IACxCQ,EAAW,IACXD,EAAe,GACf5B,QAAQC,IAAI,kCAAkC,KAwD1CpN,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC2I,GAAW,CAACC,YAAaA,KAC1B5I,EAAAA,EAAAA,KAAClB,GAAAA,EAAU,CACTC,YAAa6J,EAAYpI,KACzBxB,WAAY4J,EAAY5J,WACxBC,aA/BgBuB,IACxBqO,EAAerO,EAAK,WAoCxB,CCjGe,SAASgQ,KACtB,OACExQ,EAAAA,EAAAA,KAACqP,GAAO,GAEZ,C,kGCNO,MAAMoB,EAAoBC,GAAUA,EAAMC,IAAIC,YAExCC,EAAiBH,GAAUA,EAAMC,IAAIG,SAErCjB,EAAoBa,GAAUA,EAAMC,IAAI/H,YAExCpB,EAAsBkJ,GAAUA,EAAMC,IAAII,aAE1C7G,EAAwBwG,GAAUA,EAAMC,IAAIK,eAE5C5F,EAAiBsF,GAAUA,EAAMC,IAAIxI,IAErCyD,EAAqB8E,GAAUA,EAAMC,IAAIvI,QAEzCsE,EAAoBgE,GAAUA,EAAMC,IAAIM,M","sources":["components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/SearchField/SearchField.styled.js","components/SearchField/SearchField.jsx","components/Notices/Notices.styled.js","components/NoticesItem/NoticesItem.styled.js","components/NoticesPetDetailItem/NoticesPetDetailItem.styled.js","components/NoticesPetDetailItem/NoticesPetDetailItem.jsx","components/Modals/ModalAttention/ModalAttention.styled.js","components/Modals/ModalAttention/ModalAttention.jsx","components/Modals/ModalNotice/ModalNotice.styled.js","components/StarRaiting/StarRaiting.styled.js","components/StarRaiting/StarRaiting.jsx","components/Buttons/ButtonLightOrange/ButtonLightOrange.styled.js","components/Buttons/ButtonLightOrange/ButtonLightOrange.jsx","components/Modals/ModalNotice/ModalNotice.jsx","components/NoticesItem/NoticesItem.jsx","components/NoticesList/NoticesList.styled.js","components/NoticesList/NoticesList.jsx","components/NoticesFilter/NoticesFilter.styled.js","components/Selectors/SelectorCategory/SelectorCategory.styled.js","components/Selectors/SelectorCategory/SelectorCategory.jsx","components/Selectors/SelectorGender/SelectorGender.styled.js","components/Selectors/SelectorGender/SelectorGender.jsx","components/Selectors/SelectType/SelectType.styled.js","components/Selectors/SelectType/SelectType.jsx","components/SearchLocality/SearchLocality.styled.js","components/SearchLocality/SearchLocality.jsx","components/RadioButtons/RadioButtons.styled.js","components/RadioButtons/RadioButtons.jsx","components/NoticesFilter/NoticesFilter.jsx","components/Notices/Notices.jsx","pages/NoticesPage.jsx","redux/petLove/selector.js"],"sourcesContent":["import color from 'common/GlobalColors';\nimport styled from 'styled-components'\n\nexport const PaginationConteiner = styled.div`\n  display: flex;\n  justify-content: start; \n  align-items: center; \n\n  @media (min-width: 768px) {  \n    justify-content: center; \n  }\n`\n\nexport const PaginationButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${({dis}) =>( dis ? color.orangePrimary :  \"transporent\")}; \n  margin-right:  ${({current }) => current === 'last' ? '0' : '10px'};\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  color: ${({dis}) => (dis ? color.white : color.blackPrimary) };\n  border: 1px solid rgba(38, 38, 38, 0.05);\n  fill: ${color.blackPrimary};\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n   scale: ${({ disabled }) => (disabled ? 'none' : 1.1)};\n  }\n\n  &:disabled {\n    cursor: default;\n    color: ${color.white};\n    box-shadow: none;\n  fill: ${color.blackPrimaryFiftyPercebt};\n\n  }\n`;\n\nexport const ThreeDots = styled.span`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n  margin-right:  10px;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 1px solid rgba(38, 38, 38, 0.05);\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 44px;\n  height: 44px;\n\n  transition: all 0.25s linear;\n  &:focus,\n  &:hover {\n    stroke: ${color.blackModalColr};\n  };\n`","import { PaginationButton, PaginationConteiner, PaginationSvg, ThreeDots } from \"./Pagination.styled\";\nimport sprite from '../../img/sprite.svg';\n\nconst getVisiblePages = (current, total) => {\n  if (total < 3) {\n    // Если страниц меньше трех, возвращаем все\n    return Array.from({length: total}, (_, i) => i + 1);\n  } else {\n    // Вычисляем начальную страницу для показа\n    let startPage = current - ((current - 1) % 3);\n    // Вычисляем последнюю страницу для показа\n    let endPage = Math.min(startPage + 2, total);\n    return Array.from({length: (endPage - startPage + 1)}, (_, i) => startPage + i);\n  }\n};\n\nexport const Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const visiblePages = getVisiblePages(currentPage, totalPages);\n\n  const handlePrevBtn = () => {\n    onPageChange(Math.max(currentPage - 1, 1));\n  };\n\n  const handleNextBtn = () => {\n    onPageChange(Math.min(currentPage + 1, totalPages));\n  };\n\n  return (\n    <PaginationConteiner>\n      <PaginationButton disabled={currentPage === 1} onClick={() => onPageChange(1)}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-l-left`} />\n        </PaginationSvg>\n      </PaginationButton>\n      <PaginationButton disabled={currentPage === 1} onClick={handlePrevBtn}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-left`} />\n        </PaginationSvg>\n      </PaginationButton>\n      {visiblePages.map(page => (\n        <PaginationButton\n          key={page}\n          dis={currentPage === page ? \"true\" : ''} \n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </PaginationButton>\n      ))}\n      {currentPage < totalPages && totalPages > 5 && <ThreeDots>...</ThreeDots>}\n      <PaginationButton disabled={currentPage === totalPages} onClick={handleNextBtn}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-right`} />\n        </PaginationSvg>\n      </PaginationButton>\n      <PaginationButton disabled={currentPage === totalPages}  onClick={() => onPageChange(totalPages)}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-r-right`} />\n        </PaginationSvg>\n      </PaginationButton>\n    </PaginationConteiner>\n  );\n};","import color from 'common/GlobalColors';\nimport styled from 'styled-components';\n\nexport const SearchContainer = styled.div`\nposition: relative;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 14px;\n  /* display: flex;\n    align-self: center;\n  justify-content: center; */\n  font-size: 16px;\n  width: ${({width}) => width || '230px' };\n  border: ${({ border }) => border || `1px solid ${color.blackPrimaryLight}`};\n  border-radius: 30px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${({ border }) => border === \"none\" ? color.blackPrimary :  \"none\"};\n  }\n\n`;\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n  &:hover {\n    /* background-color: #0056b3; */\n  }\n`;\n\nexport const ClearButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 36px;\n  stroke: ${color.blackPrimary};\n    /* background-color: #dc3545; */\n\n  &:hover {\n    /* background-color: #c82333; */\n  }\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { ClearButton, SearchButton, SearchContainer, SearchInput } from './SearchField.styled';\nimport sprite from '../../img/sprite.svg';\n\nexport default function SearchField({ onSearch, width, border, resetSignal }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSearch(input);\n  };\n\n  const handleClear = () => {\n    setInput('');\n    onSearch('');\n  };\n\n  const resetSearchField = useCallback(() => {\n    setInput('');\n  }, [setInput]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    resetSearchField();\n  }, [resetSignal, resetSearchField ]);\n\n  return (\n    <SearchContainer>\n      <form onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Search\"\n          border={border}\n          width={width}\n        />\n        {input && (\n          <ClearButton onClick={handleClear} type=\"button\">\n            <svg width={18} height={18}>\n              <use href={`${sprite}#icon-x`} />\n            </svg>\n          </ClearButton>\n        )}\n        <SearchButton type=\"submit\">\n          <svg width={18} height={18}>\n            <use href={`${sprite}#icon-search-1`} />\n          </svg>\n        </SearchButton>\n      </form>\n    </SearchContainer>\n  );\n};","import styled from 'styled-components'\n\nexport const NoticesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  width: 1280px;\n  padding: 64px 63px 80px 63px;  \n`","import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const CardContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 363px;\n  height: 444px;\n  background:  ${color.white};\n  border-radius: 16px;\n  padding: 24px;\n`\n\nexport const ImgCard = styled.img`\n  width: 315px;\n  height: 178px;\n  border-radius: 16px; \n  background: ${color.orangeLight};\n  object-fit: cover; \n`\nexport const InfMainContainer = styled.div`\n  min-height: 194px; \n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport const PopularityIndicators = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nexport const TitleCard = styled.h3`\n  color: ${color.blackPrimaryCard};\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  letter-spacing: 1;\n\n  margin-bottom: ${({ margin }) => (margin || '0px')};\n`\n\n\nexport const PopularityContainer = styled.div`\n  display: flex;\n  gap: 4px; \n`\n\nexport const PetDetails = styled.ul`\n  display: flex;\n  gap: 20px; \n  margin-bottom: ${({margin}) => margin || '16px'}; \n`\n\nexport const PetComments = styled.p`\n  color: ${color.blackPrimaryCard};\n  font-size: 14px;\n`\n\nexport const NavCard = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n`\n\nexport const FavoritBtn = styled.button.withConfig({\n  shouldForwardProp: (prop) => !['isFavorite'].includes(prop),\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  border: none;\n  background: ${color.orangeLight};\n  \n  :hover,\n  :focus {\n    /* background: red; */\n  }\n\n  svg {\n    width: 18px;\n    height: 18px;\n\n    fill: ${({isFavorite}) => (isFavorite ? color.orangePrimary : 'transparent')};\n    stroke: ${color.orangePrimary};\n  }\n\n  /* fill: transparent;\n  stroke: ${color.orangePrimary};\n\n  :active{\n    fill: ${color.white};\n    stroke: ${color.blackPrimary};\n  } */\n\n`","import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const DetailTitle = styled.h5`\n  color:${color.blackPrimaryFiftyPercebt};\n  font-size: 10px;\n  line-height: 1.4;\n  letter-spacing: -0.02em;\n  margin-bottom: 2px;\n`\n\nexport const DetailValues = styled.p`\n  font-size: 12px;\n  line-height: 1.16;\n  letter-spacing: -0.02em;\n`","import { DetailTitle, DetailValues } from \"./NoticesPetDetailItem.styled\";\n\nexport default function PetDetailItem({ label, value }) {\n  return (\n    <li>\n      <DetailTitle>{label}</DetailTitle>\n      <DetailValues>{value}</DetailValues>\n    </li>\n  );\n}","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const AttentionsModal = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 466px;\n  min-height: 434px;\n  background: ${color.white};\n  border-radius: 30px;\n  padding: 60px ;\n`;\n\nexport const DogSilhouette = styled.img`\n  width: 80px;\n  height: 80px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleAttention = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.29;\n  margin-bottom: 20px;\n  color: ${color.orangePrimary};\n`;\n\nexport const TextAttention = styled.p`\ntext-align: center;\n  font-size: 14px;\n  line-height: 1.17;\n  margin-bottom: 28px;\n  color: ${color.blackPrimaryCard};\n  letter-spacing: -0.02em;\n`;\n\nexport const NavContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;","import XButton from \"components/XButton/XButton\";\nimport { AttentionsModal, DogSilhouette, NavContainer, TextAttention, TitleAttention } from \"./ModalAttention.styled\";\nimport ButtonNav from \"components/Buttons/ButtonNav/ButtonNav\";\nimport dogImg from '../../../img/PetInCircle/DogInСircle.png';\n\nexport default function ModalAttentions({ closeModals }) {\n  return (           \n    <AttentionsModal>\n      <DogSilhouette src={dogImg} alt=\"dog silhouette\" />\n\n      <TitleAttention>Attention</TitleAttention>\n      <TextAttention>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials. If you do not already have an account, you must register to access these features.</TextAttention>\n\n      <NavContainer>\n        <ButtonNav to='/login' label='LOG IN' width='140px'  />\n        <ButtonNav to='/register' label='REGISTRATION' width='140px' />\n      </NavContainer>\n\n      <XButton closeModals={closeModals} />\n    </AttentionsModal>\n  );\n};","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const NoticeModal = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 473px;\n  height: 476px;  \n  background: ${color.white};\n  border-radius: 30px;\n  padding: 40px ;\n`;\n\nexport const ImgContainer = styled.div`\n  position:relative;\n`;\nexport const PetImg = styled.img`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n  margin-bottom: 16px;\n`;\nexport const CategoryBlock = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${color.orangePrimary};\n  background: ${color.orangeLight};\n  padding: 8px 14px;\n  border-radius: 30px; \n\n`;\n\nexport const PetCategory = styled.p`\n  font-size: 14px;\n  line-height: 1.29;\n  letter-spacing: -0.02em;\n`;\n\nexport const ReitingContainer = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-bottom: 20px;\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: auto;\n`;","import styled from \"styled-components\";\n\nexport const Star = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: ${(props) => (props.filled === \"true\" ? \"gold\" : \"gray\")}; \n`;\n","import React from 'react';\nimport sprite from '../../img/sprite.svg';\nimport { Star } from './StarRaiting.styled';\n\nconst StarRating = ({ rating }) => {\n  const totalStars = 5;\n  return (\n    <div>\n      {[...Array(totalStars)].map((_, index) => (\n        <Star key={index} filled={index < rating ? \"true\" : ''}>\n          <use href={`${sprite}#icon-star`} />\n        </Star>\n      ))}\n    </div>\n  );\n};\n\nexport default StarRating;","import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const LightBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.03em;;\n  height: 50px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 30px;\n  /* border: 1px solid ${({ home }) => home  ? color.whiteTransparencyZeroFour : 'none'}; */\n  color: ${color.orangePrimary};\n  background: ${color.orangeLight};\n\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background: ${color.orangeDim };\n    /* color: ${({ label }) =>label === 'REGISTRATION' ? color.orangePrimary : color.white}; */\n    outline: none;\n  }\n`","import { LightBtn } from \"./ButtonLightOrange.styled\";\n\n\nexport default function ButtonLightOrange({ className, label, onClick, width }) {\n  return (    \n    <LightBtn className={className} onClick={onClick} width={width} label={label} >\n      {label}\n    </LightBtn>    \n  )\n}","import XButton from \"components/XButton/XButton\";\nimport { BtnContainer, CategoryBlock, ImgContainer, NoticeModal, PetCategory, PetImg, ReitingContainer } from \"./ModalNotice.styled\";\nimport { PetComments, PetDetails, TitleCard } from \"components/NoticesItem/NoticesItem.styled\";\nimport PetDetailItem from \"components/NoticesPetDetailItem/NoticesPetDetailItem\";\nimport StarRating from \"components/StarRaiting/StarRaiting\";\nimport ButtonOrange from \"components/Buttons/ButtonOrange/ButtonOrange\";\nimport ButtonLightOrange from \"components/Buttons/ButtonLightOrange/ButtonLightOrange\";\nimport { useDispatch } from \"react-redux\";\nimport {  noticesFavorite, noticesFavoriteDell } from \"../../../redux/petLove/operations\";\n\nexport default function ModalNotice({ closeModals, card, petDetailsData, isFavorite }) {\n  const dispatch = useDispatch();\n\n  const handleAddToFavorite = (item) => {\n    if(!isFavorite){\n      dispatch(noticesFavorite(item));\n    } else{\n      dispatch(noticesFavoriteDell(item));\n    }\n  };\n\n  // console.log( card )\n  return (           \n    <NoticeModal>  \n      <ImgContainer>\n        <PetImg src={card.imgURL} alt=\"pet\" />\n        <CategoryBlock>\n          <PetCategory>{card.category}</PetCategory>\n        </CategoryBlock>\n      </ImgContainer>    \n\n      <TitleCard margin=\"10px\">{card.title}</TitleCard>\n      <ReitingContainer>\n        <StarRating rating={Math.min(card.popularity, 5)} />\n        <p>{card.popularity}</p>\n      </ReitingContainer>             \n      \n      <PetDetails margin=\"18px\">\n        {petDetailsData.slice(0, 4).map((detail) => (\n          <PetDetailItem key={detail.label} label={detail.label} value={detail.value} />\n        ))}\n      </PetDetails>\n      <PetComments>{card.comment}</PetComments>\n\n      <BtnContainer>\n        <ButtonOrange \n          label={isFavorite ?  \"Remove\" : 'Add to'} \n          width='160px' \n          onClick={() => handleAddToFavorite(card._id)} \n          isFavorite={isFavorite}\n        />\n        <ButtonLightOrange label='Contact'  width='160px' />\n      </BtnContainer>\n\n      <XButton closeModals={closeModals} />\n    </NoticeModal>\n  );\n};","import { CardContainer, FavoritBtn, ImgCard, InfMainContainer, NavCard, PetComments, PetDetails, PopularityContainer, PopularityIndicators, TitleCard } from \"./NoticesItem.styled\";\nimport sprite from '../../img/sprite.svg';\nimport PetDetailItem from \"components/NoticesPetDetailItem/NoticesPetDetailItem\";\nimport ButtonOrange from \"components/Buttons/ButtonOrange/ButtonOrange\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport { useEffect, useState } from \"react\";\nimport ModalAttentions from \"components/Modals/ModalAttention/ModalAttention\";\nimport ModalNotice from \"components/Modals/ModalNotice/ModalNotice\";\nimport { selectToken, selectUser } from \"../../redux/auth/selectorAuth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Star } from \"components/StarRaiting/StarRaiting.styled\";\nimport { noticesFavorite, noticesFavoriteDell } from \"../../redux/petLove/operations\";\nimport { selectFavoritePets } from \"../../redux/petLove/selector\";\nimport { currentFull } from \"../../redux/auth/operationsAuth\";\n\nexport default function NoticesItem({card}) {  \n  const [openModal, setOpenModal] = useState(false);\n  const [openModalNotice, setOpenModalNotice] = useState(false);\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  let user = useSelector(selectUser);\n  let favoritesList = useSelector(selectFavoritePets);\n\n  const isFavorite = favoritesList.includes(card._id) || user?.noticesFavorites?.some(i => i._id === card._id);\n\n  useEffect(() => {\n    if (token && !user.name ) {\n      dispatch(currentFull());\n    }\n  }, [dispatch, token, user.name, isFavorite]);\n\n  // Функція для форматування дати\n  const formatDate = (dateString) => {\n    if(card.birthday) {\n      const dateParts = dateString.split(\"-\");\n      return `${dateParts[2]}.${dateParts[1]}.${dateParts[0]}`;\n    } else{\n      return 'unknown';\n    }\n  };\n\n  const getFirstName = (fullName) => {\n    return fullName.split(\" \")[0]; // Разделяем строку по пробелу и берем первое слово\n  };\n\n  // Створюємо масив об'єктів з label та value\n  const petDetailsData = [\n    { label: \"Name\", value: getFirstName(card.name) },\n    { label: \"Birthday\", value: formatDate(card.birthday) },\n    { label: \"Sex\", value: card.sex },\n    { label: \"Species\", value: card.species },\n    { label: \"Category\", value: card.category }\n  ];\n\n  const handleButtonClick = () => {\n    if (token) {\n      setOpenModalNotice(true);\n    } else {\n      setOpenModal(true);\n    }\n  };\n\n  const handleButtonFavorite = (i) => {\n    if (token) {\n      if(!isFavorite){\n        dispatch(noticesFavorite(i));\n      } else{\n        dispatch(noticesFavoriteDell(i));\n      }\n    } else {\n      setOpenModal(true); \n    }\n  };\n  \n  return (\n    <CardContainer>\n      <ImgCard src={card.imgURL} alt='pet' />\n      <InfMainContainer>\n        <div>\n          <PopularityIndicators>\n            <TitleCard>{card.title}</TitleCard>\n\n            <PopularityContainer>\n              <Star filled=\"true\">\n                <use href={`${sprite}#icon-star`} />\n              </Star>\n              <p>{card.popularity}</p>\n            </PopularityContainer>        \n          </PopularityIndicators>\n          <PetDetails>\n            {petDetailsData.map((detail) => (\n              <PetDetailItem key={detail.label} label={detail.label} value={detail.value} />\n            ))}\n          </PetDetails>\n          <PetComments>{card.comment}</PetComments>\n        </div>\n\n        <NavCard>\n          <ButtonOrange label='Learn more'  onClick={handleButtonClick} />\n          <FavoritBtn  onClick={() => handleButtonFavorite(card._id)} isFavorite={isFavorite}  >\n            <svg >\n              <use href={`${sprite}#icon-heart-add`} />\n            </svg>\n          </FavoritBtn>\n        </NavCard>\n      </InfMainContainer>\n      \n      <PortalModal active={openModalNotice} setActive={setOpenModalNotice}>\n        <ModalNotice closeModals={() => setOpenModalNotice()} card={card} petDetailsData={petDetailsData} isFavorite={isFavorite} />\n      </PortalModal>\n      <PortalModal active={openModal} setActive={setOpenModal}>\n        <ModalAttentions closeModals={() => setOpenModal()} />\n      </PortalModal>\n    </CardContainer> \n  );\n}  ","import styled from 'styled-components'\n\nexport const NoticesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px 32px; \n\n  margin-bottom: 60px;\n`","import NoticesItem from \"components/NoticesItem/NoticesItem\"\nimport { NoticesListContainer } from \"./NoticesList.styled\"\n\nexport default function NoticesList({noticesData}){\n  return (\n    <NoticesListContainer>\n      {Array.isArray(noticesData.results) && noticesData.results.map((card) => (\n        <NoticesItem key={card._id} card={card}/>\n      ))}\n    </NoticesListContainer>\n  )\n}","import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 1216px;\n  height: 216px;\n  border-radius: 30px;\n  background: ${color.orangeLight};\n  padding: 40px;  \n`\n\nexport const DataEntryContainer = styled.div`\n  display: flex;\n  gap: 16px;\n`\n\nexport const SeparatingContainer = styled.div`\n  width: 100%;\n  border: 1px solid rgba(38, 38, 38, 0.1);\n  margin: 20px 0;\n`\n\nexport const BottomContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nexport const ResetBtn = styled.button`\n  display: flex;\n  justify-content: space-between;\n`","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  height: 48px;\n  border-radius: 30px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: ${color.white};\n  padding: 14px;\n\n  width: 200px;\n  color: ${color.blackPrimary};\n \n  /* &:first-letter {\n    text-transform: uppercase;\n  } */\n  /* @media (min-width: 768px) {\n    width: 224px;\n  } */\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 52px;\n  left: 0;\n  background-color: ${color.white};\n\n  display: ${({ open }) => (open ? 'block' : 'none')};\n  height: 160px; \n  /* max-height: 160px;  */\n\n  padding: 14px;\n  /* margin: 0; */\n  width: 100%;\n  border-radius: 15px;\n`;\n\nexport const DropdownItem = styled.li`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${color.blackPrimarySixtyPercebt};\n  /* padding:  3px 0; */\n  cursor: pointer;  \n\n  &:hover {\n    color: ${color.orangePrimary};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n\n// export const BtnConteiner = styled.div`\n//   display: flex;\n//   gap: 8px;\n//   margin-top: 40px;\n// `;","import { useCallback, useEffect, useRef, useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg } from './SelectorCategory.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoriesList } from '../../../redux/petLove/selector';\nimport { categoriesInf } from '../../../redux/petLove/operations';\n\nexport default function SelectorCategory ({ setSelectedCategory, resetSignal }){\n  const [selectedArticle, setSelectedArticle] = useState(\"\");\n  const [dropdownArticle, setDropdownArticle] = useState(false);\n  const dropdownRef = useRef();\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategoriesList);\n\n  useEffect(() => {\n    dispatch(categoriesInf())\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownArticle(false); \n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => document.removeEventListener('mousedown', handleOutsideClick);\n  }, [setDropdownArticle]); \n\n  const resetSelectorCategory = useCallback(() => {\n    setSelectedArticle('');\n  }, [setSelectedArticle]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    resetSelectorCategory();\n  }, [resetSignal, resetSelectorCategory ]);\n\n\n\n\n\n  const extendedCategories = [\"Show all\", ...categories];\n\n  const toggleDropdown = () => setDropdownArticle(!dropdownArticle);\n  const handleDropdownButtonClick = (event) => {\n    toggleDropdown();\n  };\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const handleItemClick = (category) => {\n    // console.log(category)\n    const capitalizedCategory = capitalizeFirstLetter(category);\n    setSelectedArticle(capitalizedCategory);\n    setSelectedCategory(category)\n    toggleDropdown();\n  };\n\n\n\n\n\n  return (\n    <Dropdown ref={dropdownRef}>\n      <DropdownSvg onClick={toggleDropdown}>\n        <use href={`${sprite}#icon-chevron-${dropdownArticle ? 'up' : 'down'}`} />\n      </DropdownSvg>\n      <DropdownButton\n        type=\"button\" \n        onClick={handleDropdownButtonClick} \n      >\n        {selectedArticle || \"Category\"}\n      </DropdownButton>  \n      <DropdownList open={dropdownArticle}>\n          {extendedCategories.map((category, index) => (\n            <DropdownItem key={index} onClick={() => handleItemClick(category)}>\n              {category}\n            </DropdownItem>\n          ))}\n      </DropdownList>                      \n    </Dropdown>\n  )\n}","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  height: 48px;\n  border-radius: 30px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: ${color.white};\n  padding: 14px;\n\n  width: 190px;\n  color: ${color.blackPrimary};\n \n  /* &:first-letter {\n    text-transform: uppercase;\n  } */\n  /* @media (min-width: 768px) {\n    width: 224px;\n  } */\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 52px;\n  left: 0;\n  background-color: ${color.white};\n\n  display: ${({ open }) => (open ? 'block' : 'none')};\n  height: 160px; \n  /* max-height: 160px;  */\n\n  padding: 14px;\n  /* margin: 0; */\n  width: 100%;\n  border-radius: 15px;\n`;\n\nexport const DropdownItem = styled.li`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${color.blackPrimarySixtyPercebt};\n  /* padding:  3px 0; */\n  cursor: pointer;  \n\n  &:hover {\n    color: ${color.orangePrimary};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n\n// export const BtnConteiner = styled.div`\n//   display: flex;\n//   gap: 8px;\n//   margin-top: 40px;\n// `;","import { useCallback, useEffect, useRef, useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg } from './SelectorGender.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSexList } from '../../../redux/petLove/selector';\nimport { gendersInf } from '../../../redux/petLove/operations';\n\nexport default function SelectorGender ({ setSelectedGender, resetSignal }){\n  const [selectedArticle, setSelectedArticle] = useState(\"\");\n  const [dropdownArticle, setDropdownArticle] = useState(false);\n  const dropdownRef = useRef();\n  const dispatch = useDispatch();\n  const sex = useSelector(selectSexList);\n\n  useEffect(() => {\n    dispatch(gendersInf())\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownArticle(false); \n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => document.removeEventListener('mousedown', handleOutsideClick);\n  }, [setDropdownArticle]); \n\n\n\n  const resetSelectorGender = useCallback(() => {\n    setSelectedArticle('');\n  }, [setSelectedArticle]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    setSelectedArticle();\n  }, [resetSignal, resetSelectorGender ]);\n\n\n\n\n\n  const extendedCategories = [\"Show all\", ...sex];\n\n  const toggleDropdown = () => setDropdownArticle(!dropdownArticle);\n  const handleDropdownButtonClick = (event) => {\n    toggleDropdown();\n  };\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const handleItemClick = (category) => {\n    // console.log(category)\n    const capitalizedCategory = capitalizeFirstLetter(category);\n    setSelectedArticle(capitalizedCategory);\n    setSelectedGender(category)\n    toggleDropdown();\n  };\n\n  return (\n    <Dropdown ref={dropdownRef}>\n      <DropdownSvg onClick={toggleDropdown}>\n        <use href={`${sprite}#icon-chevron-${dropdownArticle ? 'up' : 'down'}`} />\n      </DropdownSvg>\n      <DropdownButton\n        type=\"button\" \n        onClick={handleDropdownButtonClick} \n      >\n        {selectedArticle || \"By gender\"}\n      </DropdownButton>  \n      <DropdownList open={dropdownArticle}>\n          {extendedCategories.map((category, index) => (\n            <DropdownItem key={index} onClick={() => handleItemClick(category)}>\n              {category}\n            </DropdownItem>\n          ))}\n      </DropdownList>                      \n    </Dropdown>\n  )\n}","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\n\nexport const StyledSimpleBar = styled(SimpleBar)`\n  .simplebar-scrollbar {\n    background: rgba(255, 255, 255, 0.4) !important;\n    width: 8px !important;\n    border-radius: 12px !important;\n  }\n\n  .simplebar-track.simplebar-vertical {\n    width: 8px !important;\n    right: -10px !important;\n  }\n\n  .simplebar-track.simplebar-vertical .simplebar-scrollbar:before {\n    background-color: #dcdcdc;\n  }\n\n  .simplebar-track.simplebar-vertical .simplebar-scrollbar:hover:before {\n    background-color: #bcbcbc;\n  }\n`;\n\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  height: 48px;\n  border-radius: 30px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: ${color.white};\n  padding: 14px;\n\n  width: 190px;\n  color: ${color.blackPrimary};\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 52px;\n  left: 0;\n  background-color: ${color.white};\n\n  display: ${({ open }) => (open ? 'block' : 'none')};\n  height: 216px; \n  padding: 14px;\n  width: 100%;\n  border-radius: 15px;\n`;\n\nexport const DropdownItem = styled.li`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${color.blackPrimarySixtyPercebt};\n  /* padding:  3px 0; */\n  cursor: pointer;  \n\n  &:hover {\n    color: ${color.orangePrimary};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg, StyledSimpleBar } from './SelectType.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSpeciesList } from '../../../redux/petLove/selector';\nimport { typesInf } from '../../../redux/petLove/operations';\n\nexport default function SelectorType ({setSelectedType, resetSignal}){\n  const [selectedArticle, setSelectedArticle] = useState(\"\");\n  const [dropdownArticle, setDropdownArticle] = useState(false);\n  const dropdownRef = useRef();\n  const dispatch = useDispatch();\n  const types = useSelector(selectSpeciesList);\n\n  useEffect(() => {\n    dispatch(typesInf())\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownArticle(false); \n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => document.removeEventListener('mousedown', handleOutsideClick);\n  }, [setDropdownArticle]); \n\n  const resetSelectorType = useCallback(() => {\n    setSelectedArticle('');\n  }, [setSelectedArticle]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    resetSelectorType();\n  }, [resetSignal, resetSelectorType ]);\n\n\n\n  const extendedCategories = [\"Show all\", ...types];\n\n  const toggleDropdown = () => setDropdownArticle(!dropdownArticle);\n  const handleDropdownButtonClick = (event) => {\n    toggleDropdown();\n  };\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const handleItemClick = (category) => {\n    // console.log(category)\n    const capitalizedCategory = capitalizeFirstLetter(category);\n    setSelectedArticle(capitalizedCategory);\n    setSelectedType(category)\n    toggleDropdown();\n  };\n\n  return (\n    <Dropdown ref={dropdownRef}>\n      <DropdownSvg onClick={toggleDropdown}>\n        <use href={`${sprite}#icon-chevron-${dropdownArticle ? 'up' : 'down'}`} />\n      </DropdownSvg>\n      <DropdownButton\n        type=\"button\" \n        onClick={handleDropdownButtonClick} \n      >\n        {selectedArticle || \"By type\"}\n      </DropdownButton>  \n      <DropdownList open={dropdownArticle}>\n        <StyledSimpleBar style={{ maxHeight: 188 }}>\n          {extendedCategories.map((category, index) => (\n            <DropdownItem key={index} onClick={() => handleItemClick(category)}>\n              {category}\n            </DropdownItem>\n          ))}\n        </StyledSimpleBar>\n      </DropdownList>                      \n    </Dropdown>\n  )\n}","import Select from 'react-select';\nimport styled from 'styled-components';\n\nexport const StyledSelect = styled(Select)`\n.react-select__control {\n  width: 227px;\n  height: 48px;\n  border: none;\n  border-radius: 30px;\n  background: rgb(255, 255, 255);\n  box-shadow: none;\n  padding-left: 14px;\n}\n\n.react-select__control--is-focused {\n  border-color: 1px solid rgb(246, 184, 61);\n}\n\n.react-select__value-container {\n  margin: 0;\n  padding: 0;\n}\n\n.react-select__value-container {\n  padding: 0 6px;\n  margin: 0;\n  padding: 0;\n}\n\n.react-select__input {\n  /* margin: 0;\n  padding: 0; */\n}\n\n.react-select__placeholder {\n  color: rgba(0, 0, 0, 0.4);\n  margin: 0;\n  padding: 0;\n}\n\n.react-select__indicator-separator {\n  display: none;\n}\n\n.react-select__dropdown-indicator {\n  /* padding: 4px; */\n  display: none;\n}\n\n.react-select__menu {\n  border-radius: 15px;\n  margin-top: -84px;\n}\n\n.react-select__menu-list {\n  border-radius: 15px;\n}\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  padding: 10px 20px;\n  background-color: rgb(246, 184, 61);\n  border: none;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: rgb(220, 160, 50);\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 240px;\n  margin-top: 10px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { citiesInf } from '../../redux/petLove/operations';\nimport { selectCitiesList } from '../../redux/petLove/selector';\nimport { StyledSelect } from './SearchLocality.styled';\n\nexport default function SearchLocality({  onLocationChange  }) {\n  const [inputValue, setInputValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const dispatch = useDispatch();\n  const citiesData = useSelector(selectCitiesList);  \n\n  useEffect(() => {\n    dispatch(citiesInf());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (inputValue) {\n      const filteredOptions = citiesData.filter(city =>{\n         return city.cityEn.toLowerCase().includes(inputValue.toLowerCase())}\n      ).map(city => {\n        console.log(city)\n        return ({ value: city.cityEn , label: city.cityEn, id: city._id })});\n      setOptions(filteredOptions);\n    } else {\n      setOptions([]);\n    }\n  }, [inputValue, citiesData]);\n\n  const handleInputChange = (input) => {\n    setInputValue(input);\n  };\n\n  const handleChange = (selectedOption) => {\n    onLocationChange(selectedOption);\n  };\n\n  return (\n    <StyledSelect\n      classNamePrefix=\"react-select\"\n      value={null}\n      inputValue={inputValue}\n      onInputChange={handleInputChange}\n      onChange={handleChange}\n      options={options}\n      placeholder=\"Location\"\n      isClearable\n    />\n  );\n};","import color from 'common/GlobalColors';\nimport styled from 'styled-components';\n\nexport const RadioContainer = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const RadioButton = styled.input`\n  margin-right: 10px;\n`;\n\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px;\n  border-radius: 30px;\n  cursor: pointer;\n  background-color: ${({ checked }) => (checked ? color.orangePrimary : color.white)};\n  color: ${({ checked }) => (checked ? color.white : '#000')};\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    background-color: ${color.orangeDim};\n    color: #fff;\n  }\n`;\n\nexport const StyledRadioButton = styled.input`\n  display: none;\n`;\n\nexport const SvgX = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${color.white};\n  fill: transparent;\n  margin-left: 8px;\n`;","import React, { useState, useEffect, useCallback } from 'react';\nimport { RadioGroup, RadioContainer, Label, StyledRadioButton, SvgX } from './RadioButtons.styled';\nimport sprite from '../../img/sprite.svg';\n\nexport default function RadioButtons({ setSortCriteria, resetSignal }) {\n  const [isPopular, setIsPopular] = useState(null); // true for Popular, false for Unpopular\n  const [isExpensive, setIsExpensive] = useState(null); // true for Expensive, false for Cheap\n\n  const resetRadioButtons = useCallback(() => {\n    setIsPopular(null);\n    setIsExpensive(null);\n    setSortCriteria({ popular: null, price: null });\n  }, [setSortCriteria]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    resetRadioButtons();\n  }, [resetSignal, resetRadioButtons ]);\n\n\n  \n  const handlePopularChange = () => {\n    setIsPopular(true);\n    setSortCriteria((prev) => ({ ...prev, popular: false }));\n  };\n\n  const handleUnpopularChange = () => {\n    setIsPopular(false);\n    setSortCriteria((prev) => ({ ...prev, popular: true }));\n  };\n\n  const handleCheapChange = () => {\n    setIsExpensive(false);\n    setSortCriteria((prev) => ({ ...prev, price: false }));\n  };\n\n  const handleExpensiveChange = () => {\n    setIsExpensive(true);\n    setSortCriteria((prev) => ({ ...prev, price: true }));\n  };\n\n\n\n  return (\n    <RadioContainer>\n      <RadioGroup>\n        <Label checked={isPopular === true}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isPopular === true}\n            onChange={handlePopularChange}\n          />\n          Popular\n          {isPopular === true && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n        <Label checked={isPopular === false}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isPopular === false}\n            onChange={handleUnpopularChange}\n          />\n          Unpopular\n          {isPopular === false && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n      </RadioGroup>\n\n      <RadioGroup>\n        <Label checked={isExpensive === false}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isExpensive === false}\n            onChange={handleCheapChange}\n          />\n          Cheap\n          {isExpensive === false && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n        <Label checked={isExpensive === true}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isExpensive === true}\n            onChange={handleExpensiveChange}\n          />\n          Expensive\n          {isExpensive === true && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n      </RadioGroup>\n    </RadioContainer>\n  );\n}\n","import SearchField from \"components/SearchField/SearchField\";\nimport { BottomContainer, DataEntryContainer, FilterContainer, SeparatingContainer } from \"./NoticesFilter.styled\";\nimport SelectorCategory from \"components/Selectors/SelectorCategory/SelectorCategory\";\nimport SelectorGender from \"components/Selectors/SelectorGender/SelectorGender\";\nimport SelectorType from \"components/Selectors/SelectType/SelectType\";\nimport SearchLocality from \"components/SearchLocality/SearchLocality\";\nimport RadioButtons from \"components/RadioButtons/RadioButtons\";\nimport { useState } from \"react\";\nimport ButtonGrayUniversal from \"components/Buttons/ButtonGrayUniversal/ButtonGrayUniversal\";\n\nexport default function NoticesFilter ({ setCurrentPage, setKeyword, setSelectedCategory, setSelectedType, setSelectedGender, onLocationChange, setSortCriteria, anyFilterSelected, handleResetFilters }){\n  const [resetSignal, setResetSignal] = useState(false);\n\n  const handleSearch = (searchTerm) => {\n    setKeyword(searchTerm);\n    setCurrentPage(1);\n  };\n\n  const handleResetFiltersWithSignal = () => {\n    handleResetFilters();\n    setResetSignal(prev => !prev);\n  };\n\nreturn (\n  <FilterContainer>\n    <DataEntryContainer>\n      <SearchField onSearch={handleSearch} width=\"265px\" border=\"none\" resetSignal={resetSignal} />\n      <SelectorCategory setSelectedCategory={setSelectedCategory} resetSignal={resetSignal} />\n      <SelectorGender setSelectedGender={setSelectedGender} resetSignal={resetSignal}/>\n      <SelectorType setSelectedType={setSelectedType} resetSignal={resetSignal} />\n      <SearchLocality onLocationChange={onLocationChange} />\n    </DataEntryContainer>\n\n    <SeparatingContainer />\n\n    <BottomContainer>\n      <RadioButtons setSortCriteria={setSortCriteria} resetSignal={resetSignal} />\n      {anyFilterSelected && (\n        <ButtonGrayUniversal label='Reset Filters' onClick={handleResetFiltersWithSignal} width='148px' />\n      )}\n    </BottomContainer>\n  </FilterContainer>\n)\n}","import { ContentContainer, Title } from \"common/GiobalStyles\";\nimport { NoticesContainer } from \"./Notices.styled\";\nimport NoticesList from \"components/NoticesList/NoticesList\";\nimport NoticesFilter from \"components/NoticesFilter/NoticesFilter\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { noticesInf } from \"../../redux/petLove/operations\";\nimport { selectNoticesInf } from \"../../redux/petLove/selector\";\nimport { Pagination } from \"components/Pagination/Pagination\";\n\nexport default function Notices() {\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [selectedGender, setSelectedGender] = useState(\"\");\n  const [locationId, setLocationId] = useState(\"\");\n  const [sortCriteria, setSortCriteria] = useState({ popular: null, price: null });\n  const [keyword, setKeyword] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const noticesData = useSelector(selectNoticesInf);  \n\n  const anyFilterSelected = selectedCategory || selectedType || selectedGender || locationId || sortCriteria.popular !== null || sortCriteria.price !== null || keyword;\n\n  const handleResetFilters = () => {\n    setSelectedCategory(\"\");\n    setSelectedType(\"\");\n    setSelectedGender(\"\");\n    setLocationId(\"\");\n    setSortCriteria({ popular: null, price: false });\n    setKeyword(\"\");\n    setCurrentPage(1);\n    console.log(\"ggggggggggggggggggggggggggggggg\")\n  };\n\n\n  const getCategory = (article) => {\n    if (article === \"Show all\") {\n      return '';\n    }\n    return article.toLowerCase();\n  };\n\n  useEffect(() => {\n    const category = getCategory(selectedCategory);\n    const species = getCategory(selectedType);\n    const sex = getCategory(selectedGender);\n\n    dispatch(noticesInf({\n      keyword, \n      byDate: true, \n      page: currentPage, \n      limit: 6, \n      category, \n      species, \n      sex, \n      locationId, \n      byPrice: sortCriteria.price, \n      byPopularity: sortCriteria.popular\n    }));\n  }, [dispatch, currentPage, keyword, selectedCategory, selectedType, selectedGender, locationId, sortCriteria.price, sortCriteria.popular]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n\n  const handleLocationChange = (selectedLocation) => {\n    setLocationId(selectedLocation.id)\n    console.log('Selected location:', selectedLocation.id);\n  };\n  \n  return (\n    <ContentContainer>\n      <NoticesContainer>\n        <Title>Find your favorite pet</Title>\n        <NoticesFilter \n          setCurrentPage={setCurrentPage} \n          setKeyword={setKeyword} \n          setSelectedCategory={setSelectedCategory}\n          setSelectedType={setSelectedType}\n          setSelectedGender={setSelectedGender}\n          onLocationChange={handleLocationChange}\n          setSortCriteria={setSortCriteria}\n          anyFilterSelected={anyFilterSelected}\n          handleResetFilters={handleResetFilters}\n        />\n\n        <div>\n          <NoticesList noticesData={noticesData} />    \n          <Pagination\n            currentPage={noticesData.page}\n            totalPages={noticesData.totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </NoticesContainer>\n    </ContentContainer>\n  );\n}  ","import Notices from \"components/Notices/Notices\";\n\nexport default function NoticesPage() {\n  return (\n    <Notices />\n  );\n}  ","export const selectFriendsInf = (state) => state.pet.friendsData;\n\nexport const selectNewsInf = (state) => state.pet.newsData;\n\nexport const selectNoticesInf = (state) => state.pet.noticesData;\n\nexport const selectFavoritePets = (state) => state.pet.favoritsPets;\n\nexport const selectCategoriesList = (state) => state.pet.categoriesList;\n\nexport const selectSexList = (state) => state.pet.sex;\n\nexport const selectSpeciesList = (state) => state.pet.species;\n\nexport const selectCitiesList = (state) => state.pet.cities;\n\n\n"],"names":["PaginationConteiner","styled","_templateObject","_taggedTemplateLiteral","PaginationButton","_templateObject2","_ref","dis","color","_ref2","current","_ref3","_ref4","disabled","ThreeDots","_templateObject3","PaginationSvg","_templateObject4","Pagination","currentPage","totalPages","onPageChange","visiblePages","getVisiblePages","total","Array","from","length","_","i","startPage","endPage","Math","min","_jsxs","children","_jsx","onClick","href","concat","sprite","handlePrevBtn","max","map","page","handleNextBtn","SearchContainer","SearchInput","width","border","SearchButton","ClearButton","SearchField","onSearch","resetSignal","input","setInput","useState","resetSearchField","useCallback","useEffect","onSubmit","event","preventDefault","type","value","onChange","e","target","placeholder","handleClear","height","NoticesContainer","CardContainer","ImgCard","InfMainContainer","PopularityIndicators","TitleCard","_templateObject5","margin","PopularityContainer","_templateObject6","PetDetails","_templateObject7","PetComments","_templateObject8","NavCard","_templateObject9","FavoritBtn","shouldForwardProp","prop","includes","_templateObject10","isFavorite","DetailTitle","DetailValues","PetDetailItem","label","AttentionsModal","DogSilhouette","TitleAttention","TextAttention","NavContainer","ModalAttentions","closeModals","src","alt","ButtonNav","to","XButton","NoticeModal","ImgContainer","PetImg","CategoryBlock","PetCategory","ReitingContainer","BtnContainer","Star","props","filled","rating","index","LightBtn","home","ButtonLightOrange","className","ModalNotice","card","petDetailsData","dispatch","useDispatch","imgURL","category","title","StarRating","popularity","slice","detail","comment","ButtonOrange","handleAddToFavorite","item","_id","noticesFavoriteDell","noticesFavorite","NoticesItem","_user$noticesFavorite","openModal","setOpenModal","openModalNotice","setOpenModalNotice","token","useSelector","selectToken","user","selectUser","selectFavoritePets","noticesFavorites","some","name","currentFull","fullName","split","dateString","birthday","dateParts","formatDate","sex","species","handleButtonClick","handleButtonFavorite","PortalModal","active","setActive","NoticesListContainer","NoticesList","noticesData","isArray","results","FilterContainer","DataEntryContainer","SeparatingContainer","BottomContainer","Dropdown","DropdownSvg","DropdownButton","DropdownList","open","DropdownItem","SelectorCategory","setSelectedCategory","selectedArticle","setSelectedArticle","dropdownArticle","setDropdownArticle","dropdownRef","useRef","categories","selectCategoriesList","categoriesInf","handleOutsideClick","contains","document","addEventListener","removeEventListener","resetSelectorCategory","extendedCategories","toggleDropdown","ref","capitalizedCategory","string","charAt","toUpperCase","handleItemClick","SelectorGender","setSelectedGender","selectSexList","gendersInf","resetSelectorGender","StyledSimpleBar","SimpleBar","SelectorType","setSelectedType","types","selectSpeciesList","typesInf","resetSelectorType","style","maxHeight","StyledSelect","Select","SearchLocality","onLocationChange","inputValue","setInputValue","options","setOptions","citiesData","selectCitiesList","citiesInf","filteredOptions","filter","city","cityEn","toLowerCase","console","log","id","classNamePrefix","onInputChange","selectedOption","isClearable","RadioContainer","RadioGroup","Label","checked","StyledRadioButton","SvgX","RadioButtons","setSortCriteria","isPopular","setIsPopular","isExpensive","setIsExpensive","resetRadioButtons","popular","price","handlePopularChange","prev","handleUnpopularChange","handleCheapChange","handleExpensiveChange","NoticesFilter","setCurrentPage","setKeyword","anyFilterSelected","handleResetFilters","setResetSignal","searchTerm","ButtonGrayUniversal","handleResetFiltersWithSignal","Notices","selectedCategory","selectedType","selectedGender","locationId","setLocationId","sortCriteria","keyword","selectNoticesInf","getCategory","article","noticesInf","byDate","limit","byPrice","byPopularity","ContentContainer","Title","selectedLocation","NoticesPage","selectFriendsInf","state","pet","friendsData","selectNewsInf","newsData","favoritsPets","categoriesList","cities"],"sourceRoot":""}