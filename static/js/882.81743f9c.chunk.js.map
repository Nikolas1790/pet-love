{"version":3,"file":"static/js/882.81743f9c.chunk.js","mappings":"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","sources":["components/Buttons/ButtonOrange/ButtonOrange.styled.js","components/Buttons/ButtonOrange/ButtonOrange.jsx","components/LoginAndRegister/RegisterAndLogin.styled.js","components/LoginAndRegister/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const OrangeBtn = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.03em;;\n  height: 50px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 30px;\n\n  color: ${color.white};\n\n  /* border: 1px solid ${color.blackPrimaryLight}; */\nbackground: ${color.orangePrimary};\n\n\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    /* border: 1px solid ${color.orangePrimary}; */\n    background: ${color.orangePrimaryActive};\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); \n    outline: none;\n  }\n`","import { OrangeBtn } from \"./ButtonOrange.styled\";\n\nexport default function ButtonOrange({ className, label, onClick, width }) {\n  return (    \n    <OrangeBtn className={className} onClick={onClick} type=\"submit\" width={width} >\n      {label}\n    </OrangeBtn>    \n  )\n}","import color from 'common/GlobalColors'\nimport {  Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  width: 1280px;\n  height: 686px;\n  padding: 0  32px 32px 32px;  \n`\n///////////////// ing /////////////////////////////\nexport const ImgContainer = styled.div`\n  position: relative;\n`\nexport const PetImg = styled.img` \n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`\nexport const SmsImg = styled.img` \n  position: absolute;\n  bottom: 97px;\n  left: 61px;\n  width: 294px;\n  height: 121px;\n  border-radius: 20px;\n`\n\n\n///////////////// ing /////////////////////////////\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column; /* Устанавливаем направление столбца */\n  align-items: start; /* Выравниваем элементы по центру горизонтально */\n  justify-content: center; /* Выравниваем элементы по центру вертикально */\n  width: 592px;\n  height: 654px;\n  padding: 20px 84px;  \n  background: ${color.white};\n  border-radius: 60px;\n`\n\n\n\n\n\nexport const Title = styled.h2`\n  font-size: 54px;\n  font-weight: 700;\n  line-height: 1;\n  letter-spacing: -0.04em;\n  margin-bottom: 16px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.22;\n  letter-spacing: -0.03em;\n  margin-bottom: 32px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\n\n\n\n\n// export const FormBlock = styled.div`\n//   @media (min-width: 768px) {\n//     width: 323px;\n//   }\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({page}) => (page === \"login\" ? '64px' : '32px')};\n  margin-bottom: 16px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 424px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 52px;\n  border: 1px solid\t${({error, right}) => (error === \"true\" ? color.redWrong :(right ===\"true\" ? color.greenRight : color.blackPrimaryLight))};\n\n  border-radius: 30px;\n  padding: 16px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  stroke: ${color.orangePrimary};\n  fill: none;\n`;\n\nexport const TopRightSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  /* right: 15px; */\n  right: ${({right}) => (right || '15px' )};\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  fill: none;\n`;\n\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${({error}) => (error ? color.redWrong : color.greenRight )};\n  padding: 4px 0px 0px 16px;\n`;\n\n\n\n\n\n\n\nexport const AuthorizationLink = styled(NavLink)`\n  margin: 0 auto;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  letter-spacing: -0.03em;\n  color: ${color.blackPrimaryTranslucent};\n`;\n\nexport const AuthorizationLinkSpan = styled.span`\n  color: ${color.orangePrimary};\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ContentContainer } from 'common/GiobalStyles';\nimport { AuthorizationLink, AuthorizationLinkSpan, Container, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, ImgContainer, PetImg, SecureMessage, SmsImg, Text, Title, TopRightSvg } from './RegisterAndLogin.styled';\nimport sprite from '../../img/sprite.svg';\n\nimport desctopLoginDog from '../../img/loginAndRegister/DesctopLoginDog.jpg';\nimport loginBlock from '../../img/loginAndRegister/loginBlock.jpg';\nimport { useState } from 'react';\nimport ButtonOrange from 'components/Buttons/ButtonOrange/ButtonOrange';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  email: Yup.string().matches(/^\\w+([.-]?\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Login() {  \n  const [showPassword, setShowPassword] = useState(false);  \n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const handleSubmit = async (values) => {\n    try {\n      // await dispatch(register(values)).unwrap();\n      // navigate('/dashboard');\n    } catch (error) {\n      // if (error === \"Request failed with status code 409\") {\n      //   toast.error(\"User with this email already exists.\");\n      // } else {\n      //   toast.error(\"Registration failed. Please try again later.\");\n      // }\n    }\n  }\n  return (\n    <ContentContainer>\n      <Container>\n        <ImgContainer>\n          <PetImg srcSet={desctopLoginDog} alt=\"dog\" />\n          <SmsImg src={loginBlock} alt='message' />\n        </ImgContainer>\n\n\n        <FormContainer>\n          <Title>Log in</Title>          \n          <Text>Welcome! Please enter your credentials to login to the platform: </Text>\n\n\n          <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields page='login'>  \n                    <FormConteiner>  \n\n                      <FormFieldConteiner>\n                        <FormField\n                          id=\"email\" \n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email\" \n                          error={errors.email && touched.email ? \"true\" : \"\" } \n                          right={touched.email && !errors.email ? \"true\" : \"\"}\n                        />\n                        {touched.email && (\n                          errors.email ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.email && !errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" } >Email is secure</SecureMessage>}\n                       {touched.email && errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" }>Enter a valid Email</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"password\" \n                          name=\"password\" \n                          type={showPassword ? \"text\" : \"password\"} \n                          placeholder=\"Password\" \n                          error={errors.password && touched.password ? \"true\" : \"\" } \n                          right={touched.password && !errors.password ? \"true\" : \"\"}\n                        />\n                        {touched.password && (\n                          errors.password ? (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.password && !errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" } >Password is secure</SecureMessage>}\n                       {touched.password && errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" }>Enter a valid Password</SecureMessage>}\n                       \n                        {showPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner> \n                            \n                    </FormConteiner>   \n                    <ButtonOrange label='Log In' />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>\n            <AuthorizationLink to=\"/register\" >Don’t have an account? <AuthorizationLinkSpan> Register</AuthorizationLinkSpan></AuthorizationLink>\n        </FormContainer>\n      </Container>\n    </ContentContainer>\n  );\n}","import Login from \"components/LoginAndRegister/Login\";\n\nexport default function LoginPage() {\n  return (\n    <Login />\n  );\n}  "],"names":["OrangeBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","width","color","ButtonOrange","className","label","onClick","_jsx","type","children","Container","ImgContainer","_templateObject2","PetImg","_templateObject3","SmsImg","_templateObject4","FormContainer","_templateObject5","Title","_templateObject6","Text","_templateObject7","FormFields","_templateObject8","page","FormConteiner","_templateObject9","FormFieldConteiner","_templateObject10","FormField","Field","_templateObject11","_ref2","error","right","EyeSvg","_templateObject12","TopRightSvg","_templateObject13","_ref3","SecureMessage","_templateObject14","_ref4","AuthorizationLink","NavLink","_templateObject15","AuthorizationLinkSpan","_templateObject16","initialValues","email","password","schema","Yup","matches","required","min","Login","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","togglePasswordVisibility","prevShowPassword","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","stop","_x","apply","arguments","ContentContainer","_jsxs","srcSet","desctopLoginDog","alt","src","Formik","validationSchema","onSubmit","errors","touched","Form","id","name","placeholder","href","concat","sprite","onMouseDown","e","preventDefault","to","LoginPage"],"sourceRoot":""}