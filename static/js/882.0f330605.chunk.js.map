{"version":3,"file":"static/js/882.0f330605.chunk.js","mappings":"ykBAKaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAQtBC,EAAeH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iCAGzBG,EAASL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sEAKnBK,EAASP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6HAWnBO,EAAgBT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,83BAQvBS,EAAAA,EAAAA,OAKHC,EAAOZ,EAAAA,GAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kJASfY,EAAad,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,4FAG3B,SAAAc,GAAM,MAAgB,UAAhBA,EAAJC,KAA8B,OAAS,MAAM,IAI3CC,EAAgBlB,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,oEAM1BkB,EAAqBpB,EAAAA,GAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,iDAK/BoB,GAAYtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAawB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,wJAGhB,SAAAuB,GAAA,IAAEC,EAAKD,EAALC,MAAOC,EAAKF,EAALE,MAAK,MAAiB,SAAVD,EAAmBf,EAAAA,EAAAA,SAA0B,SAATgB,EAAkBhB,EAAAA,EAAAA,WAAmBA,EAAAA,EAAAA,iBAAwB,GAK5HA,EAAAA,EAAAA,OAGHiB,EAAS5B,EAAAA,GAAAA,IAAU6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,kJAOpBS,EAAAA,EAAAA,eAICmB,EAAc9B,EAAAA,GAAAA,IAAU+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,kIAG1B,SAAA8B,GAAO,OAAAA,EAALL,OAAqB,MAAM,IAO3BM,EAAgBjC,EAAAA,GAAAA,EAAQkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,2EAE1B,SAAAiC,GAAO,OAAAA,EAALT,MAAoBf,EAAAA,EAAAA,SAAiBA,EAAAA,EAAAA,UAAgB,IAKrDyB,GAAoBpC,EAAAA,EAAAA,IAAOqC,EAAAA,GAAPrC,CAAesC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,sIAMrCS,EAAAA,EAAAA,0BAGE4B,EAAwBvC,EAAAA,GAAAA,KAAWwC,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,wBACrCS,EAAAA,EAAAA,c,kSC1GL8B,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,GAAW,CACxBH,MAAOG,EAAAA,KAAaC,QAAQ,8CAA+C,yBAAyBC,SAAS,YAC7GJ,SAAUE,EAAAA,KAAaE,SAAS,YAAYC,IAAI,EAAG,4CAGtC,SAASC,IACtB,IAAAC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAA2B,WAC/BL,GAAgB,SAACM,GAAgB,OAAMA,CAAgB,GACzD,EACMC,EAAY,eAAA9C,GAAA+C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAM,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAExBb,GAASc,EAAAA,EAAAA,IAAMJ,IAASK,SAAS,KAAD,EACtCb,EAAS,YAAYS,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEP,wCAAVA,EAAAK,GACFC,EAAAA,GAAAA,MAAY,wCAEZA,EAAAA,GAAAA,MAAY,gDACb,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,kBAEJ,gBAXiBU,GAAA,OAAA3D,EAAA4D,MAAA,KAAAC,UAAA,KAYlB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAgB,CAAAC,UACfC,EAAAA,EAAAA,MAAClF,EAAAA,GAAS,CAAAiF,SAAA,EACRC,EAAAA,EAAAA,MAAC9E,EAAAA,GAAY,CAAA6E,SAAA,EACXF,EAAAA,EAAAA,KAACzE,EAAAA,GAAM,CAAC6E,OAAQC,EAAiBC,IAAI,SACrCN,EAAAA,EAAAA,KAACvE,EAAAA,GAAM,CAAC8E,I,sxOAAiBD,IAAI,gBAI/BH,EAAAA,EAAAA,MAACxE,EAAAA,GAAa,CAAAuE,SAAA,EACZF,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CAAAN,SAAC,YACPF,EAAAA,EAAAA,KAAClE,EAAAA,GAAI,CAAAoE,SAAC,uEAGNF,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAAE9C,cAAiBA,EAAe+C,iBAAkB5C,EAAQ6C,SAAU3B,EAAakB,SACrF,SAAAvD,GAAA,IAAGiE,EAAMjE,EAANiE,OAAQC,EAAOlE,EAAPkE,QAAO,OACjBb,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAZ,UACHC,EAAAA,EAAAA,MAACnE,EAAAA,GAAU,CAACG,KAAK,QAAO+D,SAAA,EACtBC,EAAAA,EAAAA,MAAC/D,EAAAA,GAAa,CAAA8D,SAAA,EAEZC,EAAAA,EAAAA,MAAC7D,EAAAA,GAAkB,CAAA4D,SAAA,EACjBF,EAAAA,EAAAA,KAACxD,EAAAA,GAAS,CACRuE,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZtE,MAAOgE,EAAOhD,OAASiD,EAAQjD,MAAQ,OAAS,GAChDf,MAAOgE,EAAQjD,QAAUgD,EAAOhD,MAAQ,OAAS,KAElDiD,EAAQjD,QACPgD,EAAOhD,OACLoC,EAAAA,EAAAA,KAAChD,EAAAA,GAAW,CAAAkD,UACVF,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,0BAGtBrB,EAAAA,EAAAA,KAAChD,EAAAA,GAAW,CAAAkD,UACVF,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAI1BR,EAAQjD,QAAUgD,EAAOhD,QAASoC,EAAAA,EAAAA,KAAC7C,EAAAA,GAAa,CAAEP,MAAOgE,EAAOhD,OAASiD,EAAQjD,MAAQ,OAAS,GAAIsC,SAAE,oBACxGW,EAAQjD,OAASgD,EAAOhD,QAASoC,EAAAA,EAAAA,KAAC7C,EAAAA,GAAa,CAAEP,MAAOgE,EAAOhD,OAASiD,EAAQjD,MAAQ,OAAS,GAAIsC,SAAC,4BAGxGC,EAAAA,EAAAA,MAAC7D,EAAAA,GAAkB,CAAA4D,SAAA,EACjBF,EAAAA,EAAAA,KAACxD,EAAAA,GAAS,CACRuE,GAAG,WACHC,KAAK,WACLC,KAAMzC,EAAe,OAAS,WAC9B0C,YAAY,WACZtE,MAAOgE,EAAO/C,UAAYgD,EAAQhD,SAAW,OAAS,GACtDhB,MAAOgE,EAAQhD,WAAa+C,EAAO/C,SAAW,OAAS,KAExDgD,EAAQhD,WACP+C,EAAO/C,UACLmC,EAAAA,EAAAA,KAAChD,EAAAA,GAAW,CAACH,MAAM,OAAMqD,UACvBF,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,0BAGtBrB,EAAAA,EAAAA,KAAChD,EAAAA,GAAW,CAACH,MAAM,OAAMqD,UACvBF,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAI1BR,EAAQhD,WAAa+C,EAAO/C,WAAYmC,EAAAA,EAAAA,KAAC7C,EAAAA,GAAa,CAACP,MAAOgE,EAAO/C,UAAYgD,EAAQhD,SAAW,OAAS,GAAIqC,SAAE,uBACnHW,EAAQhD,UAAY+C,EAAO/C,WAAYmC,EAAAA,EAAAA,KAAC7C,EAAAA,GAAa,CAACP,MAAOgE,EAAO/C,UAAYgD,EAAQhD,SAAW,OAAS,GAAIqC,SAAC,2BAEhH1B,GACCwB,EAAAA,EAAAA,KAAClD,EAAAA,GAAM,CAACwE,YAAa,SAACC,GACpBA,EAAEC,iBACF1C,GACF,EAAEoB,UACAF,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAGtBrB,EAAAA,EAAAA,KAAClD,EAAAA,GAAM,CAACwE,YAAa,SAACC,GACpBA,EAAEC,iBACF1C,GACF,EAAEoB,UACAF,EAAAA,EAAAA,KAAA,OAAKmB,KAAI,GAAAC,OAAKC,EAAAA,EAAM,4BAM5BrB,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,CAACC,MAAM,eAEjB,KAGXvB,EAAAA,EAAAA,MAAC7C,EAAAA,GAAiB,CAACqE,GAAG,YAAWzB,SAAA,CAAE,gCAAuBF,EAAAA,EAAAA,KAACvC,EAAAA,GAAqB,CAAAyC,SAAC,wBAK7F,CC3Ie,SAAS0B,IACtB,OACE5B,EAAAA,EAAAA,KAAC7B,EAAK,GAEV,C","sources":["components/LoginAndRegister/RegisterAndLogin.styled.js","components/LoginAndRegister/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors'\nimport {  Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  width: 1280px;\n  height: 686px;\n  padding: 0  32px 32px 32px;  \n`\n///////////////// ing /////////////////////////////\nexport const ImgContainer = styled.div`\n  position: relative;\n`\nexport const PetImg = styled.img` \n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`\nexport const SmsImg = styled.img` \n  position: absolute;\n  bottom: 97px;\n  left: 61px;\n  width: 294px;\n  height: 121px;\n  border-radius: 20px;\n`\n\n\n///////////////// ing /////////////////////////////\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column; /* Устанавливаем направление столбца */\n  align-items: start; /* Выравниваем элементы по центру горизонтально */\n  justify-content: center; /* Выравниваем элементы по центру вертикально */\n  width: 592px;\n  height: 654px;\n  padding: 20px 84px;  \n  background: ${color.white};\n  border-radius: 60px;\n`\n\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.22;\n  letter-spacing: -0.03em;\n  margin-bottom: 32px;\n  margin-top: 16px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({page}) => (page === \"login\" ? '64px' : '32px')};\n  margin-bottom: 16px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 424px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 52px;\n  border: 1px solid\t${({error, right}) => (error === \"true\" ? color.redWrong :(right ===\"true\" ? color.greenRight : color.blackPrimaryLight))};\n\n  border-radius: 30px;\n  padding: 16px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  stroke: ${color.orangePrimary};\n  fill: none;\n`;\n\nexport const TopRightSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: ${({right}) => (right || '15px' )};\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  fill: none;\n`;\n\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${({error}) => (error ? color.redWrong : color.greenRight )};\n  padding: 4px 0px 0px 16px;\n`;\n\n\nexport const AuthorizationLink = styled(NavLink)`\n  margin: 0 auto;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  letter-spacing: -0.03em;\n  color: ${color.blackPrimaryFiftyPercebt};\n`;\n\nexport const AuthorizationLinkSpan = styled.span`\n  color: ${color.orangePrimary};\n`;","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ContentContainer, Title } from 'common/GiobalStyles';\nimport { AuthorizationLink, AuthorizationLinkSpan, Container, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, ImgContainer, PetImg, SecureMessage, SmsImg, Text, TopRightSvg } from './RegisterAndLogin.styled';\nimport sprite from '../../img/sprite.svg';\n\nimport desctopLoginDog from '../../img/loginAndRegister/DesctopLoginDog.jpg';\nimport loginBlock from '../../img/loginAndRegister/loginBlock.jpg';\nimport { useState } from 'react';\nimport ButtonOrange from 'components/Buttons/ButtonOrange/ButtonOrange';\nimport { logIn } from '../../redux/auth/operationsAuth';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  email: Yup.string().matches(/^\\w+([.-]?\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Login() {  \n  const [showPassword, setShowPassword] = useState(false);  \n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const handleSubmit = async (values) => {\n    try {\n      await dispatch(logIn(values)).unwrap();\n      navigate('/profile');\n    } catch (error) {\n      if (error === \"Request failed with status code 409\") {\n        toast.error(\"User with this email already exists.\");\n      } else {\n        toast.error(\"Registration failed. Please try again later.\");\n      }\n    }\n  }\n  return (\n    <ContentContainer>\n      <Container>\n        <ImgContainer>\n          <PetImg srcSet={desctopLoginDog} alt=\"dog\" />\n          <SmsImg src={loginBlock} alt='message' />\n        </ImgContainer>\n\n\n        <FormContainer>\n          <Title>Log in</Title>          \n          <Text>Welcome! Please enter your credentials to login to the platform: </Text>\n\n\n          <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields page='login'>  \n                    <FormConteiner>  \n\n                      <FormFieldConteiner>\n                        <FormField\n                          id=\"email\" \n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email\" \n                          error={errors.email && touched.email ? \"true\" : \"\" } \n                          right={touched.email && !errors.email ? \"true\" : \"\"}\n                        />\n                        {touched.email && (\n                          errors.email ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.email && !errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" } >Email is secure</SecureMessage>}\n                       {touched.email && errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" }>Enter a valid Email</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"password\" \n                          name=\"password\" \n                          type={showPassword ? \"text\" : \"password\"} \n                          placeholder=\"Password\" \n                          error={errors.password && touched.password ? \"true\" : \"\" } \n                          right={touched.password && !errors.password ? \"true\" : \"\"}\n                        />\n                        {touched.password && (\n                          errors.password ? (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.password && !errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" } >Password is secure</SecureMessage>}\n                       {touched.password && errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" }>Enter a valid Password</SecureMessage>}\n                       \n                        {showPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner> \n                            \n                    </FormConteiner>   \n                    <ButtonOrange label='Log In' />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>\n            <AuthorizationLink to=\"/register\" >Don’t have an account? <AuthorizationLinkSpan> Register</AuthorizationLinkSpan></AuthorizationLink>\n        </FormContainer>\n      </Container>\n    </ContentContainer>\n  );\n}","import Login from \"components/LoginAndRegister/Login\";\n\nexport default function LoginPage() {\n  return (\n    <Login />\n  );\n}  "],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ImgContainer","_templateObject2","PetImg","_templateObject3","SmsImg","_templateObject4","FormContainer","_templateObject5","color","Text","_templateObject6","FormFields","_templateObject7","_ref","page","FormConteiner","_templateObject8","FormFieldConteiner","_templateObject9","FormField","Field","_templateObject10","_ref2","error","right","EyeSvg","_templateObject11","TopRightSvg","_templateObject12","_ref3","SecureMessage","_templateObject13","_ref4","AuthorizationLink","NavLink","_templateObject14","AuthorizationLinkSpan","_templateObject15","initialValues","email","password","schema","Yup","matches","required","min","Login","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","logIn","unwrap","t0","toast","stop","_x","apply","arguments","_jsx","ContentContainer","children","_jsxs","srcSet","desctopLoginDog","alt","src","Title","Formik","validationSchema","onSubmit","errors","touched","Form","id","name","type","placeholder","href","concat","sprite","onMouseDown","e","preventDefault","ButtonOrange","label","to","LoginPage"],"sourceRoot":""}