{"version":3,"file":"static/js/943.959c0267.chunk.js","mappings":"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","sources":["components/LoginAndRegister/RegisterAndLogin.styled.js","components/Buttons/ButtonOrange/ButtonOrange.styled.js","components/Buttons/ButtonOrange/ButtonOrange.jsx","components/LoginAndRegister/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors'\nimport {  Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  width: 1280px;\n  height: 686px;\n  padding: 0  32px 32px 32px;  \n`\n\nexport const PetImg = styled.img` \n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column; /* Устанавливаем направление столбца */\n  align-items: start; /* Выравниваем элементы по центру горизонтально */\n  justify-content: center; /* Выравниваем элементы по центру вертикально */\n  width: 592px;\n  height: 654px;\n  padding: 20px 84px;  \n  background: ${color.white};\n  border-radius: 60px;\n`\n\n\n\n\n\nexport const Title = styled.h2`\n  font-size: 54px;\n  font-weight: 700;\n  line-height: 1;\n  letter-spacing: -0.04em;\n  margin-bottom: 16px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.22;\n  letter-spacing: -0.03em;\n  margin-bottom: 32px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\n\n\n\n\n// export const FormBlock = styled.div`\n//   @media (min-width: 768px) {\n//     width: 323px;\n//   }\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-bottom: 16px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 424px;\n  /* height:44px; */\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 52px;\n  border: 1px solid rgba(38, 38, 38, 0.15);\n  border: 1px solid\t${({error, right}) => (error === \"true\" ? color.redWrong :(right ===\"true\" ? color.greenRight : color.blackPrimaryLight))};\n\n\n\n  border-radius: 30px;\n  padding: 16px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  stroke: ${color.orangePrimary};\n  fill: none;\n`;\n\nexport const AuthorizationLink = styled(NavLink)`\n  margin: 0 auto;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  letter-spacing: -0.03em;\n  color: ${color.blackPrimaryTranslucent};\n`;\n\nexport const AuthorizationLinkSpan = styled.span`\n  color: ${color.orangePrimary};\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const TopRightSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  /* stroke: ${color.blackPrimary}; */\n  fill: none;\n`;\n\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${color.redWrong};\n  padding: 4px 0px 0px 14px;\n`;\n// export const ErrorMessageStyled = styled(ErrorMessage)`\n//   font-size: 10px;\n//   color: red;\n//   padding: 4px 0px 0px 14px;\n// `;","import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const OrangeBtn = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.03em;;\n  height: 50px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 30px;\n\n  color: ${color.white};\n\n  /* border: 1px solid ${color.blackPrimaryLight}; */\nbackground: ${color.orangePrimary};\n\n\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    /* border: 1px solid ${color.orangePrimary}; */\n    background: ${color.orangePrimaryActive};\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); \n    outline: none;\n  }\n`","import { OrangeBtn } from \"./ButtonOrange.styled\";\n\nexport default function ButtonOrange({ className, label, onClick, width }) {\n  return (    \n    <OrangeBtn className={className} onClick={onClick} type=\"submit\" width={width} >\n      {label}\n    </OrangeBtn>    \n  )\n}","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ContentContainer } from 'common/GiobalStyles';\nimport desctopRegisterDog from '../../img/loginAndRegister/DesctopRegisterCat.jpg';\nimport { AuthorizationLink, AuthorizationLinkSpan, Container, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, PetImg, SecureMessage, Text, Title, TopRightSvg } from './RegisterAndLogin.styled';\n// import { useDispatch } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { useState } from 'react';\nimport ButtonOrange from 'components/Buttons/ButtonOrange/ButtonOrange';\n// import { toast } from 'react-toastify';\n\nconst initialValues = {\n  userName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n  \nconst schema = Yup.object({\n  userName: Yup.string().required('Required'),\n  email: Yup.string().matches(/^\\w+([.-]?\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n  confirmPassword: Yup.string().required(\"Required\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);  \n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const toggleConfigPasswordVisibility = () => {\n    setShowConfirmPassword((prevShowPassword) => !prevShowPassword);\n  }; \n  \n  const handleSubmit = async (values) => {\n    try {\n      // await dispatch(register(values)).unwrap();\n      // navigate('/dashboard');\n    } catch (error) {\n      // if (error === \"Request failed with status code 409\") {\n      //   toast.error(\"User with this email already exists.\");\n      // } else {\n      //   toast.error(\"Registration failed. Please try again later.\");\n      // }\n    }\n  }\n\n  return (\n    <ContentContainer>\n      <Container>\n        <PetImg srcSet={desctopRegisterDog} alt=\"cat\" />\n\n        <FormContainer>\n          <Title>Registration</Title>          \n          <Text>Thank you for your interest in our platform. </Text>\n\n\n\n\n\n            <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields>  \n                    <FormConteiner>  \n              \n                      <FormFieldConteiner>\n                        <FormField\n                          id=\"userName\" \n                          name=\"userName\" \n                          type=\"userName\" \n                          placeholder=\"Name\" \n                          error={errors.userName && touched.userName ? \"true\" : \"\" } \n                          right={touched.userName && !errors.userName ? \"true\" : \"\"}\n                        />\n                        {touched.userName && (\n                          errors.userName ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.userName && !errors.userName && <SecureMessage>Enter a valid Name</SecureMessage>}\n                       {touched.userName && errors.userName && <SecureMessage>Name</SecureMessage>}\n\n                       {/* <ErrorMessageStyled name=\"userName\" component='div' /> */}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"email\" \n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email\" \n                          error={errors.email && touched.email ? \"true\" : \"\" } \n                          right={touched.email && !errors.email ? \"true\" : \"\"}\n                        />\n                        {touched.email && (\n                          errors.email ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.email && !errors.email && <SecureMessage>Enter a valid Email</SecureMessage>}\n                       {touched.email && errors.email && <SecureMessage> Email</SecureMessage>}\n\n                       {/* <ErrorMessageStyled name=\"email\" component='div' /> */}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"password\" \n                          name=\"password\" \n                          type={showPassword ? \"text\" : \"password\"} \n                          placeholder=\"Password\" \n                          style={{\n                            borderColor: touched.password && errors.password ? \"red\" : \n                                         touched.password && !errors.password ? \"green\" : \"defaultColor\",\n                          }}\n                        />\n                        {showPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n\n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"confirmPassword\" \n                          name=\"confirmPassword\" \n                          type={showConfirmPassword ? \"text\" : \"password\"} \n                          placeholder=\"Confirm password\" \n                          style={{\n                            borderColor: touched.confirmPassword && errors.confirmPassword ? \"red\" : \n                                         touched.confirmPassword && !errors.confirmPassword ? \"green\" : \"defaultColor\",\n                          }}\n                        />\n                        {showConfirmPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n                            \n                    </FormConteiner>   \n                    <ButtonOrange label='Registration' />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>\n            \n            <AuthorizationLink to=\"/login\" >Already have an account? <AuthorizationLinkSpan>Login</AuthorizationLinkSpan></AuthorizationLink>\n       \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </FormContainer>        \n      </Container>\n    </ContentContainer>\n  );\n}","import Register from \"components/LoginAndRegister/Register\";\n\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","PetImg","_templateObject2","FormContainer","_templateObject3","color","Title","_templateObject4","Text","_templateObject5","FormFields","_templateObject6","FormConteiner","_templateObject7","FormFieldConteiner","_templateObject8","FormField","Field","_templateObject9","_ref","error","right","EyeSvg","_templateObject10","AuthorizationLink","NavLink","_templateObject11","AuthorizationLinkSpan","_templateObject12","TopRightSvg","_templateObject13","SecureMessage","_templateObject14","OrangeBtn","width","ButtonOrange","className","label","onClick","_jsx","type","children","initialValues","userName","email","password","confirmPassword","schema","Yup","required","matches","min","oneOf","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showConfirmPassword","setShowConfirmPassword","togglePasswordVisibility","prevShowPassword","toggleConfigPasswordVisibility","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","stop","_x","apply","arguments","ContentContainer","_jsxs","srcSet","desctopRegisterDog","alt","Formik","validationSchema","onSubmit","_ref2","errors","touched","Form","id","name","placeholder","href","concat","sprite","style","borderColor","onMouseDown","e","preventDefault","to","LoginPage"],"sourceRoot":""}