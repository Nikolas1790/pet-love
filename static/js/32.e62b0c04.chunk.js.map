{"version":3,"file":"static/js/32.e62b0c04.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.js","components/Pagination/Pagination.jsx","components/SearchField/SearchField.styled.js","components/SearchField/SearchField.jsx","components/Notices/Notices.styled.js","components/NoticesList/NoticesList.styled.js","components/NoticesList/NoticesList.jsx","components/NoticesFilter/NoticesFilter.styled.js","components/Selectors/SelectorCategory/SelectorCategory.styled.js","components/Selectors/SelectorCategory/SelectorCategory.jsx","components/Selectors/SelectorGender/SelectorGender.styled.js","components/Selectors/SelectorGender/SelectorGender.jsx","components/Selectors/SelectType/SelectType.styled.js","components/Selectors/SelectType/SelectType.jsx","components/SearchLocality/SearchLocality.styled.js","components/SearchLocality/SearchLocality.jsx","components/RadioButtons/RadioButtons.styled.js","components/RadioButtons/RadioButtons.jsx","components/NoticesFilter/NoticesFilter.jsx","components/Notices/Notices.jsx","pages/NoticesPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors';\nimport styled from 'styled-components'\n\nexport const PaginationConteiner = styled.div`\n  display: flex;\n  justify-content: start; \n  align-items: center; \n\n  @media (min-width: 768px) {  \n    justify-content: center; \n  }\n`\n\nexport const PaginationButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${({dis}) =>( dis ? color.orangePrimary :  \"transporent\")}; \n  margin-right:  ${({current }) => current === 'last' ? '0' : '10px'};\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  color: ${({dis}) => (dis ? color.white : color.blackPrimary) };\n  border: 1px solid rgba(38, 38, 38, 0.05);\n  fill: ${color.blackPrimary};\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n   scale: ${({ disabled }) => (disabled ? 'none' : 1.1)};\n  }\n\n  &:disabled {\n    cursor: default;\n    color: ${color.white};\n    box-shadow: none;\n  fill: ${color.blackPrimaryFiftyPercebt};\n\n  }\n`;\n\nexport const ThreeDots = styled.span`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n  margin-right:  10px;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 1px solid rgba(38, 38, 38, 0.05);\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 44px;\n  height: 44px;\n\n  transition: all 0.25s linear;\n  &:focus,\n  &:hover {\n    stroke: ${color.blackModalColr};\n  };\n`","import { PaginationButton, PaginationConteiner, PaginationSvg, ThreeDots } from \"./Pagination.styled\";\nimport sprite from '../../img/sprite.svg';\n\nconst getVisiblePages = (current, total) => {\n  if (total < 3) {\n    // Если страниц меньше трех, возвращаем все\n    return Array.from({length: total}, (_, i) => i + 1);\n  } else {\n    // Вычисляем начальную страницу для показа\n    let startPage = current - ((current - 1) % 3);\n    // Вычисляем последнюю страницу для показа\n    let endPage = Math.min(startPage + 2, total);\n    return Array.from({length: (endPage - startPage + 1)}, (_, i) => startPage + i);\n  }\n};\n\nexport const Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  const visiblePages = getVisiblePages(currentPage, totalPages);\n\n  const handlePrevBtn = () => {\n    onPageChange(Math.max(currentPage - 1, 1));\n  };\n\n  const handleNextBtn = () => {\n    onPageChange(Math.min(currentPage + 1, totalPages));\n  };\n\n  return (\n    <PaginationConteiner>\n      <PaginationButton disabled={currentPage === 1} onClick={() => onPageChange(1)}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-l-left`} />\n        </PaginationSvg>\n      </PaginationButton>\n      <PaginationButton disabled={currentPage === 1} onClick={handlePrevBtn}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-left`} />\n        </PaginationSvg>\n      </PaginationButton>\n      {visiblePages.map(page => (\n        <PaginationButton\n          key={page}\n          dis={currentPage === page ? \"true\" : ''} \n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </PaginationButton>\n      ))}\n      {currentPage < totalPages && totalPages > 5 && <ThreeDots>...</ThreeDots>}\n      <PaginationButton disabled={currentPage === totalPages} onClick={handleNextBtn}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-right`} />\n        </PaginationSvg>\n      </PaginationButton>\n      <PaginationButton disabled={currentPage === totalPages}  onClick={() => onPageChange(totalPages)}>\n        <PaginationSvg>\n          <use href={`${sprite}#icon-slider-r-right`} />\n        </PaginationSvg>\n      </PaginationButton>\n    </PaginationConteiner>\n  );\n};","import color from 'common/GlobalColors';\nimport styled from 'styled-components';\n\nexport const SearchContainer = styled.div`\nposition: relative;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 14px;\n\n  font-size: 16px;\n  width: ${({width}) => width || '230px' };\n  border: ${({ border }) => border || `1px solid ${color.blackPrimaryLight}`};\n  border-radius: 30px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 16px;\n    font-weight: 500;\n    color: ${({ border }) => border === \"none\" ? color.blackPrimary :  \"none\"};\n  }\n\n`;\n\nexport const SearchButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n  &:hover {\n    /* background-color: #0056b3; */\n  }\n`;\n\nexport const ClearButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 36px;\n  stroke: ${color.blackPrimary};\n    /* background-color: #dc3545; */\n\n  &:hover {\n    /* background-color: #c82333; */\n  }\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { ClearButton, SearchButton, SearchContainer, SearchInput } from './SearchField.styled';\nimport sprite from '../../img/sprite.svg';\n\nexport default function SearchField({ onSearch, width, border, resetSignal }) {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSearch(input);\n  };\n\n  const handleClear = () => {\n    setInput('');\n    onSearch('');\n  };\n\n  const resetSearchField = useCallback(() => {\n    setInput('');\n  }, [setInput]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    resetSearchField();\n  }, [resetSignal, resetSearchField ]);\n\n  return (\n    <SearchContainer>\n      <form onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Search\"\n          border={border}\n          width={width}\n        />\n        {input && (\n          <ClearButton onClick={handleClear} type=\"button\">\n            <svg width={18} height={18}>\n              <use href={`${sprite}#icon-x`} />\n            </svg>\n          </ClearButton>\n        )}\n        <SearchButton type=\"submit\">\n          <svg width={18} height={18}>\n            <use href={`${sprite}#icon-search-1`} />\n          </svg>\n        </SearchButton>\n      </form>\n    </SearchContainer>\n  );\n};","import styled from 'styled-components'\n\nexport const NoticesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  width: 1280px;\n  padding: 64px 63px 80px 63px;  \n`","import styled from 'styled-components'\n\nexport const NoticesListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px 32px; \n\n  margin-bottom: 60px;\n`","import NoticesItem from \"components/NoticesItem/NoticesItem\"\nimport { NoticesListContainer } from \"./NoticesList.styled\"\n\nexport default function NoticesList({noticesData}){\n  return (\n    <NoticesListContainer>\n      {Array.isArray(noticesData.results) && noticesData.results.map((card) => (\n        <NoticesItem key={card._id} card={card}/>\n      ))}\n    </NoticesListContainer>\n  )\n}","import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 1216px;\n  height: 216px;\n  border-radius: 30px;\n  background: ${color.orangeLight};\n  padding: 40px;  \n`\n\nexport const DataEntryContainer = styled.div`\n  display: flex;\n  gap: 16px;\n`\n\nexport const SeparatingContainer = styled.div`\n  width: 100%;\n  border: 1px solid rgba(38, 38, 38, 0.1);\n  margin: 20px 0;\n`\n\nexport const BottomContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nexport const ResetBtn = styled.button`\n  display: flex;\n  justify-content: space-between;\n`","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  height: 48px;\n  border-radius: 30px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: ${color.white};\n  padding: 14px;\n\n  width: 200px;\n  color: ${color.blackPrimary};\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 52px;\n  left: 0;\n  background-color: ${color.white};\n\n  display: ${({ open }) => (open ? 'block' : 'none')};\n  height: 160px; \n  \n  padding: 14px;\n  width: 100%;\n  border-radius: 15px;\n`;\n\nexport const DropdownItem = styled.li`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${color.blackPrimarySixtyPercebt};\n  cursor: pointer;  \n\n  &:hover {\n    color: ${color.orangePrimary};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg } from './SelectorCategory.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCategoriesList } from '../../../redux/petLove/selector';\nimport { categoriesInf } from '../../../redux/petLove/operations';\n\nexport default function SelectorCategory ({ setSelectedCategory, resetSignal }){\n  const [selectedArticle, setSelectedArticle] = useState(\"\");\n  const [dropdownArticle, setDropdownArticle] = useState(false);\n  const dropdownRef = useRef();\n  const dispatch = useDispatch();\n  const categories = useSelector(selectCategoriesList);\n\n  useEffect(() => {\n    dispatch(categoriesInf())\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownArticle(false); \n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => document.removeEventListener('mousedown', handleOutsideClick);\n  }, [setDropdownArticle]); \n\n  const resetSelectorCategory = useCallback(() => {\n    setSelectedArticle('');\n  }, [setSelectedArticle]);\n\n  useEffect(() => {\n    resetSelectorCategory();\n  }, [resetSignal, resetSelectorCategory ]);\n\n\n  const extendedCategories = [\"Show all\", ...categories];\n\n  const toggleDropdown = () => setDropdownArticle(!dropdownArticle);\n  const handleDropdownButtonClick = (event) => {\n    toggleDropdown();\n  };\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const handleItemClick = (category) => {\n    const capitalizedCategory = capitalizeFirstLetter(category);\n    setSelectedArticle(capitalizedCategory);\n    setSelectedCategory(category)\n    toggleDropdown();\n  };\n\n\n  return (\n    <Dropdown ref={dropdownRef}>\n      <DropdownSvg onClick={toggleDropdown}>\n        <use href={`${sprite}#icon-chevron-${dropdownArticle ? 'up' : 'down'}`} />\n      </DropdownSvg>\n      <DropdownButton\n        type=\"button\" \n        onClick={handleDropdownButtonClick} \n      >\n        {selectedArticle || \"Category\"}\n      </DropdownButton>  \n      <DropdownList open={dropdownArticle}>\n          {extendedCategories.map((category, index) => (\n            <DropdownItem key={index} onClick={() => handleItemClick(category)}>\n              {category}\n            </DropdownItem>\n          ))}\n      </DropdownList>                      \n    </Dropdown>\n  )\n}","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  height: 48px;\n  border-radius: 30px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: ${color.white};\n  padding: 14px;\n\n  width: 190px;\n  color: ${color.blackPrimary};\n \n  /* @media (min-width: 768px) {   \n  } */\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 52px;\n  left: 0;\n  background-color: ${color.white};\n\n  display: ${({ open }) => (open ? 'block' : 'none')};\n  height: 160px; \n\n  padding: 14px;\n  width: 100%;\n  border-radius: 15px;\n`;\n\nexport const DropdownItem = styled.li`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${color.blackPrimarySixtyPercebt};\n  cursor: pointer;  \n\n  &:hover {\n    color: ${color.orangePrimary};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg } from './SelectorGender.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSexList } from '../../../redux/petLove/selector';\nimport { gendersInf } from '../../../redux/petLove/operations';\n\nexport default function SelectorGender ({ setSelectedGender, resetSignal }){\n  const [selectedArticle, setSelectedArticle] = useState(\"\");\n  const [dropdownArticle, setDropdownArticle] = useState(false);\n  const dropdownRef = useRef();\n  const dispatch = useDispatch();\n  const sex = useSelector(selectSexList);\n\n  useEffect(() => {\n    dispatch(gendersInf())\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownArticle(false); \n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => document.removeEventListener('mousedown', handleOutsideClick);\n  }, [setDropdownArticle]); \n\n\n\n  const resetSelectorGender = useCallback(() => {\n    setSelectedArticle('');\n  }, [setSelectedArticle]);\n\n  useEffect(() => {\n    setSelectedArticle();\n  }, [resetSignal, resetSelectorGender ]);\n\n\n\n  const extendedCategories = [\"Show all\", ...sex];\n\n  const toggleDropdown = () => setDropdownArticle(!dropdownArticle);\n  const handleDropdownButtonClick = (event) => {\n    toggleDropdown();\n  };\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const handleItemClick = (category) => {\n    const capitalizedCategory = capitalizeFirstLetter(category);\n    setSelectedArticle(capitalizedCategory);\n    setSelectedGender(category)\n    toggleDropdown();\n  };\n\n  return (\n    <Dropdown ref={dropdownRef}>\n      <DropdownSvg onClick={toggleDropdown}>\n        <use href={`${sprite}#icon-chevron-${dropdownArticle ? 'up' : 'down'}`} />\n      </DropdownSvg>\n      <DropdownButton\n        type=\"button\" \n        onClick={handleDropdownButtonClick} \n      >\n        {selectedArticle || \"By gender\"}\n      </DropdownButton>  \n      <DropdownList open={dropdownArticle}>\n          {extendedCategories.map((category, index) => (\n            <DropdownItem key={index} onClick={() => handleItemClick(category)}>\n              {category}\n            </DropdownItem>\n          ))}\n      </DropdownList>                      \n    </Dropdown>\n  )\n}","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css';\n\n\nexport const StyledSimpleBar = styled(SimpleBar)`\n  .simplebar-scrollbar {\n    background: rgba(255, 255, 255, 0.4) !important;\n    width: 8px !important;\n    border-radius: 12px !important;\n  }\n\n  .simplebar-track.simplebar-vertical {\n    width: 8px !important;\n    right: -10px !important;\n  }\n\n  .simplebar-track.simplebar-vertical .simplebar-scrollbar:before {\n    background-color: #dcdcdc;\n  }\n\n  .simplebar-track.simplebar-vertical .simplebar-scrollbar:hover:before {\n    background-color: #bcbcbc;\n  }\n`;\n\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 14px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.25;\n  height: 48px;\n  border-radius: 30px; \n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: ${color.white};\n  padding: 14px;\n\n  width: 190px;\n  color: ${color.blackPrimary};\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 52px;\n  left: 0;\n  background-color: ${color.white};\n\n  display: ${({ open }) => (open ? 'block' : 'none')};\n  height: 216px; \n  padding: 14px;\n  width: 100%;\n  border-radius: 15px;\n`;\n\nexport const DropdownItem = styled.li`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${color.blackPrimarySixtyPercebt};\n  \n  cursor: pointer;  \n\n  &:hover {\n    color: ${color.orangePrimary};\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg, StyledSimpleBar } from './SelectType.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSpeciesList } from '../../../redux/petLove/selector';\nimport { typesInf } from '../../../redux/petLove/operations';\n\nexport default function SelectorType ({setSelectedType, resetSignal}){\n  const [selectedArticle, setSelectedArticle] = useState(\"\");\n  const [dropdownArticle, setDropdownArticle] = useState(false);\n  const dropdownRef = useRef();\n  const dispatch = useDispatch();\n  const types = useSelector(selectSpeciesList);\n\n  useEffect(() => {\n    dispatch(typesInf())\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownArticle(false); \n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => document.removeEventListener('mousedown', handleOutsideClick);\n  }, [setDropdownArticle]); \n\n  const resetSelectorType = useCallback(() => {\n    setSelectedArticle('');\n  }, [setSelectedArticle]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    resetSelectorType();\n  }, [resetSignal, resetSelectorType ]);\n\n\n\n  const extendedCategories = [\"Show all\", ...types];\n\n  const toggleDropdown = () => setDropdownArticle(!dropdownArticle);\n  const handleDropdownButtonClick = (event) => {\n    toggleDropdown();\n  };\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const handleItemClick = (category) => {\n    // console.log(category)\n    const capitalizedCategory = capitalizeFirstLetter(category);\n    setSelectedArticle(capitalizedCategory);\n    setSelectedType(category)\n    toggleDropdown();\n  };\n\n  return (\n    <Dropdown ref={dropdownRef}>\n      <DropdownSvg onClick={toggleDropdown}>\n        <use href={`${sprite}#icon-chevron-${dropdownArticle ? 'up' : 'down'}`} />\n      </DropdownSvg>\n      <DropdownButton\n        type=\"button\" \n        onClick={handleDropdownButtonClick} \n      >\n        {selectedArticle || \"By type\"}\n      </DropdownButton>  \n      <DropdownList open={dropdownArticle}>\n        <StyledSimpleBar style={{ maxHeight: 188 }}>\n          {extendedCategories.map((category, index) => (\n            <DropdownItem key={index} onClick={() => handleItemClick(category)}>\n              {category}\n            </DropdownItem>\n          ))}\n        </StyledSimpleBar>\n      </DropdownList>                      \n    </Dropdown>\n  )\n}","import Select from 'react-select';\nimport styled from 'styled-components';\n\nexport const StyledSelect = styled(Select)`\n.react-select__control {\n  width: 227px;\n  height: 48px;\n  border: none;\n  border-radius: 30px;\n  background: rgb(255, 255, 255);\n  box-shadow: none;\n  padding-left: 14px;\n}\n\n.react-select__control--is-focused {\n  border-color: 1px solid rgb(246, 184, 61);\n}\n\n.react-select__value-container {\n  margin: 0;\n  padding: 0;\n}\n\n.react-select__value-container {\n  padding: 0 6px;\n  margin: 0;\n  padding: 0;\n}\n\n.react-select__input {\n  /* margin: 0; */\n}\n\n.react-select__placeholder {\n  color: rgba(0, 0, 0, 0.4);\n  margin: 0;\n  padding: 0;\n}\n\n.react-select__indicator-separator {\n  display: none;\n}\n\n.react-select__dropdown-indicator {\n  display: none;\n}\n\n.react-select__menu {\n  border-radius: 15px;\n  margin-top: -84px;\n}\n\n.react-select__menu-list {\n  border-radius: 15px;\n}\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  padding: 10px 20px;\n  background-color: rgb(246, 184, 61);\n  border: none;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  font-size: 16px;\n\n  &:hover {\n    background-color: rgb(220, 160, 50);\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 240px;\n  margin-top: 10px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { citiesInf } from '../../redux/petLove/operations';\nimport { selectCitiesList } from '../../redux/petLove/selector';\nimport { StyledSelect } from './SearchLocality.styled';\n\nexport default function SearchLocality({  onLocationChange  }) {\n  const [inputValue, setInputValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const dispatch = useDispatch();\n  const citiesData = useSelector(selectCitiesList);  \n\n  useEffect(() => {\n    dispatch(citiesInf());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (inputValue) {\n      const filteredOptions = citiesData.filter(city =>{\n         return city.cityEn.toLowerCase().includes(inputValue.toLowerCase())}\n      ).map(city => {\n        console.log(city)\n        return ({ value: city.cityEn , label: city.cityEn, id: city._id })});\n      setOptions(filteredOptions);\n    } else {\n      setOptions([]);\n    }\n  }, [inputValue, citiesData]);\n\n  const handleInputChange = (input) => {\n    setInputValue(input);\n  };\n\n  const handleChange = (selectedOption) => {\n    onLocationChange(selectedOption);\n  };\n\n  return (\n    <StyledSelect\n      classNamePrefix=\"react-select\"\n      value={null}\n      inputValue={inputValue}\n      onInputChange={handleInputChange}\n      onChange={handleChange}\n      options={options}\n      placeholder=\"Location\"\n      isClearable\n    />\n  );\n};","import color from 'common/GlobalColors';\nimport styled from 'styled-components';\n\nexport const RadioContainer = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const RadioButton = styled.input`\n  margin-right: 10px;\n`;\n\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px;\n  border-radius: 30px;\n  cursor: pointer;\n  background-color: ${({ checked }) => (checked ? color.orangePrimary : color.white)};\n  color: ${({ checked }) => (checked ? color.white : '#000')};\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    background-color: ${color.orangeDim};\n    color: #fff;\n  }\n`;\n\nexport const StyledRadioButton = styled.input`\n  display: none;\n`;\n\nexport const SvgX = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${color.white};\n  fill: transparent;\n  margin-left: 8px;\n`;","import React, { useState, useEffect, useCallback } from 'react';\nimport { RadioGroup, RadioContainer, Label, StyledRadioButton, SvgX } from './RadioButtons.styled';\nimport sprite from '../../img/sprite.svg';\n\nexport default function RadioButtons({ setSortCriteria, resetSignal }) {\n  const [isPopular, setIsPopular] = useState(null); // true for Popular, false for Unpopular\n  const [isExpensive, setIsExpensive] = useState(null); // true for Expensive, false for Cheap\n\n  const resetRadioButtons = useCallback(() => {\n    setIsPopular(null);\n    setIsExpensive(null);\n    setSortCriteria({ popular: null, price: null });\n  }, [setSortCriteria]);\n\n  // Trigger reset when resetSignal changes\n  useEffect(() => {\n    resetRadioButtons();\n  }, [resetSignal, resetRadioButtons ]);\n\n\n  \n  const handlePopularChange = () => {\n    setIsPopular(true);\n    setSortCriteria((prev) => ({ ...prev, popular: false }));\n  };\n\n  const handleUnpopularChange = () => {\n    setIsPopular(false);\n    setSortCriteria((prev) => ({ ...prev, popular: true }));\n  };\n\n  const handleCheapChange = () => {\n    setIsExpensive(false);\n    setSortCriteria((prev) => ({ ...prev, price: false }));\n  };\n\n  const handleExpensiveChange = () => {\n    setIsExpensive(true);\n    setSortCriteria((prev) => ({ ...prev, price: true }));\n  };\n\n\n\n  return (\n    <RadioContainer>\n      <RadioGroup>\n        <Label checked={isPopular === true}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isPopular === true}\n            onChange={handlePopularChange}\n          />\n          Popular\n          {isPopular === true && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n        <Label checked={isPopular === false}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isPopular === false}\n            onChange={handleUnpopularChange}\n          />\n          Unpopular\n          {isPopular === false && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n      </RadioGroup>\n\n      <RadioGroup>\n        <Label checked={isExpensive === false}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isExpensive === false}\n            onChange={handleCheapChange}\n          />\n          Cheap\n          {isExpensive === false && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n        <Label checked={isExpensive === true}>\n          <StyledRadioButton\n            type=\"radio\"\n            checked={isExpensive === true}\n            onChange={handleExpensiveChange}\n          />\n          Expensive\n          {isExpensive === true && (\n            <SvgX>\n              <use href={`${sprite}#icon-heart-add`} />\n            </SvgX>\n          )}\n        </Label>\n      </RadioGroup>\n    </RadioContainer>\n  );\n}\n","import SearchField from \"components/SearchField/SearchField\";\nimport { BottomContainer, DataEntryContainer, FilterContainer, SeparatingContainer } from \"./NoticesFilter.styled\";\nimport SelectorCategory from \"components/Selectors/SelectorCategory/SelectorCategory\";\nimport SelectorGender from \"components/Selectors/SelectorGender/SelectorGender\";\nimport SelectorType from \"components/Selectors/SelectType/SelectType\";\nimport SearchLocality from \"components/SearchLocality/SearchLocality\";\nimport RadioButtons from \"components/RadioButtons/RadioButtons\";\nimport { useState } from \"react\";\nimport ButtonGrayUniversal from \"components/Buttons/ButtonGrayUniversal/ButtonGrayUniversal\";\n\nexport default function NoticesFilter ({ setCurrentPage, setKeyword, setSelectedCategory, setSelectedType, setSelectedGender, onLocationChange, setSortCriteria, anyFilterSelected, handleResetFilters }){\n  const [resetSignal, setResetSignal] = useState(false);\n\n  const handleSearch = (searchTerm) => {\n    setKeyword(searchTerm);\n    setCurrentPage(1);\n  };\n\n  const handleResetFiltersWithSignal = () => {\n    handleResetFilters();\n    setResetSignal(prev => !prev);\n  };\n\nreturn (\n  <FilterContainer>\n    <DataEntryContainer>\n      <SearchField onSearch={handleSearch} width=\"265px\" border=\"none\" resetSignal={resetSignal} />\n      <SelectorCategory setSelectedCategory={setSelectedCategory} resetSignal={resetSignal} />\n      <SelectorGender setSelectedGender={setSelectedGender} resetSignal={resetSignal}/>\n      <SelectorType setSelectedType={setSelectedType} resetSignal={resetSignal} />\n      <SearchLocality onLocationChange={onLocationChange} />\n    </DataEntryContainer>\n\n    <SeparatingContainer />\n\n    <BottomContainer>\n      <RadioButtons setSortCriteria={setSortCriteria} resetSignal={resetSignal} />\n      {anyFilterSelected && (\n        <ButtonGrayUniversal label='Reset Filters' onClick={handleResetFiltersWithSignal} width='148px' />\n      )}\n    </BottomContainer>\n  </FilterContainer>\n)\n}","import { ContentContainer, Title } from \"common/GiobalStyles\";\nimport { NoticesContainer } from \"./Notices.styled\";\nimport NoticesList from \"components/NoticesList/NoticesList\";\nimport NoticesFilter from \"components/NoticesFilter/NoticesFilter\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { noticesInf } from \"../../redux/petLove/operations\";\nimport { selectNoticesInf } from \"../../redux/petLove/selector\";\nimport { Pagination } from \"components/Pagination/Pagination\";\n\nexport default function Notices() {\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [selectedGender, setSelectedGender] = useState(\"\");\n  const [locationId, setLocationId] = useState(\"\");\n  const [sortCriteria, setSortCriteria] = useState({ popular: null, price: null });\n  const [keyword, setKeyword] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const noticesData = useSelector(selectNoticesInf);  \n\n  const anyFilterSelected = selectedCategory || selectedType || selectedGender || locationId || sortCriteria.popular !== null || sortCriteria.price !== null || keyword;\n\n  const handleResetFilters = () => {\n    setSelectedCategory(\"\");\n    setSelectedType(\"\");\n    setSelectedGender(\"\");\n    setLocationId(\"\");\n    setSortCriteria({ popular: null, price: false });\n    setKeyword(\"\");\n    setCurrentPage(1);\n    console.log(\"ggggggggggggggggggggggggggggggg\")\n  };\n\n\n  const getCategory = (article) => {\n    if (article === \"Show all\") {\n      return '';\n    }\n    return article.toLowerCase();\n  };\n\n  useEffect(() => {\n    const category = getCategory(selectedCategory);\n    const species = getCategory(selectedType);\n    const sex = getCategory(selectedGender);\n\n    dispatch(noticesInf({\n      keyword, \n      byDate: true, \n      page: currentPage, \n      limit: 6, \n      category, \n      species, \n      sex, \n      locationId, \n      byPrice: sortCriteria.price, \n      byPopularity: sortCriteria.popular\n    }));\n  }, [dispatch, currentPage, keyword, selectedCategory, selectedType, selectedGender, locationId, sortCriteria.price, sortCriteria.popular]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n\n  const handleLocationChange = (selectedLocation) => {\n    setLocationId(selectedLocation.id)\n    console.log('Selected location:', selectedLocation.id);\n  };\n  \n  return (\n    <ContentContainer>\n      <NoticesContainer>\n        <Title>Find your favorite pet</Title>\n        <NoticesFilter \n          setCurrentPage={setCurrentPage} \n          setKeyword={setKeyword} \n          setSelectedCategory={setSelectedCategory}\n          setSelectedType={setSelectedType}\n          setSelectedGender={setSelectedGender}\n          onLocationChange={handleLocationChange}\n          setSortCriteria={setSortCriteria}\n          anyFilterSelected={anyFilterSelected}\n          handleResetFilters={handleResetFilters}\n        />\n\n        <div>\n          <NoticesList noticesData={noticesData} />    \n          <Pagination\n            currentPage={noticesData.page}\n            totalPages={noticesData.totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </NoticesContainer>\n    </ContentContainer>\n  );\n}  ","import Notices from \"components/Notices/Notices\";\n\nexport default function NoticesPage() {\n  return (\n    <Notices />\n  );\n}  "],"names":["PaginationConteiner","styled","_templateObject","_taggedTemplateLiteral","PaginationButton","_templateObject2","_ref","dis","color","_ref2","current","_ref3","_ref4","disabled","ThreeDots","_templateObject3","PaginationSvg","_templateObject4","Pagination","currentPage","totalPages","onPageChange","visiblePages","getVisiblePages","total","Array","from","length","_","i","startPage","endPage","Math","min","_jsxs","children","_jsx","onClick","href","concat","sprite","handlePrevBtn","max","map","page","handleNextBtn","SearchContainer","SearchInput","width","border","SearchButton","ClearButton","SearchField","onSearch","resetSignal","input","setInput","useState","resetSearchField","useCallback","useEffect","onSubmit","event","preventDefault","type","value","onChange","e","target","placeholder","handleClear","height","NoticesContainer","NoticesListContainer","NoticesList","noticesData","isArray","results","card","NoticesItem","_id","FilterContainer","DataEntryContainer","SeparatingContainer","BottomContainer","_templateObject5","Dropdown","DropdownSvg","DropdownButton","DropdownList","open","DropdownItem","SelectorCategory","setSelectedCategory","selectedArticle","setSelectedArticle","dropdownArticle","setDropdownArticle","dropdownRef","useRef","dispatch","useDispatch","categories","useSelector","selectCategoriesList","categoriesInf","handleOutsideClick","contains","document","addEventListener","removeEventListener","resetSelectorCategory","extendedCategories","toggleDropdown","ref","category","index","capitalizedCategory","string","charAt","toUpperCase","slice","handleItemClick","SelectorGender","setSelectedGender","sex","selectSexList","gendersInf","resetSelectorGender","StyledSimpleBar","SimpleBar","_templateObject6","SelectorType","setSelectedType","types","selectSpeciesList","typesInf","resetSelectorType","style","maxHeight","StyledSelect","Select","SearchLocality","onLocationChange","inputValue","setInputValue","options","setOptions","citiesData","selectCitiesList","citiesInf","filteredOptions","filter","city","cityEn","toLowerCase","includes","console","log","label","id","classNamePrefix","onInputChange","selectedOption","isClearable","RadioContainer","RadioGroup","Label","checked","StyledRadioButton","SvgX","RadioButtons","setSortCriteria","isPopular","setIsPopular","isExpensive","setIsExpensive","resetRadioButtons","popular","price","handlePopularChange","prev","handleUnpopularChange","handleCheapChange","handleExpensiveChange","NoticesFilter","setCurrentPage","setKeyword","anyFilterSelected","handleResetFilters","setResetSignal","searchTerm","ButtonGrayUniversal","handleResetFiltersWithSignal","Notices","selectedCategory","selectedType","selectedGender","locationId","setLocationId","sortCriteria","keyword","selectNoticesInf","getCategory","article","species","noticesInf","byDate","limit","byPrice","byPopularity","ContentContainer","Title","selectedLocation","NoticesPage"],"sourceRoot":""}