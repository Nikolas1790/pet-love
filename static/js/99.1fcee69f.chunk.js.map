{"version":3,"file":"static/js/99.1fcee69f.chunk.js","mappings":"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","sources":["components/LoginAndRegister/RegisterAndLogin.styled.js","components/Buttons/ButtonOrange/ButtonOrange.styled.js","components/Buttons/ButtonOrange/ButtonOrange.jsx","components/LoginAndRegister/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors'\nimport {  Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  width: 1280px;\n  height: 686px;\n  padding: 0  32px 32px 32px;  \n`\n///////////////// ing /////////////////////////////\nexport const ImgContainer = styled.div`\n  position: relative;\n`\nexport const PetImg = styled.img` \n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`\nexport const SmsImg = styled.img` \n  position: absolute;\n  bottom: 97px;\n  left: 61px;\n  width: 294px;\n  height: 121px;\n  border-radius: 20px;\n`\n\n\n///////////////// ing /////////////////////////////\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column; /* Устанавливаем направление столбца */\n  align-items: start; /* Выравниваем элементы по центру горизонтально */\n  justify-content: center; /* Выравниваем элементы по центру вертикально */\n  width: 592px;\n  height: 654px;\n  padding: 20px 84px;  \n  background: ${color.white};\n  border-radius: 60px;\n`\n\n\n\n\n\nexport const Title = styled.h2`\n  font-size: 54px;\n  font-weight: 700;\n  line-height: 1;\n  letter-spacing: -0.04em;\n  margin-bottom: 16px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.22;\n  letter-spacing: -0.03em;\n  margin-bottom: 32px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\n\n\n\n\n// export const FormBlock = styled.div`\n//   @media (min-width: 768px) {\n//     width: 323px;\n//   }\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-bottom: 16px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 424px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 52px;\n  border: 1px solid\t${({error, right}) => (error === \"true\" ? color.redWrong :(right ===\"true\" ? color.greenRight : color.blackPrimaryLight))};\n\n  border-radius: 30px;\n  padding: 16px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  stroke: ${color.orangePrimary};\n  fill: none;\n`;\n\nexport const TopRightSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  /* right: 15px; */\n  right: ${({right}) => (right || '15px' )};\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  fill: none;\n`;\n\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${({error}) => (error ? color.redWrong : color.greenRight )};\n  padding: 4px 0px 0px 16px;\n`;\n\n\n\n\n\n\n\nexport const AuthorizationLink = styled(NavLink)`\n  margin: 0 auto;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  letter-spacing: -0.03em;\n  color: ${color.blackPrimaryTranslucent};\n`;\n\nexport const AuthorizationLinkSpan = styled.span`\n  color: ${color.orangePrimary};\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const OrangeBtn = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.03em;;\n  height: 50px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 30px;\n\n  color: ${color.white};\n\n  /* border: 1px solid ${color.blackPrimaryLight}; */\nbackground: ${color.orangePrimary};\n\n\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    /* border: 1px solid ${color.orangePrimary}; */\n    background: ${color.orangePrimaryActive};\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); \n    outline: none;\n  }\n`","import { OrangeBtn } from \"./ButtonOrange.styled\";\n\nexport default function ButtonOrange({ className, label, onClick, width }) {\n  return (    \n    <OrangeBtn className={className} onClick={onClick} type=\"submit\" width={width} >\n      {label}\n    </OrangeBtn>    \n  )\n}","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ContentContainer } from 'common/GiobalStyles';\nimport { AuthorizationLink, AuthorizationLinkSpan, Container, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, ImgContainer, PetImg, SecureMessage, SmsImg, Text, Title, TopRightSvg } from './RegisterAndLogin.styled';\n// import { useDispatch } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { useState } from 'react';\nimport ButtonOrange from 'components/Buttons/ButtonOrange/ButtonOrange';\n// import { toast } from 'react-toastify';\n\n\n\nimport desctopRegisterDog from '../../img/loginAndRegister/DesctopRegisterCat.jpg';\nimport registerBlock from '../../img/loginAndRegister/registerBlock.jpg';\n\nconst initialValues = {\n  userName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n  \nconst schema = Yup.object({\n  userName: Yup.string().required('Required'),\n  email: Yup.string().matches(/^\\w+([.-]?\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n  confirmPassword: Yup.string().required(\"Required\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);  \n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const toggleConfigPasswordVisibility = () => {\n    setShowConfirmPassword((prevShowPassword) => !prevShowPassword);\n  }; \n  \n  const handleSubmit = async (values) => {\n    try {\n      // await dispatch(register(values)).unwrap();\n      // navigate('/dashboard');\n    } catch (error) {\n      // if (error === \"Request failed with status code 409\") {\n      //   toast.error(\"User with this email already exists.\");\n      // } else {\n      //   toast.error(\"Registration failed. Please try again later.\");\n      // }\n    }\n  }\n\n  return (\n    <ContentContainer>\n      <Container>\n        <ImgContainer>\n          <PetImg srcSet={desctopRegisterDog} alt=\"cat\" />\n          <SmsImg src={registerBlock} alt='message' />\n        </ImgContainer>\n\n        <FormContainer>\n          <Title>Registration</Title>          \n          <Text>Thank you for your interest in our platform. </Text>\n\n\n\n\n\n            <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields>  \n                    <FormConteiner>  \n              \n                      <FormFieldConteiner>\n                        <FormField\n                          id=\"userName\" \n                          name=\"userName\" \n                          type=\"userName\" \n                          placeholder=\"Name\" \n                          error={errors.userName && touched.userName ? \"true\" : \"\" } \n                          right={touched.userName && !errors.userName ? \"true\" : \"\"}\n                        />\n                        {touched.userName && (\n                          errors.userName ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.userName && !errors.userName && <SecureMessage error={errors.userName && touched.userName ? \"true\" : \"\" }>Name is secure</SecureMessage>}\n                       {touched.userName && errors.userName && <SecureMessage error={errors.userName && touched.userName ? \"true\" : \"\" }>Enter a valid Name</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"email\" \n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email\" \n                          error={errors.email && touched.email ? \"true\" : \"\" } \n                          right={touched.email && !errors.email ? \"true\" : \"\"}\n                        />\n                        {touched.email && (\n                          errors.email ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.email && !errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" } >Email is secure</SecureMessage>}\n                       {touched.email && errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" }>Enter a valid Email</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"password\" \n                          name=\"password\" \n                          type={showPassword ? \"text\" : \"password\"} \n                          placeholder=\"Password\" \n                          error={errors.password && touched.password ? \"true\" : \"\" } \n                          right={touched.password && !errors.password ? \"true\" : \"\"}\n                        />\n                        {touched.password && (\n                          errors.password ? (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.password && !errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" } >Password is secure</SecureMessage>}\n                       {touched.password && errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" }>Enter a valid Password</SecureMessage>}\n                       \n                        {showPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n\n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"confirmPassword\" \n                          name=\"confirmPassword\" \n                          type={showConfirmPassword ? \"text\" : \"password\"} \n                          placeholder=\"Confirm password\" \n                          error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" } \n                          right={touched.confirmPassword && !errors.confirmPassword ? \"true\" : \"\"}\n                        />\n                        {touched.confirmPassword && (\n                          errors.confirmPassword ? (\n                            <TopRightSvg  right=\"50px\">\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg  right=\"50px\">\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.confirmPassword && !errors.confirmPassword && <SecureMessage error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" } >Confirm password is secure</SecureMessage>}\n                       {touched.confirmPassword && errors.confirmPassword && <SecureMessage error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" }>Enter a valid Confirm password</SecureMessage>}\n\n                        {showConfirmPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n                            \n                    </FormConteiner>   \n                    <ButtonOrange label='Registration' />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>\n            \n            <AuthorizationLink to=\"/login\" >Already have an account? <AuthorizationLinkSpan>Login</AuthorizationLinkSpan></AuthorizationLink>\n       \n\n\n\n\n\n        </FormContainer>        \n      </Container>\n    </ContentContainer>\n  );\n}","import Register from \"components/LoginAndRegister/Register\";\n\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ImgContainer","_templateObject2","PetImg","_templateObject3","SmsImg","_templateObject4","FormContainer","_templateObject5","color","Title","_templateObject6","Text","_templateObject7","FormFields","_templateObject8","FormConteiner","_templateObject9","FormFieldConteiner","_templateObject10","FormField","Field","_templateObject11","_ref","error","right","EyeSvg","_templateObject12","TopRightSvg","_templateObject13","_ref2","SecureMessage","_templateObject14","_ref3","AuthorizationLink","NavLink","_templateObject15","AuthorizationLinkSpan","_templateObject16","OrangeBtn","width","ButtonOrange","className","label","onClick","_jsx","type","children","initialValues","userName","email","password","confirmPassword","schema","Yup","required","matches","min","oneOf","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showConfirmPassword","setShowConfirmPassword","togglePasswordVisibility","prevShowPassword","toggleConfigPasswordVisibility","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","stop","_x","apply","arguments","ContentContainer","_jsxs","srcSet","desctopRegisterDog","alt","src","Formik","validationSchema","onSubmit","errors","touched","Form","id","name","placeholder","href","concat","sprite","onMouseDown","e","preventDefault","to","LoginPage"],"sourceRoot":""}