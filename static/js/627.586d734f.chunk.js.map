{"version":3,"file":"static/js/627.586d734f.chunk.js","mappings":"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","sources":["components/MyNotices/MyNotices.styled.js","components/MyNotices/MyNotices.jsx","components/Buttons/EditUserBtn/EditUserBtn.styled.js","components/Modals/ModalEditUser/ModalEditUser.styled.js","components/Modals/ModalEditUser/ModalEditUser.jsx","components/Buttons/EditUserBtn/EditUserBtn.jsx","components/UserBlock/UserBlock.styled.js","components/UserBlock/UserBlock.jsx","components/UserCard/UserCard.styled.js","components/AddPetComponent/AddPetComponent.styled.js","components/AddPetComponent/AddPetComponent.jsx","components/UserCard/UserCard.jsx","components/Profile/Profile.jsx","pages/ProfilePage.jsx"],"sourcesContent":["import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 643px;\n  min-height: 674px;\n  background: yellow;\n`;\n\nexport const Tabs = styled.div`\n  display: flex;\n  margin-bottom: 32px;\n`;\n\nexport const Tab = styled.button`\n  padding: 12px 20px;\n  background-color: ${({ isActive }) => (isActive ? color.orangePrimary : '#FFF')};\n  color: ${({ isActive }) => (isActive ? '#FFF' : '#000')};\n\n  cursor: pointer;\n\n  /* &:hover {\n    background-color: #f0f0f0;\n  } */\n`;\n\nexport const NoticesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;","import { useState } from 'react';\nimport { Container, NoticesList, Tab, Tabs } from './MyNotices.styled';\nimport NoticesItem from 'components/NoticesItem/NoticesItem';\nimport { useSelector } from 'react-redux';\nimport { selectFavoritePets } from '../../redux/petLove/selector';\n\nexport default function MyNotices() {\n  const [activeTab, setActiveTab] = useState('favorites');\n  let favoritesList = useSelector(selectFavoritePets);\n  console.log(favoritesList)\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab); \n  };\n\n  return (\n    <Container>\n      <Tabs>\n      {/* <ButtonOrange label='My favorite pets' width='142px' onClick={() => handleTabClick('favorites')} /> */}\n        <Tab isActive={activeTab === 'favorites'} onClick={() => handleTabClick('favorites')}>\n          My favorite pets\n        </Tab>\n        <Tab isActive={activeTab === 'viewed'} onClick={() => handleTabClick('viewed')}>\n          Viewed\n        </Tab>\n      </Tabs>\n\n      <NoticesList>\n        {activeTab === 'favorites' && favoritesList.map((notice) => (\n          <NoticesItem key={notice.id} card={notice} />\n        ))}\n        {activeTab === 'viewed' && (\n          <p>ppppppp</p>\n        )}\n      </NoticesList>\n    </Container>\n  );\n}","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const EditUserBtnContainer = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 40px;\n`;\n\nexport const EditUserButton = styled.button`\n  fill: ${color.orangeLight};\n\n  transition: fill 0.3s linear;\n  :hover{\n    fill: ${color.orangeDim};\n  }\n`;\n\n","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\nimport {  Field } from \"formik\";\n\nexport const ModalEdit = styled.div`\n  position: relative;\n  width: 480px;\n  height: 580px;\n  background: ${color.white};\n  border-radius: 30px;\n  padding: 50px;\n`;\n\nexport const TitleModalEdit = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  color: ${color.blackPrimaryCard};\n  margin-bottom: 20px;\n`;\n\nexport const PhotoBlock = styled.div`\n  display: flex;\n  justify-content: center; \n  margin-bottom: 12px;\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n////////////////////////////////////////\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Input = styled(Field)`\n  width: 380px;\n  height: 52px;\n  padding: 16px;\n  margin-bottom: 16px;\n  border: 1px solid ${color.orangePrimary};\n  border-radius: 30px;\n\n`;\n\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > ${Input}:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;","import React from \"react\";\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport sprite from '../../../img/sprite.svg';\nimport XButton from \"components/XButton/XButton\";\nimport { ModalEdit,  FormContainer, TitleModalEdit, PhotoBlock, Input } from \"./ModalEditUser.styled\";\nimport ButtonOrange from \"components/Buttons/ButtonOrange/ButtonOrange\";\n\nconst schema = Yup.object().shape({\n  name: Yup.string(),\n  email: Yup.string().email(\"Invalid email format\").matches(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/, \"Invalid email format\"),\n  avatar: Yup.string().matches(/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/, \"Invalid URL format\"),\n  phone: Yup.string().matches(/^\\+38\\d{10}$/, \"Invalid phone number format\"),\n});\n\nexport default function ModalEditUser({ closeModals }) {\n\n  const user = {\n    avatar: null,\n    name: \"Name\",\n    email: \"name@gmail.com\",\n    phone: \"+380\"\n  };\n\n  const initialValues = {\n    avatar: user.avatar || '',\n    name: user.name || '',\n    email: user.email || '',\n    phone: user.phone || '',\n  };\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      await axios.post(\"/api/update-user\", values);\n      closeModals();\n    } catch (error) {\n      alert(\"Error updating user data: \" + error.message);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <ModalEdit>\n      <TitleModalEdit>Edit information</TitleModalEdit>\n      <PhotoBlock>\n        {user.avatar ? (\n          <img src={user.avatar} alt=\"User Avatar\" width={110} height={110} />\n        ) : (\n          <svg width={110} height={110}>\n            <use href={`${sprite}#icon-user-without-photo`} />\n          </svg>\n        )}\n      </PhotoBlock>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <FormContainer>\n              <Input type=\"text\" name=\"avatar\" placeholder=\"Avatar URL\" />\n              <ErrorMessage name=\"avatar\" component=\"div\" />\n\n              <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n              <ErrorMessage name=\"name\" component=\"div\" />\n\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n              <ErrorMessage name=\"email\" component=\"div\" />\n\n              <Input type=\"text\" name=\"phone\" placeholder=\"Phone\" />\n              <ErrorMessage name=\"phone\" component=\"div\" />\n\n              <ButtonOrange label='Save' type=\"submit\" />\n            </FormContainer>\n          </Form>\n        )}\n      </Formik>\n      <XButton closeModals={closeModals} />\n    </ModalEdit>\n  );\n}\n","import { useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { EditUserBtnContainer, EditUserButton } from './EditUserBtn.styled';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport ModalEditUser from 'components/Modals/ModalEditUser/ModalEditUser';\n\nexport default function EditUserBtn() {\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleLogout = () => {\n    setOpenModal(true)\n  };\n\n  return (\n    <EditUserBtnContainer>\n      <EditUserButton onClick={() => handleLogout()}>\n        <svg width={50} height={50}>\n          <use href={`${sprite}#icon-edit`} />\n        </svg>\n      </EditUserButton>  \n\n      <PortalModal active={openModal} setActive={setOpenModal}>\n        <ModalEditUser closeModals={() => setOpenModal()} />\n      </PortalModal>\n    </EditUserBtnContainer>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const UserBlockContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n\nexport const PhotoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const UploadPhoto = styled.p`\n  font-size: 14px;\n  margin-top: 8px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleInformation = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 20px;\n  margin-right: auto; \n`;\n\n\nexport const UserInfoContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const UserInfoItem = styled.li`\n  width: 440px;\n  height: 52px;\n  padding: 16px;  \n  border: 1px solid ${color.blackPrimaryLight};\n  border-radius: 30px;\n  font-size: 16px;\n\n  &:not(:last-child) {\n    margin-bottom: 14px;\n  }\n`;","import sprite from '../../img/sprite.svg';\nimport { PhotoContainer, TitleInformation, UploadPhoto, UserBlockContainer, UserInfoContainer, UserInfoItem } from './UserBlock.styled';\n\nexport default function UserBlock() {\n  const user = {\n    avatar: null,\n    name: \"Name\",\n    email: \"name@gmail.com|\",\n    phone: \"+380\"\n  };\n\n  return (\n    <UserBlockContainer>\n      <PhotoContainer>\n      {user.avatar ? (\n          <img src={user.avatar} alt=\"User Avatar\" width={110} height={110} />\n        ) : (\n          <svg width={110} height={110}>\n            <use href={`${sprite}#icon-user-without-photo`} />\n          </svg>\n        )}\n        <UploadPhoto>Upload photo</UploadPhoto>\n      </PhotoContainer>\n\n      <TitleInformation>My information</TitleInformation>\n      <UserInfoContainer>\n        <UserInfoItem>{user.name}</UserInfoItem>\n        <UserInfoItem>{user.email}</UserInfoItem>\n        <UserInfoItem>{user.phone}</UserInfoItem>\n      </UserInfoContainer>\n    </UserBlockContainer>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const UserCardBlock = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column; \n  width: 520px;\n  min-height: 674px;\n  background: ${color.white};\n  border-radius: 60px;\n  margin-right: 32px;\n  padding: 40px;\n`;\n\nexport const WrapperLogoutBtn = styled.div`\n  margin-top: auto;\n`;\n","import styled from 'styled-components'\n\nexport const AddPetBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n`\n\nexport const TitleMyPets = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-right: auto; \n`;","import ButtonNav from \"components/Buttons/ButtonNav/ButtonNav\";\nimport { AddPetBlock, TitleMyPets } from \"./AddPetComponent.styled\";\n\nexport default function AddPetComponent() {\n  return (\n    <AddPetBlock>\n      <TitleMyPets>My pets</TitleMyPets>\n      <ButtonNav to='/add-pet' label='Add pet' width='118px'  />\n    </AddPetBlock>\n  );\n}\n","import EditUserBtn from \"components/Buttons/EditUserBtn/EditUserBtn\";\nimport LogOutBtn from \"components/Buttons/LogOutBtn/LogOutBtn\";\nimport UserBlock from \"components/UserBlock/UserBlock\";\nimport { UserCardBlock, WrapperLogoutBtn } from \"./UserCard.styled\";\nimport AddPetComponent from \"components/AddPetComponent/AddPetComponent\";\n\nexport default function UserCard() {\n  return (\n    <UserCardBlock>      \n      <EditUserBtn />\n      <UserBlock />\n      <AddPetComponent />\n      <WrapperLogoutBtn>\n        <LogOutBtn page='profile' />\n      </WrapperLogoutBtn>\n    </UserCardBlock>    \n  );\n}  ","import { ContentContainer } from \"common/GiobalStyles\";\nimport MyNotices from \"components/MyNotices/MyNotices\";\nimport UserCard from \"components/UserCard/UserCard\";\n\nexport default function Profile() {\n  return (\n    <ContentContainer>\n      <UserCard />\n      <MyNotices />\n    </ContentContainer>\n  );\n}  ","import Profile from \"components/Profile/Profile\";\n\nexport default function ProfilePage() {\n  return (\n    <Profile />\n  );\n}  "],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Tabs","_templateObject2","Tab","_templateObject3","_ref","isActive","color","_ref2","NoticesList","_templateObject4","MyNotices","activeTab","setActiveTab","useState","favoritesList","useSelector","selectFavoritePets","console","log","handleTabClick","tab","_jsxs","children","_jsx","onClick","map","notice","NoticesItem","card","id","EditUserBtnContainer","EditUserButton","ModalEdit","TitleModalEdit","PhotoBlock","Input","Field","_templateObject5","FormContainer","_templateObject6","schema","Yup","shape","name","email","matches","avatar","phone","ModalEditUser","closeModals","user","initialValues","src","alt","width","height","href","concat","sprite","Formik","validationSchema","onSubmit","async","values","setSubmitting","axios","error","alert","message","_ref3","isSubmitting","Form","type","placeholder","ErrorMessage","component","ButtonOrange","label","XButton","EditUserBtn","openModal","setOpenModal","PortalModal","active","setActive","UserBlockContainer","PhotoContainer","UploadPhoto","TitleInformation","UserInfoContainer","UserInfoItem","UserBlock","UserCardBlock","WrapperLogoutBtn","AddPetBlock","TitleMyPets","AddPetComponent","ButtonNav","to","UserCard","LogOutBtn","page","Profile","ContentContainer","ProfilePage"],"sourceRoot":""}