{"version":3,"file":"static/js/47.5eda1bc8.chunk.js","mappings":"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","sources":["components/Buttons/ButtonOrange/ButtonOrange.styled.js","components/Buttons/ButtonOrange/ButtonOrange.jsx","components/LoginAndRegister/RegisterAndLogin.styled.js","components/LoginAndRegister/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import color from 'common/GlobalColors'\nimport styled from 'styled-components'\n\nexport const OrangeBtn = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  letter-spacing: -0.03em;;\n  height: 50px;\n  width: ${({ width }) => width || '100%'};\n  border-radius: 30px;\n\n  color: ${color.white};\n\n  /* border: 1px solid ${color.blackPrimaryLight}; */\nbackground: ${color.orangePrimary};\n\n\n  transition: all 0.25s linear;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    /* border: 1px solid ${color.orangePrimary}; */\n    background: ${color.orangePrimaryActive};\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); \n    outline: none;\n  }\n`","import { OrangeBtn } from \"./ButtonOrange.styled\";\n\nexport default function ButtonOrange({ className, label, onClick, width }) {\n  return (    \n    <OrangeBtn className={className} onClick={onClick} type=\"submit\" width={width} >\n      {label}\n    </OrangeBtn>    \n  )\n}","import color from 'common/GlobalColors'\nimport {  Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 32px;\n  width: 1280px;\n  height: 686px;\n  padding: 0  32px 32px 32px;  \n`\n///////////////// ing /////////////////////////////\nexport const ImgContainer = styled.div`\n  position: relative;\n`\nexport const PetImg = styled.img` \n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`\nexport const SmsImg = styled.img` \n  position: absolute;\n  bottom: 97px;\n  left: 61px;\n  width: 294px;\n  height: 121px;\n  border-radius: 20px;\n`\n\n\n///////////////// ing /////////////////////////////\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column; /* Устанавливаем направление столбца */\n  align-items: start; /* Выравниваем элементы по центру горизонтально */\n  justify-content: center; /* Выравниваем элементы по центру вертикально */\n  width: 592px;\n  height: 654px;\n  padding: 20px 84px;  \n  background: ${color.white};\n  border-radius: 60px;\n`\n\n\n\n\n\nexport const Title = styled.h2`\n  font-size: 54px;\n  font-weight: 700;\n  line-height: 1;\n  letter-spacing: -0.04em;\n  margin-bottom: 16px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.22;\n  letter-spacing: -0.03em;\n  margin-bottom: 32px;\n  /* @media (min-width: 768px) {\n    font-size: 54px;\n    font-weight: 600;\n    line-height: 1.1;\n  } */\n`\n\n\n\n\n\n// export const FormBlock = styled.div`\n//   @media (min-width: 768px) {\n//     width: 323px;\n//   }\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({page}) => (page === \"login\" ? '64px' : '32px')};\n  margin-bottom: 16px;\n`;\n\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 424px;\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 52px;\n  border: 1px solid\t${({error, right}) => (error === \"true\" ? color.redWrong :(right ===\"true\" ? color.greenRight : color.blackPrimaryLight))};\n\n  border-radius: 30px;\n  padding: 16px;\n  outline: none;\n  background: ${color.white};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  stroke: ${color.orangePrimary};\n  fill: none;\n`;\n\nexport const TopRightSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  /* right: 15px; */\n  right: ${({right}) => (right || '15px' )};\n  width: 22px;\n  height: 22px;\n  cursor: pointer;\n  fill: none;\n`;\n\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${({error}) => (error ? color.redWrong : color.greenRight )};\n  padding: 4px 0px 0px 16px;\n`;\n\n\n\n\n\n\n\nexport const AuthorizationLink = styled(NavLink)`\n  margin: 0 auto;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.43;\n  letter-spacing: -0.03em;\n  color: ${color.blackPrimaryTranslucent};\n`;\n\nexport const AuthorizationLinkSpan = styled.span`\n  color: ${color.orangePrimary};\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { ContentContainer } from 'common/GiobalStyles';\nimport { AuthorizationLink, AuthorizationLinkSpan, Container, EyeSvg, FormContainer, FormConteiner, FormField, FormFieldConteiner, FormFields, ImgContainer, PetImg, SecureMessage, SmsImg, Text, Title, TopRightSvg } from './RegisterAndLogin.styled';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../img/sprite.svg';\nimport { useState } from 'react';\nimport ButtonOrange from 'components/Buttons/ButtonOrange/ButtonOrange';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/operationsAuth';\n\n\nimport desctopRegisterDog from '../../img/loginAndRegister/DesctopRegisterCat.jpg';\nimport registerBlock from '../../img/loginAndRegister/registerBlock.jpg';\n\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n  \nconst schema = Yup.object({\n  name: Yup.string().required('Required'),\n  email: Yup.string().matches(/^\\w+([.-]?\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n  confirmPassword: Yup.string().required(\"Required\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);  \n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const toggleConfigPasswordVisibility = () => {\n    setShowConfirmPassword((prevShowPassword) => !prevShowPassword);\n  }; \n  \n  const handleSubmit = async (values) => {\n    const {  confirmPassword, ...dataToSend } = values; \n\n    try {\n      await dispatch(register( dataToSend)).unwrap();\n      navigate('/profile');\n    } catch (error) {\n      if (error === \"Request failed with status code 409\") {\n        toast.error(\"User with this email already exists.\");\n      } else {\n        toast.error(\"Registration failed. Please try again later.\");\n      }\n    }\n  }\n\n  return (\n    <ContentContainer>\n      <Container>\n        <ImgContainer>\n          <PetImg srcSet={desctopRegisterDog} alt=\"cat\" />\n          <SmsImg src={registerBlock} alt='message' />\n        </ImgContainer>\n\n        <FormContainer>\n          <Title>Registration</Title>          \n          <Text>Thank you for your interest in our platform. </Text>\n\n            <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n              {({ errors, touched }) => (\n                <Form>\n                  <FormFields>  \n                    <FormConteiner>  \n              \n                      <FormFieldConteiner>\n                        <FormField\n                          id=\"name\" \n                          name=\"name\" \n                          type=\"name\" \n                          placeholder=\"Name\" \n                          error={errors.name && touched.name ? \"true\" : \"\" } \n                          right={touched.name && !errors.name ? \"true\" : \"\"}\n                        />\n                        {touched.namee && (\n                          errors.name ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.name && !errors.name && <SecureMessage error={errors.name && touched.name ? \"true\" : \"\" }>Name is secure</SecureMessage>}\n                       {touched.name && errors.name && <SecureMessage error={errors.name && touched.name ? \"true\" : \"\" }>Enter a valid Name</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"email\" \n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"Email\" \n                          error={errors.email && touched.email ? \"true\" : \"\" } \n                          right={touched.email && !errors.email ? \"true\" : \"\"}\n                        />\n                        {touched.email && (\n                          errors.email ? (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg>\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.email && !errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" } >Email is secure</SecureMessage>}\n                       {touched.email && errors.email && <SecureMessage  error={errors.email && touched.email ? \"true\" : \"\" }>Enter a valid Email</SecureMessage>}\n                      </FormFieldConteiner>\n                        \n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"password\" \n                          name=\"password\" \n                          type={showPassword ? \"text\" : \"password\"} \n                          placeholder=\"Password\" \n                          error={errors.password && touched.password ? \"true\" : \"\" } \n                          right={touched.password && !errors.password ? \"true\" : \"\"}\n                        />\n                        {touched.password && (\n                          errors.password ? (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg right=\"50px\" >\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.password && !errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" } >Password is secure</SecureMessage>}\n                       {touched.password && errors.password && <SecureMessage error={errors.password && touched.password ? \"true\" : \"\" }>Enter a valid Password</SecureMessage>}\n                       \n                        {showPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            togglePasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n\n                      <FormFieldConteiner>\n                        <FormField \n                          id=\"confirmPassword\" \n                          name=\"confirmPassword\" \n                          type={showConfirmPassword ? \"text\" : \"password\"} \n                          placeholder=\"Confirm password\" \n                          error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" } \n                          right={touched.confirmPassword && !errors.confirmPassword ? \"true\" : \"\"}\n                        />\n                        {touched.confirmPassword && (\n                          errors.confirmPassword ? (\n                            <TopRightSvg  right=\"50px\">\n                              <use href={`${sprite}#icon-cross-small`} />\n                            </TopRightSvg>\n                          ) : (\n                            <TopRightSvg  right=\"50px\">\n                              <use href={`${sprite}#icon-check`} />\n                            </TopRightSvg>\n                          )\n                        )}\n                       {touched.confirmPassword && !errors.confirmPassword && <SecureMessage error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" } >Confirm password is secure</SecureMessage>}\n                       {touched.confirmPassword && errors.confirmPassword && <SecureMessage error={errors.confirmPassword && touched.confirmPassword ? \"true\" : \"\" }>Enter a valid Confirm password</SecureMessage>}\n\n                        {showConfirmPassword ? (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg onMouseDown={(e) => {\n                            e.preventDefault(); \n                            toggleConfigPasswordVisibility();\n                          }}>\n                            <use href={`${sprite}#icon-eye-off`} />\n                          </EyeSvg>\n                        )}\n                      </FormFieldConteiner>\n                            \n                    </FormConteiner>   \n                    <ButtonOrange label='Registration' />\n                  </FormFields>                    \n                </Form>\n              )}\n            </Formik>            \n            <AuthorizationLink to=\"/login\" >Already have an account? <AuthorizationLinkSpan>Login</AuthorizationLinkSpan></AuthorizationLink>\n       \n        </FormContainer>        \n      </Container>\n    </ContentContainer>\n  );\n}","import Register from \"components/LoginAndRegister/Register\";\n\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["OrangeBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","width","color","ButtonOrange","className","label","onClick","_jsx","type","children","Container","ImgContainer","_templateObject2","PetImg","_templateObject3","SmsImg","_templateObject4","FormContainer","_templateObject5","Title","_templateObject6","Text","_templateObject7","FormFields","_templateObject8","page","FormConteiner","_templateObject9","FormFieldConteiner","_templateObject10","FormField","Field","_templateObject11","_ref2","error","right","EyeSvg","_templateObject12","TopRightSvg","_templateObject13","_ref3","SecureMessage","_templateObject14","_ref4","AuthorizationLink","NavLink","_templateObject15","AuthorizationLinkSpan","_templateObject16","initialValues","name","email","password","confirmPassword","schema","Yup","required","matches","min","oneOf","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showConfirmPassword","setShowConfirmPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","toggleConfigPasswordVisibility","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","dataToSend","_context","prev","next","_objectWithoutProperties","_excluded","register","unwrap","t0","toast","stop","_x","apply","arguments","ContentContainer","_jsxs","srcSet","desctopRegisterDog","alt","src","Formik","validationSchema","onSubmit","errors","touched","Form","id","placeholder","namee","href","concat","sprite","onMouseDown","e","preventDefault","to","LoginPage"],"sourceRoot":""}