{"version":3,"file":"static/js/759.41c27db5.chunk.js","mappings":"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","sources":["components/MyNotices/MyNotices.jsx","components/Buttons/EditUserBtn/EditUserBtn.styled.js","components/Modals/ModalEditUser/ModalEditUser.styled.js","components/Modals/ModalEditUser/ModalEditUser.jsx","components/Buttons/EditUserBtn/EditUserBtn.jsx","components/AddPetComponent/AddPetComponent.styled.js","components/AddPetComponent/AddPetComponent.jsx","components/PetsList/PetsList.jsx","components/PetsBlock/PetsBlock.jsx","components/UserBlock/UserBlock.styled.js","components/UserBlock/UserBlock.jsx","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.jsx","components/Profile/Profile.jsx","pages/ProfilePage.jsx"],"sourcesContent":["\nexport default function MyNotices() {\n  return (\n      <div>qqqqqqqqqqqqqqqqqq</div>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const EditUserBtnContainer = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 40px;\n`;\n\nexport const EditUserButton = styled.button`\n  fill: ${color.orangeLight};\n\n  transition: fill 0.3s linear;\n  :hover{\n    fill: ${color.orangeDim};\n  }\n`;\n\n","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const ModalEdit = styled.div`\n  position: relative;\n  width: 480px;\n  height: 580px;\n  background: ${color.white};\n  border-radius: 30px;\n  padding: 50px;\n`;\n\nexport const TitleModalEdit = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 24px;\n  color: ${color.blackPrimaryCard};\n  margin-bottom: 20px;\n`;\n\nexport const PhotoBlock = styled.div`\n    display: flex;\n  justify-content: center; /* Center the image inside the PhotoBlock */\n  margin-bottom: 12px;\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n////////////////////////////////////////\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Input = styled.input`\n  width: 380px;\n  height: 52px;\n\n  padding: 16px;\n\n  margin-bottom: 16px;\n  border: 1px solid ${color.orangePrimary};\n  border-radius: 30px;\n\n  /* &:not(:last-child) {\n    margin-bottom: 16px;\n  } */\n`;\n\n\nexport const Button = styled.button`\n  background-color: ${color.primary};\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${color.primaryDark};\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > ${Input}:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport XButton from \"components/XButton/XButton\";\nimport { ModalEdit, ErrorMessage, Input, Button, FormContainer, TitleModalEdit, PhotoBlock } from \"./ModalEditUser.styled\";\nimport axios from \"axios\";\nimport sprite from '../../../img/sprite.svg';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(\"Name is required\"),\n  email: yup\n    .string()\n    .email(\"Invalid email format\")\n    .matches(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/, \"Invalid email format\")\n    .required(\"Email is required\"),\n  avatar: yup\n    .string()\n    .matches(/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/, \"Invalid URL format\")\n    .required(\"Avatar URL is required\"),\n  phone: yup\n    .string()\n    .matches(/^\\+38\\d{10}$/, \"Invalid phone number format\")\n    .required(\"Phone number is required\"),\n});\n\nexport default function ModalEditUser({ closeModals }) {\n\n  const user = {\n    avatar: null,\n    name: \"Name\",\n    email: \"name@gmail.com|\",\n    phone: \"+380\"\n  };\n\n\n  const {\n    register,\n    handleSubmit,\n    // control,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = async (data) => {\n    try {\n      // Send data to backend\n      await axios.post(\"/api/update-user\", data);\n      // Close modal on success\n      closeModals();\n    } catch (error) {\n      // Show error notification\n      alert(\"Error updating user data: \" + error.message);\n    }\n  };\n\n  return (\n    <ModalEdit>\n      <TitleModalEdit>Edit information</TitleModalEdit>\n      <PhotoBlock>\n        {user.avatar ? (\n            <img src={user.avatar} alt=\"User Avatar\" width={110} height={110} />\n          ) : (\n            <svg width={110} height={110}>\n              <use href={`${sprite}#icon-user-without-photo`} />\n            </svg>\n          )}\n      </PhotoBlock>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormContainer>\n          <Input type=\"text\" placeholder=\"Avatar URL\" {...register(\"avatar\")} />\n          {errors.avatar && <ErrorMessage>{errors.avatar.message}</ErrorMessage>}\n\n          <Input type=\"text\" placeholder=\"Name\" {...register(\"name\")} />\n          {errors.name && <ErrorMessage>{errors.name.message}</ErrorMessage>}\n\n          <Input type=\"email\" placeholder=\"Email\" {...register(\"email\")} />\n          {errors.email && <ErrorMessage>{errors.email.message}</ErrorMessage>}\n\n          <Input type=\"text\" placeholder=\"Phone\" {...register(\"phone\")} />\n          {errors.phone && <ErrorMessage>{errors.phone.message}</ErrorMessage>}\n\n          <Button type=\"submit\">Save</Button>\n        </FormContainer>\n      </form>\n      <XButton closeModals={closeModals} />\n    </ModalEdit>\n  );\n};\n","import { useState } from 'react';\nimport sprite from '../../../img/sprite.svg';\nimport { EditUserBtnContainer, EditUserButton } from './EditUserBtn.styled';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport ModalEditUser from 'components/Modals/ModalEditUser/ModalEditUser';\n\nexport default function EditUserBtn() {\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleLogout = () => {\n    setOpenModal(true)\n  };\n\n  return (\n    <EditUserBtnContainer>\n      <EditUserButton onClick={() => handleLogout()}>\n        <svg width={50} height={50}>\n          <use href={`${sprite}#icon-edit`} />\n        </svg>\n      </EditUserButton>  \n\n      <PortalModal active={openModal} setActive={setOpenModal}>\n        <ModalEditUser closeModals={() => setOpenModal()} />\n      </PortalModal>\n    </EditUserBtnContainer>    \n  );\n}  ","import styled from 'styled-components'\n\nexport const AddPetBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n`\n\nexport const TitleMyPets = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 20px;\n  margin-right: auto; \n`;","import ButtonNav from \"components/Buttons/ButtonNav/ButtonNav\";\nimport { AddPetBlock, TitleMyPets } from \"./AddPetComponent.styled\";\n\nexport default function AddPetComponent() {\n  return (\n    <AddPetBlock>\n      <TitleMyPets>My pets</TitleMyPets>\n      <ButtonNav to='/add-pet' label='Add pet' width='118px'  />\n    </AddPetBlock>\n  );\n}\n","export default function PetsList() {\n  return (\n    <div>\n      nnnnnnnnnnnnnnnnn\n    </div>\n  );\n}\n","import AddPetComponent from \"components/AddPetComponent/AddPetComponent\";\nimport PetsList from \"components/PetsList/PetsList\";\n\nexport default function PetsBlock() {\n\n  return (\n    <div>\n      <AddPetComponent />\n      <PetsList />\n    </div>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const UserBlockContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n\nexport const PhotoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const UploadPhoto = styled.p`\n  font-size: 14px;\n  margin-top: 8px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleInformation = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 20px;\n  margin-right: auto; \n`;\n\n\nexport const UserInfoContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const UserInfoItem = styled.li`\n  width: 440px;\n  height: 52px;\n  padding: 16px;  \n  border: 1px solid ${color.blackPrimaryLight};\n  border-radius: 30px;\n  font-size: 16px;\n\n  &:not(:last-child) {\n    margin-bottom: 14px;\n  }\n`;","import sprite from '../../img/sprite.svg';\nimport { PhotoContainer, TitleInformation, UploadPhoto, UserBlockContainer, UserInfoContainer, UserInfoItem } from './UserBlock.styled';\n\nexport default function UserBlock() {\n  const user = {\n    avatar: null,\n    name: \"Name\",\n    email: \"name@gmail.com|\",\n    phone: \"+380\"\n  };\n\n  return (\n    <UserBlockContainer>\n      <PhotoContainer>\n      {user.avatar ? (\n          <img src={user.avatar} alt=\"User Avatar\" width={110} height={110} />\n        ) : (\n          <svg width={110} height={110}>\n            <use href={`${sprite}#icon-user-without-photo`} />\n          </svg>\n        )}\n        <UploadPhoto>Upload photo</UploadPhoto>\n      </PhotoContainer>\n\n      <TitleInformation>My information</TitleInformation>\n      <UserInfoContainer>\n        <UserInfoItem>{user.name}</UserInfoItem>\n        <UserInfoItem>{user.email}</UserInfoItem>\n        <UserInfoItem>{user.phone}</UserInfoItem>\n      </UserInfoContainer>\n    </UserBlockContainer>    \n  );\n}  ","import color from \"common/GlobalColors\";\nimport styled from \"styled-components\";\n\nexport const UserCardBlock = styled.div`\n  position: relative;\n  width: 520px;\n  min-height: 674px;\n  background: ${color.white};\n  border-radius: 60px;\n  margin-right: 32px;\n  padding: 40px;\n`;\n\n","import EditUserBtn from \"components/Buttons/EditUserBtn/EditUserBtn\";\nimport LogOutBtn from \"components/Buttons/LogOutBtn/LogOutBtn\";\nimport PetsBlock from \"components/PetsBlock/PetsBlock\";\nimport UserBlock from \"components/UserBlock/UserBlock\";\nimport { UserCardBlock } from \"./UserCard.styled\";\n\nexport default function UserCard() {\n\n  return (\n    <UserCardBlock>      \n      <EditUserBtn />\n      <UserBlock />\n      <PetsBlock />\n      <LogOutBtn page='profile' />\n    </UserCardBlock>    \n  );\n}  ","import { ContentContainer } from \"common/GiobalStyles\";\nimport MyNotices from \"components/MyNotices/MyNotices\";\nimport UserCard from \"components/UserCard/UserCard\";\n\nexport default function Profile() {\n  return (\n    <ContentContainer>\n      <UserCard />\n      <MyNotices />\n    </ContentContainer>\n  );\n}  ","import Profile from \"components/Profile/Profile\";\n\nexport default function ProfilePage() {\n  return (\n    <Profile />\n  );\n}  "],"names":["MyNotices","_jsx","children","EditUserBtnContainer","styled","_templateObject","_taggedTemplateLiteral","EditUserButton","_templateObject2","color","ModalEdit","TitleModalEdit","PhotoBlock","_templateObject3","ErrorMessage","_templateObject4","Input","_templateObject5","Button","_templateObject6","FormContainer","_templateObject7","schema","yup","shape","name","required","email","matches","avatar","phone","ModalEditUser","_ref","closeModals","user","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","_jsxs","src","alt","width","height","href","concat","sprite","onSubmit","async","axios","data","error","alert","message","type","placeholder","XButton","EditUserBtn","openModal","setOpenModal","useState","onClick","PortalModal","active","setActive","AddPetBlock","TitleMyPets","AddPetComponent","ButtonNav","to","label","PetsList","PetsBlock","UserBlockContainer","PhotoContainer","UploadPhoto","TitleInformation","UserInfoContainer","UserInfoItem","UserBlock","UserCardBlock","UserCard","LogOutBtn","page","Profile","ContentContainer","ProfilePage"],"sourceRoot":""}